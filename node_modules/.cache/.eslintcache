[{"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\index.js":"1","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\App.js":"2","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\reportWebVitals.js":"3","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\NavigationBar.jsx":"4","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Jumbotron.jsx":"5","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\HomeUpdates.jsx":"6","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\GiftCard.jsx":"7","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\store\\index.js":"8","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\giftCard.js":"9","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\actions\\index.js":"10","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\login.js":"11","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Footer.jsx":"12","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userChat.js":"13","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\home.jsx":"14","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\ActivateRegistration.jsx":"15","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\BackOffice.jsx":"16","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\CreateTournament.jsx":"17","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\TournamentOverview.jsx":"18","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Organizer.jsx":"19","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\BackOfficeNav.jsx":"20","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\ParticipantCheckin.jsx":"21","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\LogIn.jsx":"22","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Settings.jsx":"23","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Match.jsx":"24","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Participants.jsx":"25","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userPreference.js":"26","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Table.jsx":"27","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Chat.jsx":"28","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\UserPage.jsx":"29","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Tournaments.jsx":"30","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentDetails.jsx":"31","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\GroupStructure.jsx":"32","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userData.js":"33","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\DeleteConfirm.jsx":"34","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\GeneralSettings.jsx":"35","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\RegistrationForm.jsx":"36","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentInfo.jsx":"37","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Rules.jsx":"38","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\PlayerList.jsx":"39","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\MatchType.jsx":"40","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\StageType.jsx":"41","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\ConfigureStage.jsx":"42","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\usersReducer.js":"43","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\getTournaments.js":"44","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\postTournament.js":"45","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\DisputeReport.jsx":"46","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\Structures.jsx":"47","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Overview.jsx":"48","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\UserProfile.jsx":"49","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Fixtures.jsx":"50","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentCard.jsx":"51","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\Tournaments\\TournamentsPage.jsx":"52","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Spinner.jsx":"53","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\SignUp.jsx":"54","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\registerUser.js":"55","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\ChangePassword.jsx":"56","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\meReducer.js":"57","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\OrganizerAccount.jsx":"58","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\OrganiserLogin.jsx":"59","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\OrganiserSignUp.jsx":"60","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Avatar.jsx":"61","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\LoggedInOrganizer.jsx":"62","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\adminLogin.js":"63","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\index.js":"64","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\App.js":"65","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\store\\index.js":"66","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\usersReducer.js":"67","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\login.js":"68","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\postTournament.js":"69","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\giftCard.js":"70","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userChat.js":"71","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userData.js":"72","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userPreference.js":"73","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\getTournaments.js":"74","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\adminLogin.js":"75","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\registerUser.js":"76","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\meReducer.js":"77","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\actions\\index.js":"78","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\NavigationBar.jsx":"79","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\Avatar.jsx":"80","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\pages\\Home.jsx":"81","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\SignUp.jsx":"82","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\LoginPage.jsx":"83","C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\SignIn.jsx":"84"},{"size":493,"mtime":1671904313786,"results":"85","hashOfConfig":"86"},{"size":4274,"mtime":1676200871500,"results":"87","hashOfConfig":"86"},{"size":362,"mtime":1671885620717,"results":"88","hashOfConfig":"86"},{"size":4753,"mtime":1676756257121,"results":"89","hashOfConfig":"86"},{"size":1159,"mtime":1675772842503,"results":"90","hashOfConfig":"86"},{"size":3319,"mtime":1676717902756,"results":"91","hashOfConfig":"86"},{"size":11964,"mtime":1674404891224,"results":"92","hashOfConfig":"86"},{"size":1658,"mtime":1676291437385,"results":"93","hashOfConfig":"86"},{"size":670,"mtime":1671958401081,"results":"94","hashOfConfig":"86"},{"size":16124,"mtime":1676812368855,"results":"95","hashOfConfig":"86"},{"size":725,"mtime":1676290899877,"results":"96","hashOfConfig":"86"},{"size":3650,"mtime":1676359418163,"results":"97","hashOfConfig":"86"},{"size":680,"mtime":1672332681608,"results":"98","hashOfConfig":"86"},{"size":417,"mtime":1672644191958,"results":"99","hashOfConfig":"86"},{"size":13645,"mtime":1676210055546,"results":"100","hashOfConfig":"86"},{"size":4544,"mtime":1676704445589,"results":"101","hashOfConfig":"86"},{"size":5685,"mtime":1675979446215,"results":"102","hashOfConfig":"86"},{"size":17711,"mtime":1676712668549,"results":"103","hashOfConfig":"86"},{"size":4133,"mtime":1676711390503,"results":"104","hashOfConfig":"86"},{"size":4312,"mtime":1676314478404,"results":"105","hashOfConfig":"86"},{"size":7731,"mtime":1676210239330,"results":"106","hashOfConfig":"86"},{"size":7924,"mtime":1676296775064,"results":"107","hashOfConfig":"86"},{"size":6481,"mtime":1676209737557,"results":"108","hashOfConfig":"86"},{"size":4667,"mtime":1676312735973,"results":"109","hashOfConfig":"86"},{"size":14891,"mtime":1676314441666,"results":"110","hashOfConfig":"86"},{"size":718,"mtime":1672854579005,"results":"111","hashOfConfig":"86"},{"size":2812,"mtime":1676313563367,"results":"112","hashOfConfig":"86"},{"size":7984,"mtime":1676814557103,"results":"113","hashOfConfig":"86"},{"size":6716,"mtime":1676813001602,"results":"114","hashOfConfig":"86"},{"size":3720,"mtime":1676116105415,"results":"115","hashOfConfig":"86"},{"size":8320,"mtime":1674947017128,"results":"116","hashOfConfig":"86"},{"size":6550,"mtime":1676313003613,"results":"117","hashOfConfig":"86"},{"size":629,"mtime":1672942818036,"results":"118","hashOfConfig":"86"},{"size":1907,"mtime":1676195914143,"results":"119","hashOfConfig":"86"},{"size":11712,"mtime":1676210123649,"results":"120","hashOfConfig":"86"},{"size":4667,"mtime":1674947556240,"results":"121","hashOfConfig":"86"},{"size":1349,"mtime":1674389321769,"results":"122","hashOfConfig":"86"},{"size":361,"mtime":1674389497884,"results":"123","hashOfConfig":"86"},{"size":1713,"mtime":1674923342643,"results":"124","hashOfConfig":"86"},{"size":4906,"mtime":1676209994407,"results":"125","hashOfConfig":"86"},{"size":4052,"mtime":1676210013514,"results":"126","hashOfConfig":"86"},{"size":33557,"mtime":1676209966333,"results":"127","hashOfConfig":"86"},{"size":642,"mtime":1674823489889,"results":"128","hashOfConfig":"86"},{"size":734,"mtime":1674855017831,"results":"129","hashOfConfig":"86"},{"size":367,"mtime":1674902932655,"results":"130","hashOfConfig":"86"},{"size":5397,"mtime":1676210095696,"results":"131","hashOfConfig":"86"},{"size":4379,"mtime":1676210286626,"results":"132","hashOfConfig":"86"},{"size":5207,"mtime":1676313512396,"results":"133","hashOfConfig":"86"},{"size":7298,"mtime":1676765349214,"results":"134","hashOfConfig":"86"},{"size":1265,"mtime":1676313200308,"results":"135","hashOfConfig":"86"},{"size":1911,"mtime":1675966746226,"results":"136","hashOfConfig":"86"},{"size":1136,"mtime":1675967224703,"results":"137","hashOfConfig":"86"},{"size":631,"mtime":1676716930876,"results":"138","hashOfConfig":"86"},{"size":7400,"mtime":1676205085974,"results":"139","hashOfConfig":"86"},{"size":706,"mtime":1676122489950,"results":"140","hashOfConfig":"86"},{"size":3449,"mtime":1675993570033,"results":"141","hashOfConfig":"86"},{"size":601,"mtime":1676112970434,"results":"142","hashOfConfig":"86"},{"size":9649,"mtime":1676710827992,"results":"143","hashOfConfig":"86"},{"size":7842,"mtime":1676710677893,"results":"144","hashOfConfig":"86"},{"size":9623,"mtime":1676204940121,"results":"145","hashOfConfig":"86"},{"size":236,"mtime":1676577471432,"results":"146","hashOfConfig":"86"},{"size":1364,"mtime":1676711692288,"results":"147","hashOfConfig":"86"},{"size":771,"mtime":1676291325866,"results":"148","hashOfConfig":"86"},{"size":493,"mtime":1671904313786,"results":"149","hashOfConfig":"150"},{"size":347,"mtime":1676892363699,"results":"151","hashOfConfig":"150"},{"size":1658,"mtime":1676291437385,"results":"152","hashOfConfig":"150"},{"size":642,"mtime":1674823489889,"results":"153","hashOfConfig":"150"},{"size":725,"mtime":1676290899877,"results":"154","hashOfConfig":"150"},{"size":367,"mtime":1674902932655,"results":"155","hashOfConfig":"150"},{"size":670,"mtime":1671958401081,"results":"156","hashOfConfig":"150"},{"size":680,"mtime":1672332681608,"results":"157","hashOfConfig":"150"},{"size":629,"mtime":1672942818036,"results":"158","hashOfConfig":"150"},{"size":718,"mtime":1672854579005,"results":"159","hashOfConfig":"150"},{"size":734,"mtime":1674855017831,"results":"160","hashOfConfig":"150"},{"size":771,"mtime":1676291325866,"results":"161","hashOfConfig":"150"},{"size":706,"mtime":1676122489950,"results":"162","hashOfConfig":"150"},{"size":601,"mtime":1676112970434,"results":"163","hashOfConfig":"150"},{"size":16124,"mtime":1676812368855,"results":"164","hashOfConfig":"150"},{"size":600,"mtime":1676891442911,"results":"165","hashOfConfig":"150"},{"size":236,"mtime":1676577471432,"results":"166","hashOfConfig":"150"},{"size":239,"mtime":1676898395849,"results":"167","hashOfConfig":"150"},{"size":5339,"mtime":1676898878602,"results":"168","hashOfConfig":"150"},{"size":1583,"mtime":1676898902061,"results":"169","hashOfConfig":"150"},{"size":4155,"mtime":1676900405827,"results":"170","hashOfConfig":"150"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"rwtgbp",{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"174"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"174"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"174"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"174"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"174"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"174"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"174"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"174"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"174"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"174"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"174"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"174"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"174"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"174"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"174"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"174"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"174"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"174"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"174"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"174"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"174"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"174"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"174"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"174"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"174"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"174"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"174"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"174"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"174"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"174"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"174"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"174"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"174"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"174"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"174"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"174"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y23dfo",{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\index.js",[],[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\App.js",["464","465"],[],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../src/styling/home.css\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport GiftCard from \"./components/GiftCard\";\nimport LogInPage from \"./pages/registration/SignUp\";\nimport SignIn from \"./pages/registration/LogIn\";\nimport UserPage from \"./pages/userPage/UserPage\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Organizer from \"./pages/backoffice/Organizer\";\nimport TournamentOverview from \"./pages/backoffice/TournamentOverview\";\nimport BackOffice from \"./pages/backoffice/BackOffice\";\nimport ActivateRegistration from \"./pages/backoffice/ActivateRegistration\";\nimport ParticipantCheckin from \"./pages/backoffice/ParticipantCheckin\";\nimport Settings from \"./pages/backoffice/Settings\";\nimport Match from \"./pages/backoffice/Match\";\nimport Participants from \"./pages/backoffice/Participants\";\nimport TournamentDetails from \"./components/TournamentDetails\";\nimport GeneralSettings from \"./pages/backoffice/GeneralSettings\";\nimport MatchType from \"./pages/backoffice/structureStages/MatchType\";\nimport StageType from \"./pages/backoffice/structureStages/StageType\";\nimport ConfigureStage from \"./pages/backoffice/structureStages/ConfigureStage\";\nimport DisputeReport from \"./pages/backoffice/DisputeReport\";\nimport Structures from \"./pages/backoffice/structureStages/Structures\";\nimport TournamentsPage from \"./pages/Tournaments/TournamentsPage.jsx\";\nimport OrganizerSignIn from \"./pages/registration/OrganiserLogin\";\nimport OrganiserSignUp from \"./pages/registration/OrganiserSignUp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        {/* <NavigationBar /> */}\n        <Routes>\n          <Route element={<Home />} path=\"/\" />\n          <Route element={<GiftCard />} path=\"/giftcard\" />\n          <Route element={<LogInPage />} path=\"/sign-up\" />\n          <Route element={<SignIn />} path=\"/sign-in\" />\n          <Route element={<UserPage />} path=\"/user-page\" />\n          <Route element={<BackOffice />} path=\"/backoffice\" />\n          <Route element={<OrganizerSignIn />} path=\"/organiser/signIn\" />\n          <Route\n            element={<TournamentOverview />}\n            path=\"/backoffice/projects/overview/:tournamentId\"\n          />\n          <Route\n            element={<Settings />}\n            path=\"/backoffice/projects/settings/:tournamentId\"\n          />\n          <Route\n            element={<Participants />}\n            path=\"/backoffice/projects/participants/:tournamentId\"\n          />\n          <Route\n            element={<ActivateRegistration />}\n            path=\"/backoffice/projects/settings/:tournament/registration\"\n          />\n          <Route\n            element={<Match />}\n            path=\"/backoffice/projects/settings/:tournament/matches\"\n          />\n          <Route\n            element={<ParticipantCheckin />}\n            path=\"/backoffice/projects/settings/:tournament/participants\"\n          />\n          <Route\n            element={<TournamentDetails />}\n            path=\"/tournaments/:tournamentId\"\n          />\n          <Route element={<OrganiserSignUp />} path=\"organiser/signUp\" />\n          <Route\n            element={<GeneralSettings />}\n            path=\"/backoffice/projects/settings/:tournamentId/edit\"\n          />\n          <Route\n            element={<MatchType />}\n            path=\"/backoffice/projects/structures/:tournamentId/stages\"\n          />\n          <Route\n            element={<StageType />}\n            path=\"/backoffice/projects/structures/:tournamentId/stages/:typeId\"\n          />\n          <Route\n            element={<ConfigureStage />}\n            path=\"/backoffice/projects/structures/:tournamentId/stages/:typeId/:configType\"\n          />\n          <Route\n            element={<DisputeReport />}\n            path=\"/backoffice/projects/:tournamentId/reports/disputes\"\n          />\n          <Route\n            element={<Structures />}\n            path=\"/backoffice/projects/:tournamentId/structures\"\n          />\n          <Route element={<TournamentsPage />} path=\"/tournaments\" />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\NavigationBar.jsx",["466","467","468"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Jumbotron.jsx",["469","470"],[],"import { Container } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport video from \"../videos/Bunker_-_The_Gaming_Lounge__Design_Walkthrough_AdobeExpress.mp4\";\r\nimport coverImg from \"../img/fifa23.jpg\";\r\n\r\nconst Jumbotron = () => {\r\n  return (\r\n    <Container className=\"jumbotron\" fluid>\r\n      <video id=\"video-background\" preload autoPlay loop muted>\r\n        <source src={video} type=\"video/mp4\" />\r\n      </video>\r\n\r\n      <div className=\"into  \">\r\n        <div className=\"into-content d-none d-lg-block pb-5\">\r\n          <h1 className=\"h1-join-call \">JOIN NOW</h1>\r\n          <h2 className=\"h2-join-call py-2\">\r\n            AND STAND A CHANCE TO WIN CASH PRIZE{\" \"}\r\n          </h2>\r\n          {/* <span className=\"dollar-prize px-3\">$$$</span> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"into mt-5 textColor \">\r\n        <div className=\"into-content d-lg-none pt-5  pb-5\">\r\n          <h2 className=\"textColor3 h2-join-call \">Live experience</h2>\r\n          <h1 className=\"textColor h2-join-call\">Join Impuls community </h1>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default Jumbotron;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\HomeUpdates.jsx",["471","472","473","474","475"],[],"import { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport \"../styling/spinner.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport giftcard from \"../img/playstation_store.jpg\";\r\nimport fifa23 from \"../img/fifa23 .jpg\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport logo from \"../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport tournament from \"../img/tournament.webp\";\r\nimport mk from \"../img/mk.avif\";\r\nimport TournamentCard from \"./TournamentCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getTournaments } from \"../redux/actions\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst HomeUpdates = () => {\r\n  const tournaments = useSelector((state) => state.tournaments.tournaments);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.tournaments.isLoading);\r\n  useEffect(() => {\r\n    dispatch(getTournaments());\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"textColor\">\r\n      {isLoading && <Spinner />}\r\n\r\n      <h1 className=\"d-flex mb-5 featured-leagues\"> Tournaments</h1>\r\n\r\n      <Row>\r\n        {tournaments.tournaments &&\r\n          tournaments.tournaments.map((tournament) => (\r\n            <Col md={6} lg={4} className=\"mb-4\">\r\n              <TournamentCard tournament={tournament} />\r\n            </Col>\r\n          ))}\r\n        <Col md={6} lg={4} className=\"mb-4\">\r\n          <Card className=\"featured-games\">\r\n            <Card.Img variant=\"top\" src={mk} />\r\n            <Card.Body>\r\n              <Card.Title className=\"textColor d-flex\">\r\n                <strong>Mortal Kombat Tournament</strong>\r\n              </Card.Title>\r\n              <div className=\" d-flex\">\r\n                <Icon.Calendar2Event size={30} />\r\n                <span>Registration Coming Soon </span>\r\n              </div>\r\n              {/* <Card.Text className=\"bg-dark py-4 my-3 px-2 textColor d-flex\">\r\n                Tournaments by Impuls Gaming\r\n                <img\r\n                  className=\"league-provider-img ml-2\"\r\n                  src={logo}\r\n                  alt=\"logo\"\r\n                />\r\n              </Card.Text> */}\r\n              <Link\r\n                to=\"/sign-up\"\r\n                className=\"w-100 d-flex mt-4 justify-content-end\"\r\n              >\r\n                {\" \"}\r\n                <Button disabled variant=\"danger\">\r\n                  Registration Opens Soon\r\n                </Button>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <h2 className=\"my-5 d-flex featured-league\">WHAT'S NEW</h2>\r\n\r\n      {/* <Spinner /> */}\r\n      <Row>\r\n        <Col lg={4} md={6} className=\"mb-4 \">\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={giftcard} />\r\n            <Card.Body>\r\n              <Card.Title className=\"textColor\">Gift Cards</Card.Title>\r\n              <Card.Text className=\"textColor\">\r\n                Gift Cards now available to order for your loved ones\r\n              </Card.Text>\r\n              <Link to={\"/giftcard\"}>\r\n                {\" \"}\r\n                <Button variant=\"danger\">Buy Gift Card</Button>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default HomeUpdates;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\GiftCard.jsx",["476","477","478","479"],[],"import { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { giftCardInf } from \"../redux/actions/index.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport logo from \"../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer.jsx\";\r\n\r\nconst GiftCard = () => {\r\n  const [formData, updateFormData] = useState(\"\");\r\n  const [sendDate, setSendDate] = useState(new Date());\r\n  console.log(\r\n    format(new Date(sendDate).setDate(sendDate.getDate() + 7), \"MM/dd/yyyy\")\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = useState(undefined);\r\n  const [name, setName] = useState(\"\");\r\n  const [senderName, setSenderName] = useState(\"\");\r\n  const [senderSurname, setSenderSurname] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.giftData.isLoading);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(undefined);\r\n  const handleAmount = (e) => {\r\n    setAmount(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleSenderName = (e) => {\r\n    setSenderName(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleSenderSurname = (e) => {\r\n    setSenderSurname(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleSurname = (e) => {\r\n    setSurname(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n  const handlePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    dispatch(giftCardInf(giftFormData));\r\n  };\r\n\r\n  const giftFormData = {\r\n    amount: amount,\r\n    name: name,\r\n    surname: surname,\r\n    message: message,\r\n    email: email,\r\n    phone: phone,\r\n    date: sendDate,\r\n  };\r\n  // const handleChange = (e) => {\r\n  //   updateFormData({\r\n  //     ...formData,\r\n\r\n  //     // Trimming any whitespace\r\n  //     [e.target.name]: e.target.value.trim(),\r\n\r\n  //   });\r\n\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    // ... submit to API\r\n  };\r\n\r\n  return (\r\n    <Container className=\"main-container\" fluid>\r\n      <Row className=\"giftcard-preview-nav py-2 \">\r\n        <Col className=\"d-flex flex-column ml-5\">\r\n          <Link className=\"mr-auto\" to={\"/\"}>\r\n            <img className=\"logo-img \" src={logo} alt=\"\" />\r\n          </Link>\r\n          <span className=\"mr-auto textColor\">LIVE EXPIRIENCE</span>\r\n        </Col>\r\n      </Row>\r\n      <Container className=\"  textColor\">\r\n        <Row>\r\n          <Col\r\n            md={12}\r\n            lg={5}\r\n            className=\"input-section gift-container mt-5  mt-5 \"\r\n          >\r\n            <Form onSubmit={handleSubmit}>\r\n              <h3 className=\"mt-2\">Give a Gift</h3>\r\n              <h6>Choose amount</h6>\r\n              <hr />\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"mb-3\"\r\n                controlId=\"formHorizontalEmail\"\r\n              >\r\n                <Form.Label column sm={2}>\r\n                  Amount*\r\n                </Form.Label>\r\n                <Col md={9}>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"10\"\r\n                    min={0}\r\n                    required\r\n                    // onChange={handleChange}\r\n                    onChange={handleAmount}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <h6>Personalise</h6>\r\n              <hr />\r\n              <Form.Group className=\"d-flex flex-cart \">\r\n                <Form.Label column sm={2}>\r\n                  To*\r\n                </Form.Label>\r\n\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Control\r\n                      placeholder=\"First name\"\r\n                      required\r\n                      onChange={handleName}\r\n                      className=\"mb-3\"\r\n                    />\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <Form.Control\r\n                      placeholder=\"Last name\"\r\n                      required\r\n                      onChange={handleSurname}\r\n                      className=\"mb-3\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group className=\"d-flex flex-cart mb-3\">\r\n                <Form.Label column sm={2}>\r\n                  From*\r\n                </Form.Label>\r\n\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Control\r\n                      placeholder=\"First name\"\r\n                      required\r\n                      // onChange={handleChange}\r\n                      onChange={handleSenderName}\r\n                      className=\"mb-3\"\r\n                    />\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <Form.Control\r\n                      placeholder=\"Last name\"\r\n                      required\r\n                      onChange={handleSenderSurname}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 d-flex flex-cart align-items-center\">\r\n                <Form.Label className=\"mr-4\">Message</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  onChange={handleMessage}\r\n                  maxLength={100}\r\n                />\r\n              </Form.Group>\r\n              <h6>Schedule Delivery</h6>\r\n              <hr />\r\n\r\n              <Form.Group className=\"d-flex flex-cart  align-items-center\">\r\n                <Form.Label className=\"mr-4 text-nowrap\">Send To*</Form.Label>\r\n\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Recipient Email\"\r\n                        onChange={handleEmail}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Control\r\n                        type=\"tel\"\r\n                        placeholder=\"Recipient WhatsApp Number\"\r\n                        required\r\n                        onChange={handlePhone}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 d-flex flex-cart\">\r\n                <Form.Label column md={3} className=\"px-0\">\r\n                  Delivery Date *\r\n                </Form.Label>\r\n                <Col md={12} className=\"px-0 mx-0\">\r\n                  <div className=\"px-0\">\r\n                    <DatePicker\r\n                      className=\"datepicker py-2 px-4\"\r\n                      selected={sendDate}\r\n                      onChange={(date) => setSendDate(date)}\r\n                      showTimeSelect\r\n                      dateFormat=\"Pp\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Form.Group>\r\n              <div className=\"d-flex justify-content-flex-end mt-4 mb-3\">\r\n                <button\r\n                  className=\"checkout-btn py-1 px-4 ml-auto w-100\"\r\n                  type=\"submit\"\r\n                >\r\n                  CheckOut\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col md={12} lg={6} className=\"d-none d-sm-block mt-5 mx-3\">\r\n            <h3 className=\"mt-5\">Card Preview</h3>\r\n            <div className=\"d-flex giftcard-section mx-1 py-0  mt-5 mb-5\">\r\n              <div column md={3} className=\"mr-2  giftcard-preview py-3 px-2\">\r\n                <img className=\"logo-img mb-3\" src={logo} alt=\"impuls logo\" />\r\n                <div className=\"card-preview\">\r\n                  <div className=\" mb-2\">\r\n                    <Icon.Phone size={20} />\r\n                    <h6 className=\"py-0 my-0\">Phone</h6>\r\n                    <span>+48-79-4144-892</span>\r\n                  </div>\r\n                  <div className=\" mb-2\">\r\n                    <Icon.GeoAltFill size={20} />\r\n                    <h6 className=\"py-0 my-0\">Address</h6>\r\n                    <span>123 Ave St, Bulawayo</span>\r\n                  </div>\r\n                  <div>\r\n                    <Icon.EnvelopeFill size={20} />\r\n                    <h6 className=\"py-0 my-0\">Email</h6>\r\n                    <span>hello@impulsgaming.com</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                column\r\n                md={9}\r\n                className=\"  preview-content ml-3 d-flex flex-column justify-content-center\"\r\n              >\r\n                <div>\r\n                  <h3 className=\"mb-5 pb-2\">Impuls Gift Card</h3>\r\n                  <h6\r\n                    className=\"d-flex justify-content-end  \"\r\n                    style={amount ? { color: \"red\" } : { color: \"black\" }}\r\n                  >\r\n                    $USD <span className=\"ml-2 \">{amount}</span>\r\n                  </h6>\r\n                </div>\r\n                <div className=\"card-preview-info d-flex \">\r\n                  <span className=\"d-flex mr-3\">To:</span>\r\n                  <span className=\"recipient-info mb-0\">\r\n                    {name} {surname}{\" \"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"card-preview-info d-flex my-3\">\r\n                  <span className=\"d-flex mr-3\">From:</span>\r\n                  <span className=\"recipient-info mb-0\">\r\n                    {senderName} {senderSurname}{\" \"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"card-preview-info d-flex \">\r\n                  <span className=\"d-flex mr-3\">Amount: $</span>\r\n                  <span className=\"recipient-info mb-0\">{amount} </span>\r\n                </div>\r\n                <div className=\"card-preview-info d-flex my-3 \">\r\n                  <span className=\"d-flex mr-3\">Expires:</span>\r\n                  <span className=\"recipient-info mb-0\">\r\n                    {format(\r\n                      new Date(sendDate).setDate(sendDate.getDate() + 7),\r\n                      \"MM/dd/yyyy\"\r\n                    )}{\" \"}\r\n                  </span>\r\n                </div>\r\n                {message && (\r\n                  <div className=\"card-preview-info d-flex align-items-center mb-3 \">\r\n                    <>\r\n                      <span className=\"d-flex mr-3\">Message:</span>\r\n                      <span className=\"recipient-info mb-0 message \">\r\n                        {message}\r\n                      </span>\r\n                    </>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Link to={\"/\"} className=\"d-flex  mb-4  justify-content-end\">\r\n              <Button\r\n                className=\" text-center px-5 primary-btn w-25   textColor \"\r\n                variant=\"primary\"\r\n              >\r\n                Back\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\nexport default GiftCard;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\store\\index.js",["480"],[],"import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport giftData from \"../reducers/giftCard\";\r\nimport localStorage from \"redux-persist/lib/storage\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\r\nimport signInToken from \"../reducers/login.js\";\r\nimport userChat from \"../reducers/userChat\";\r\nimport tournaments from \"../reducers/getTournaments\";\r\nimport userPreference from \"../reducers/userPreference\";\r\nimport userData from \"../reducers/userData\";\r\nimport users from \"../reducers/usersReducer.js\";\r\nimport postTournament from \"../reducers/postTournament\";\r\nimport registerUser from \"../reducers/registerUser\";\r\nimport getMe from \"../reducers/meReducer\";\r\nimport adminSignInToken from \"../reducers/adminLogin\";\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: localStorage,\r\n  transforms: [\r\n    encryptTransform({\r\n      secretKey: \"E1a2g3le\",\r\n    }),\r\n  ],\r\n};\r\n\r\nconst bigReducer = combineReducers({\r\n  giftData: giftData,\r\n  accessToken: signInToken,\r\n  userChat: userChat,\r\n  tournaments: tournaments,\r\n  preference: userPreference,\r\n  userData: userData,\r\n  users: users,\r\n  tournament: postTournament,\r\n  registerUser: registerUser,\r\n  me: getMe,\r\n  adminToken: adminSignInToken,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, bigReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\nexport default store;\r\nexport const persistor = persistStore(store);\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\giftCard.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\actions\\index.js",["481","482"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\login.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Footer.jsx",["483"],[],"import { Col, Container, ListGroup, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  const date = new Date();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"background footer container-fluid mt-5 mb-3 textColor\">\r\n      <Container className=\"pt-4\">\r\n        <Row>\r\n          <Col md={6} lg={3}>\r\n            <ListGroup variant=\"flush\" className=\"navbar-nav\">\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link>\r\n                  <Icon.Facebook color=\"#4267B2\" size={25} />\r\n                </Link>\r\n                <Link>\r\n                  <Icon.Instagram color=\"#cd486b\" size={25} />\r\n                </Link>\r\n                <Link>\r\n                  <Icon.Twitter color=\"#1DA1F2\" size={25} />\r\n                </Link>\r\n                <Link>\r\n                  <Icon.Linkedin color=\"#1DA1F2\" size={25} />\r\n                </Link>\r\n                <Link>\r\n                  <Icon.Youtube color=\"red\" size={25} />\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Media Center</Link>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Contact Us</Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <ListGroup variant=\"flush\" className=\"navbar-nav\">\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor \">Investor Relations</Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Legal Notices</Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\"textColor\">Service Code</Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <ListGroup variant=\"flush\" className=\"navbar-nav\">\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Help Center</Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Jobs</Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={6} lg={3}>\r\n            <ListGroup variant=\"flush\" className=\"navbar-nav\">\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link to={\"/giftcard\"} className=\" textColor\">\r\n                  Gift Cards\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Terms Of Use</Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Privacy</Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className=\"text-left px-0\">\r\n                <Link className=\" textColor\">Corporate Information</Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <hr />\r\n      <Link className=\" textColor \">\r\n        @{date.getFullYear()} Impuls Gaming. All rights reserved\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userChat.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\home.jsx",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\ActivateRegistration.jsx",["484","485","486","487"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament } from \"../../redux/actions\";\r\n\r\nconst ActivateRegistration = () => {\r\n  const params = useParams();\r\n  const [isRegistration, setIsRegistration] = useState(false);\r\n  const [isAutoRegistration, setIsAutoRegistration] = useState(false);\r\n  const [isEmailNotification, setIsEmailNotification] = useState(false);\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n  const [refusalMessage, setRefusalMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournament\r\n  );\r\n  const [registrationOpens, setRegistrationOpens] = useState(\"\");\r\n  const [registrationCloses, setRegistrationCloses] = useState(\"\");\r\n  const [key, setKey] = useState(\"activation\");\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  // const ()=>{setIsRegistration()} = () => {\r\n  //   isRegistration ? setIsRegistration(false) : setIsRegistration(true);\r\n  // };\r\n  const handleValidationMessage = (e) => {\r\n    setValidationMessage(e.target.value);\r\n  };\r\n  const handleRefusalMessage = (e) => {\r\n    setRefusalMessage(e.target.value);\r\n  };\r\n  const handleIsEmailNotification = () => {\r\n    isEmailNotification === false\r\n      ? setIsEmailNotification(true)\r\n      : setIsEmailNotification(false);\r\n  };\r\n  const handleIsAutoRegistration = () => {\r\n    isAutoRegistration === false\r\n      ? setIsAutoRegistration(true)\r\n      : setIsAutoRegistration(false);\r\n  };\r\n  const registrationSettings = {\r\n    registration: {\r\n      activation: {\r\n        isRegistration: isRegistration,\r\n        registrationOpeningDate: registrationOpens.toString(),\r\n        registrationClosingDate: registrationCloses.toString(),\r\n      },\r\n      options: {\r\n        isRegistrationAutomatically: isAutoRegistration,\r\n        isEmailNotificationAutomatically: isEmailNotification,\r\n      },\r\n      customization: {\r\n        validationMessage: validationMessage,\r\n        refusalMessage: refusalMessage,\r\n      },\r\n    },\r\n  };\r\n  const handleUpdate = () => {\r\n    dispatch(editTournament(registrationSettings, tournament._id));\r\n    setUpdate(true);\r\n  };\r\n  const user = useSelector((state) => state.me.me);\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card bring-top mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <Card className=\"registration-card mx-auto\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex my-2\">Registration Settings</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey={key}\r\n                defaultActiveKey=\"profile\"\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mb-3 mx-auto d-flex justify-content-center mx-5 px-5\"\r\n              >\r\n                <Tab eventKey=\"activation\" title=\"Activation\">\r\n                  <span className=\" d-flex\">Enable Registration?</span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"Yes\"\r\n                          onClick={() => {\r\n                            setIsRegistration(true);\r\n                          }}\r\n                          className=\"mr-3\"\r\n                        />\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          onClick={() => {\r\n                            setIsRegistration(false);\r\n                          }}\r\n                          name=\"register\"\r\n                          label=\"No\"\r\n                        />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                    <Form.Label className=\"d-flex\">\r\n                      Registration Opening\r\n                    </Form.Label>\r\n                    <Form.Group className=\"\">\r\n                      <DatePicker\r\n                        className=\"datepicker py-2 px-4 w-100\"\r\n                        selected={registrationOpens}\r\n                        placeholderText={new Date()}\r\n                        onChange={(date) => setRegistrationOpens(date)}\r\n                        showTimeSelect\r\n                        dateFormat=\"Pp\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                    <Form.Label className=\"d-flex\">\r\n                      Registration Closing\r\n                    </Form.Label>\r\n                    <Form.Group className=\"\">\r\n                      <DatePicker\r\n                        className=\"datepicker py-2 px-4 w-100\"\r\n                        selected={registrationCloses}\r\n                        placeholderText={new Date()}\r\n                        onChange={(date) => setRegistrationCloses(date)}\r\n                        showTimeSelect\r\n                        dateFormat=\"Pp\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"options\" title=\"Options\">\r\n                  <span className=\" d-flex align-items-center mt-5\">\r\n                    Accept registrations automatically?\r\n                    <OverlayTrigger\r\n                      placement=\"top\"\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">\r\n                          If enabled, pending registrations will automatically\r\n                          be accepted.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <span\r\n                        variant=\"light\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                      >\r\n                        <Icon.QuestionCircleFill />\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"Yes\"\r\n                          onClick={handleIsAutoRegistration}\r\n                          className=\"mr-3\"\r\n                        />\r\n\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          onClick={handleIsAutoRegistration}\r\n                          name=\"register\"\r\n                          label=\"No\"\r\n                        />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <span className=\" d-flex align-items-center mt-5\">\r\n                    Enable Organizer Notification Email?\r\n                    <OverlayTrigger\r\n                      placement=\"top\"\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">\r\n                          If enabled, users with the permission \"Manage the\r\n                          registrations\" will receive an email for each new\r\n                          request.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <span\r\n                        variant=\"light\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                      >\r\n                        <Icon.QuestionCircleFill />\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"Yes\"\r\n                          onClick={handleIsEmailNotification}\r\n                          className=\"mr-3\"\r\n                        />\r\n\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          onClick={handleIsEmailNotification}\r\n                          name=\"register\"\r\n                          label=\"No\"\r\n                        />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"customization\" title=\"Customization\">\r\n                  <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                    <Form.Label className=\"mr-4 d-flex\">\r\n                      Validation message{\" \"}\r\n                      <OverlayTrigger\r\n                        placement=\"top\"\r\n                        overlay={\r\n                          <Tooltip id=\"tooltip-disabled\">\r\n                            This text will appear in the email sent when you\r\n                            accept a registration request. This allows you to\r\n                            provide, if necessary, information concerning the\r\n                            participation in the tournament.\r\n                          </Tooltip>\r\n                        }\r\n                      >\r\n                        <span\r\n                          variant=\"light\"\r\n                          className=\"d-inline-flex align-items-center\"\r\n                        >\r\n                          <Icon.QuestionCircleFill />\r\n                        </span>\r\n                      </OverlayTrigger>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={3}\r\n                      onChange={handleValidationMessage}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                    <Form.Label className=\"mr-4 d-flex\">\r\n                      Refusal message{\" \"}\r\n                      <OverlayTrigger\r\n                        placement=\"top\"\r\n                        overlay={\r\n                          <Tooltip id=\"tooltip-disabled\">\r\n                            This text will appear in the email sent when you\r\n                            refuse a registration request. This allows you to\r\n                            provide, if necessary, additional information\r\n                            regarding the refusal.\r\n                          </Tooltip>\r\n                        }\r\n                      >\r\n                        <span\r\n                          variant=\"light\"\r\n                          className=\"d-inline-flex align-items-center\"\r\n                        >\r\n                          <Icon.QuestionCircleFill />\r\n                        </span>\r\n                      </OverlayTrigger>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={3}\r\n                      onChange={handleRefusalMessage}\r\n                    />\r\n                  </Form.Group>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ActivateRegistration;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\BackOffice.jsx",["488"],[],"import { Col, Container, Row, Button, Alert } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport Organizer from \"./Organizer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { adminLogout, getTournaments } from \"../../redux/actions\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport OrganizerAccount from \"./OrganizerAccount\";\r\nimport Avatar from \"../../components/Avatar\";\r\n\r\nconst BackOffice = () => {\r\n  const navigate = useNavigate();\r\n  const [profileClicked, setProfileClicked] = useState(false);\r\n  const user = useSelector((state) => state.me.me);\r\n  const [organizerAccountClicked, setOrganizerAccountClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.tournaments.isLoading);\r\n  const isError = useSelector((state) => state.tournaments.isError);\r\n  const projects = useSelector((state) => state.tournaments.tournaments);\r\n  useEffect(() => {\r\n    dispatch(getTournaments());\r\n  }, []);\r\n  const handleProfileClicked = () => {\r\n    profileClicked ? setProfileClicked(false) : setProfileClicked(true);\r\n  };\r\n  const handleOrganizerAccountClicked = () => {\r\n    organizerAccountClicked\r\n      ? setOrganizerAccountClicked(false)\r\n      : setOrganizerAccountClicked(true);\r\n  };\r\n  const handleLogout = async () => {\r\n    await dispatch(adminLogout(user._id));\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col\r\n          md={3}\r\n          lg={3}\r\n          xl={2}\r\n          className=\" my-projects giftcard-preview-nav d-flex flex-column d-xs-none d-sm-none d-md-none d-lg-block\"\r\n        >\r\n          {/* <div className=\"d-flex flex-column justify-content-between\"> */}\r\n          <div>\r\n            <img className=\" mt-4 logo-img\" src={logo} alt=\"\" />\r\n            <hr className=\"hr\" />\r\n            <h3 className=\"d-flex\">My Projects</h3>\r\n          </div>\r\n          <div\r\n            className={`organizer-profile ${\r\n              profileClicked ? \"active\" : \"\"\r\n            } w-75`}\r\n          >\r\n            {organizerAccountClicked && (\r\n              <Button\r\n                onClick={() => setOrganizerAccountClicked(false)}\r\n                className=\"primary-btn w-75 mr-3 textColor3\"\r\n              >\r\n                Back\r\n              </Button>\r\n            )}\r\n            <hr className=\"hr\" />\r\n            <Link\r\n              onClick={handleProfileClicked}\r\n              className=\"d-flex justify-content-between align-items-center textColor \"\r\n            >\r\n              <div>\r\n                <Avatar\r\n                  src={user.avatar}\r\n                  alt=\"Profile Avatar\"\r\n                  className=\"avatar\"\r\n                  width={40}\r\n                  height={40}\r\n                />\r\n                <span className=\"ml-1\">{user.nickname}</span>\r\n              </div>\r\n              <Icon.CaretDownFill size={15} />\r\n            </Link>\r\n            <div className=\"d-flex flex-column align-items-start\">\r\n              <Link\r\n                onClick={handleOrganizerAccountClicked}\r\n                className={`my-3  ${\r\n                  organizerAccountClicked ? \"\" : \"textColor\"\r\n                }`}\r\n              >\r\n                <span>Account</span>\r\n              </Link>\r\n              <Link onClick={handleLogout} className=\"textColor\">\r\n                <span>Logout</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          {/* </div> */}\r\n        </Col>\r\n        <Col lg={9} md={12} className=\"\">\r\n          {isLoading && (\r\n            <div className=\"mt-5 spinner d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n          {!isError && (\r\n            <Alert variant=\"danger\" className=\"mt-5\">\r\n              <Alert.Heading>!You got an error!</Alert.Heading>\r\n              <p>\r\n                Something went wrong on our side, we are working on it, we\r\n                apologies for the inconvenience caused\r\n              </p>\r\n            </Alert>\r\n          )}\r\n          {projects.totalTournaments && !organizerAccountClicked && (\r\n            <Organizer projects={projects} />\r\n          )}\r\n          {organizerAccountClicked && <OrganizerAccount user={user} />}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default BackOffice;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\CreateTournament.jsx",["489"],[],"import { Modal, Row, Container, Col, Button, Form } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport fifa23 from \"../../img/fifa23.jpg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createTournament, getTournaments } from \"../../redux/actions\";\r\n\r\nconst CreateTournament = ({ visible, onhide }) => {\r\n  const dispatch = useDispatch();\r\n  const navagation = useNavigate();\r\n  const [tournament, setTournament] = useState(\"\");\r\n  const [platformChecked, setPlatformCheck] = useState(\"\");\r\n  const [size, setSize] = useState(undefined);\r\n\r\n  const tournaments = useSelector((state) => state.tournaments.tournaments);\r\n  const notUnique = tournaments.tournaments.find(\r\n    (name) => name.name === tournament\r\n  );\r\n\r\n  const formValues = {\r\n    name: tournament,\r\n    discipline_name: \"FIFA 23\",\r\n    platform: platformChecked,\r\n    size: Number(size),\r\n    discipline_cover: \"\",\r\n  };\r\n  const handleTournament = (e) => {\r\n    setTournament(e.target.value);\r\n  };\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value);\r\n  };\r\n  const handleData = async () => {\r\n    await dispatch(createTournament(formValues));\r\n    await dispatch(getTournaments());\r\n    onhide();\r\n    navagation.navigate(`/backoffice/projects/overview/${tournament}`);\r\n  };\r\n  return (\r\n    <Modal\r\n      scrollable\r\n      show={visible}\r\n      size=\"lg\"\r\n      onHide={onhide}\r\n      className=\"modal-hieght textColor\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"d-flex justify-content-between w-100\">\r\n          <span>Create new tournament</span>\r\n          <Link>\r\n            <Icon.X\r\n              onClick={onhide}\r\n              size={30}\r\n              className=\"d-flex justify-content-end btn-close textColor\"\r\n            />\r\n          </Link>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"py-0 mt-3 px-4\">\r\n        <Container>\r\n          <Row className=\"mx-auto w-100  mb-5\">\r\n            <Form className=\"w-100\">\r\n              <Form.Group className=\"mb-3 w-100\">\r\n                <Form.Label>Tournament name*</Form.Label>\r\n                <Form.Control\r\n                  className=\"w-100\"\r\n                  type=\"text\"\r\n                  required\r\n                  onChange={handleTournament}\r\n                />\r\n                {notUnique && (\r\n                  <span className=\" blink_me ml-2 mt-2 textColor\">\r\n                    Tournament name already exist\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Form>\r\n          </Row>\r\n          <div className=\"my-2\">Discipline</div>\r\n          <Row>\r\n            {[...Array(4)].map((discipline) => (\r\n              <Col md={2} className=\"mr-5\">\r\n                <img className=\"discipline-img\" src={fifa23} alt=\"\" />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form className=\"w-100\">\r\n                <Form.Group className=\"my-3 w-100\">\r\n                  <Form.Control\r\n                    className=\"w-100\"\r\n                    type=\"text\"\r\n                    placeholder=\"chosen game\"\r\n                    value=\"FIFA 23\"\r\n                    onChange={handleSize}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"my-2\">Platform</div>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"primary-btn textColor\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  setPlatformCheck(\"Playstation 5\");\r\n                }}\r\n              >\r\n                Playstation 5\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <Button\r\n                className=\"primary-btn textColor\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  setPlatformCheck(\"Playstation 4\");\r\n                }}\r\n              >\r\n                Playstation 4\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <Button\r\n                className=\"primary-btn textColor\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  setPlatformCheck(\"XBox\");\r\n                }}\r\n              >\r\n                XBox\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form className=\"w-100\">\r\n                <Form.Group className=\"my-3 w-100\">\r\n                  <Form.Label>Size*</Form.Label>\r\n                  <Form.Control\r\n                    className=\"w-100\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    required\r\n                    onChange={handleSize}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"my-5 \">\r\n            <div className=\"ml-auto\">\r\n              <Button onClick={onhide} variant=\"outline-primary\">\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                disabled={notUnique || !tournament || !size || !platformChecked}\r\n                type=\"submit\"\r\n                onClick={handleData}\r\n                className=\"primary-btn ml-3 textColor\"\r\n              >\r\n                <Icon.Plus size={30} />\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default CreateTournament;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\TournamentOverview.jsx",["490","491","492"],[],"import {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Dropdown,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport fifa from \"../../img/fifa23.jpg\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getTournaments, getUsers } from \"../../redux/actions\";\r\nconst URL = process.env.REACT_APP_BE_PROD_URL;\r\n\r\nconst TournamentOverview = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isCheckIn, setIsCheckIn] = useState(false);\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const isLoading = useSelector((state) => state.tournaments.isLoading);\r\n  // const tournament = useSelector((state) => state.tournament.tournament);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n  useEffect(() => {\r\n    dispatch(getUsers(`${URL}/users?limit=10`));\r\n    dispatch(getTournaments());\r\n  }, []);\r\n  // const setup = 50;\r\n  let setup = 0;\r\n\r\n  if (\r\n    tournament.participants.isCheck_in &&\r\n    tournament.registration.activation.isRegistration\r\n  ) {\r\n    setup = 100;\r\n  } else if (\r\n    tournament.participants.isCheck_in ||\r\n    tournament.registration.activation.isRegistration\r\n  ) {\r\n    setup = 50;\r\n  } else {\r\n    setup = 0;\r\n  }\r\n\r\n  const pending = 0;\r\n  const running = 0;\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      {tournament.name === params.tournamentId && (\r\n        <Row>\r\n          <Col lg={2} className=\"px-0\">\r\n            <BackOfficeNav data={tournament} user={user} page={\"overview\"} />\r\n          </Col>\r\n          <Col lg={10} className=\"my-5 px-5\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3 className=\"d-flex mb-4 \">Overview</h3>\r\n\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  <span className=\"textColor2 notification-bell\">\r\n                    <Icon.BellFill size={35} />\r\n                    <span className=\"notification-message text-primary text-small bg-white\">\r\n                      <strong>1</strong>\r\n                    </span>\r\n                  </span>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={() =>\r\n                      navigate(\r\n                        `/backoffice/projects/${tournament.name}/reports/disputes`\r\n                      )\r\n                    }\r\n                  >\r\n                    Louis vs Sage\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <Row className=\" mb-5\">\r\n              <Col>\r\n                <Card style={{ height: \"16rem\" }}>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"d-flex  \">\r\n                          <img\r\n                            className=\"tournament-name-img\"\r\n                            src={fifa}\r\n                            alt=\"\"\r\n                          />\r\n                          <div className=\"d-flex flex-column\">\r\n                            <span className=\"d-flex ml-2\">\r\n                              {tournament.name}\r\n                            </span>{\" \"}\r\n                            <span className=\"d-flex ml-2\">\r\n                              {\" \"}\r\n                              {tournament.discipline_name}\r\n                            </span>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"my-4 mx-2 d-flex justify-content-between\">\r\n                      <Col>\r\n                        <span className=\"d-flex\">SETUP</span>\r\n                        <ProgressBar now={setup} visuallyHidden />\r\n                      </Col>{\" \"}\r\n                      <Col>\r\n                        <span className=\"d-flex\"> PENDING</span>\r\n                        <ProgressBar now={pending} visuallyHidden />\r\n                      </Col>{\" \"}\r\n                      <Col>\r\n                        <span className=\"d-flex\">RUNNING</span>\r\n                        <ProgressBar now={running} visuallyHidden />\r\n                      </Col>{\" \"}\r\n                    </Row>\r\n\r\n                    {setup !== 100 && (\r\n                      <Card.Text>\r\n                        <Icon.InfoCircleFill size={15} />\r\n                        <span>\r\n                          {\" \"}\r\n                          You should now enable the registration or manually add\r\n                          participants. You could also create the tournament\r\n                          structure.\r\n                        </span>\r\n                      </Card.Text>\r\n                    )}\r\n\r\n                    {setup === 100 && (\r\n                      <Card.Text>\r\n                        <Icon.InfoCircleFill size={15} />\r\n                        <span className=\"text-primary\">\r\n                          {\" \"}\r\n                          You should wait for participants to register and then\r\n                          choose to accept or refuse them.\r\n                        </span>\r\n                      </Card.Text>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card style={{ height: \"16rem\" }}>\r\n                  <Card.Body>\r\n                    <Row className=\"d-flex justify-content-between align-items-center mb-3 mx-1\">\r\n                      <span>Participants</span>\r\n                      <Button className=\"primary-btn ml-3 textColor\">\r\n                        <Icon.Plus size={30} />\r\n                        Add\r\n                      </Button>\r\n                    </Row>\r\n                    <hr className=\"hr\" />\r\n                    {!tournament.participants.isCheck_in && (\r\n                      <>\r\n                        <Card.Text>\r\n                          You can manually create participants, especially if\r\n                          you do not use the registration. You may configure the\r\n                          check-in either way.\r\n                        </Card.Text>\r\n                        <Link\r\n                          to={`/backoffice/projects/settings/${tournament.name}/participants`}\r\n                        >\r\n                          <Icon.Gear size={25} />\r\n                          <span className=\" link-btm-bar\">\r\n                            Configure check-in\r\n                          </span>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                    {tournament.participants.isCheck_in && (\r\n                      <Card.Text>\r\n                        <div>\r\n                          <div className=\"d-flex justify-content-around mb-3\">\r\n                            <div className=\"text-primary\">\r\n                              <h2>\r\n                                {tournament.tournamentParticipants.length}\r\n                              </h2>\r\n                              <span>Participants </span>\r\n                            </div>\r\n                            {isCheckIn && (\r\n                              <div className=\"text-success\">\r\n                                <h2>0</h2>\r\n                                <span>Checked in </span>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"text-secondary\">\r\n                              <h2>{tournament.size}</h2>\r\n                              <span>Tournament size</span>\r\n                            </div>\r\n                          </div>\r\n                          {tournament.participants.isCheck_in && (\r\n                            <div className=\"d-flex flex-column\">\r\n                              <span className=\"text-success\">\r\n                                Participant check-in enabled\r\n                              </span>\r\n                              {tournament.participants.checkInClosingDate && (\r\n                                <span className=\"text-muted text-small\">\r\n                                  Open until{\" \"}\r\n                                  {format(\r\n                                    new Date(\r\n                                      tournament.participants.checkInClosingDate.toString()\r\n                                    ),\r\n                                    \"dd MMM yyyy 'at' HH:mm\"\r\n                                  )}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {!tournament.participants.isCheck_in && (\r\n                          <Link\r\n                            to={`/backoffice/projects/settings/${tournament.name}/registration/`}\r\n                          >\r\n                            <Icon.Gear size={25} />\r\n                            <span className=\" link-btm-bar\">\r\n                              Configure check-in\r\n                            </span>\r\n                          </Link>\r\n                        )}\r\n                      </Card.Text>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ height: \"16rem\" }}>\r\n                  <Card.Body>\r\n                    <Row className=\"d-flex justify-content-between align-items-center mb-3 mx-1\">\r\n                      <span>Structure</span>\r\n                      {tournament.structure.general.name !== \"name\" && (\r\n                        <Link\r\n                          to={`/backoffice/projects/structures/${tournament.name}/stages/`}\r\n                          className=\"link-none-deco \"\r\n                        >\r\n                          <Icon.Plus size={30} />\r\n                          <span className=\"link-btm-bar\">Create new stage</span>\r\n                        </Link>\r\n                      )}\r\n                    </Row>\r\n                    <hr className=\"hr\" />\r\n                    {tournament.structure.general.name === \"name\" && (\r\n                      <>\r\n                        <Card.Text>\r\n                          The tournament does not have any stage yet. You should\r\n                          create the first stage and may use our Structure Guide\r\n                          if you are not sure of which stage to create.\r\n                        </Card.Text>\r\n\r\n                        <Link\r\n                          to={`/backoffice/projects/structures/${tournament.name}/stages/`}\r\n                        >\r\n                          <Icon.Plus size={30} />\r\n                          <span className=\" link-btm-bar\">\r\n                            Create new stage\r\n                          </span>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                    {tournament.structure.general.name !== \"name\" && (\r\n                      <>\r\n                        <Card.Text>\r\n                          <div className=\"d-flex justify-content-between mt-5\">\r\n                            <div className=\"d-flex flex-column \">\r\n                              <span>{tournament.structure.general.name} </span>\r\n                              <span className=\"text-small text-muted d-flex\">\r\n                                {tournament.structure.stage_type}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-around align-items-center\">\r\n                              <span className=\"text-small text-muted\">\r\n                                {tournament.tournamentParticipants.length}/\r\n                                {tournament.structure.general.size} players\r\n                              </span>\r\n                              <span className=\"text-small text-muted mx-4\">\r\n                                Pending\r\n                              </span>\r\n                              <span>\r\n                                <Dropdown>\r\n                                  <Dropdown.Toggle\r\n                                    variant=\"success\"\r\n                                    id=\"dropdown-basic\"\r\n                                  >\r\n                                    <Icon.ThreeDotsVertical\r\n                                      size={20}\r\n                                      color=\"#0cc4f2\"\r\n                                    />\r\n                                  </Dropdown.Toggle>\r\n\r\n                                  <Dropdown.Menu style={{ width: \"18rem\" }}>\r\n                                    <Dropdown.Item>\r\n                                      <Icon.Gear size={20} color=\"#0cc4f2\" />\r\n                                      <span className=\"textColor3 link-btm-bar\">\r\n                                        Configure\r\n                                      </span>\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item className=\"my-2\">\r\n                                      <Icon.Search size={20} color=\"#0cc4f2\" />\r\n                                      <span className=\"textColor3 link-btm-bar\">\r\n                                        Results\r\n                                      </span>\r\n                                    </Dropdown.Item>\r\n                                    <hr />\r\n                                    <Dropdown.Item>\r\n                                      <Icon.Trash size={20} color=\"red\" />\r\n                                      <span className=\"text-danger link-btm-bar\">\r\n                                        Delete\r\n                                      </span>\r\n                                    </Dropdown.Item>\r\n                                  </Dropdown.Menu>\r\n                                </Dropdown>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Text>\r\n\r\n                        <hr />\r\n                        <Card.Text>\r\n                          <Link\r\n                            to={`/backoffice/projects/${tournament.name}/structures`}\r\n                          >\r\n                            <span className=\"textColor3 link-none-deco link-btm-bar\">\r\n                              View all stages\r\n                            </span>\r\n                          </Link>\r\n                        </Card.Text>\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card style={{ height: \"16rem\" }}>\r\n                  <Card.Body>\r\n                    <Row className=\"d-flex justify-content-between align-items-center mb-3 mx-1\">\r\n                      <span>Registrations</span>\r\n                    </Row>\r\n                    <hr className=\"hr\" />\r\n                    {!tournament.registration.activation.isRegistration && (\r\n                      <>\r\n                        <Card.Text>\r\n                          Enable the registration to have participants register\r\n                          to the tournament. They will enjoy all the participant\r\n                          features the platform offers: check-in, matches list,\r\n                          results report ...\r\n                        </Card.Text>\r\n                        <Link\r\n                          to={`/backoffice/projects/settings/${tournament.name}/registration/`}\r\n                        >\r\n                          <Icon.Gear size={25} />\r\n                          <span className=\" link-btm-bar\">\r\n                            Enable registration\r\n                          </span>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n\r\n                    {tournament.registration.activation.isRegistration && (\r\n                      <Card.Text>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                          <div className=\"text-primary\">\r\n                            <h1>0</h1>\r\n                            <span>Pending</span>\r\n                          </div>\r\n                          <div className=\"text-success\">\r\n                            <h1>0</h1>\r\n                            <span>Accepted</span>\r\n                          </div>\r\n                          <div className=\"text-secondary\">\r\n                            <h1>0</h1>\r\n                            <span>Refused</span>\r\n                          </div>\r\n                          <div className=\"text-danger\">\r\n                            <h1>0</h1>\r\n                            <span>Cancelled</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"my-4 text-muted\">\r\n                          No pending registration\r\n                        </div>\r\n                      </Card.Text>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default TournamentOverview;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Organizer.jsx",["493"],[],"import { Col, Row, Button } from \"react-bootstrap\";\r\n\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport fifa from \"../../img/fifa23.jpg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTournaments } from \"../../redux/actions\";\r\n\r\nimport DeleteConfirm from \"../../components/DeleteConfirm\";\r\nconst Organizer = ({ projects }) => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [deleteItem, setDeleteItem] = useState(false);\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const handleDeleteItem = () => {\r\n    deleteItem === false ? setDeleteItem(true) : setDeleteItem(false);\r\n  };\r\n  const project = useSelector((state) => state.tournaments.tournaments);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTournaments());\r\n  }, []);\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {\" \"}\r\n          <h1 className=\"d-flex ml-5 mt-4 \">My Projects</h1>\r\n          <Link onClick={handleDeleteItem}>\r\n            <Icon.Trash size={20} />\r\n          </Link>\r\n        </div>\r\n        <Row id=\"create-btn\" className=\"w-100\">\r\n          <div className=\"d-grid gap-2 mx-5 mt-4 d-flex justify-content-center\">\r\n            <Button\r\n              onClick={handleShow}\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              className=\" d-flex justify-content-center create-btn\"\r\n            >\r\n              <Icon.PlusLg size={30} color=\"rgba(244, 92, 93, 255)\" />\r\n              <span className=\" textColor\">Create Project</span>\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"-d-flex  w-100 ml-auto organizer\">\r\n          <Col\r\n            onClick={handleShow}\r\n            lg={6}\r\n            md={6}\r\n            sm={6}\r\n            xs={12}\r\n            xl={4}\r\n            className=\"d-xs-none d-sm-none d-md-none d-lg-block\"\r\n          >\r\n            <span className=\"d-flex mt-5 align-items-center justify-content-center flex-column main-container2 plus-project  mx-4\">\r\n              <Icon.PlusLg size={100} color=\"rgba(244, 92, 93, 255)\" />\r\n              <span className=\"d-flex justify-content-center mx-4 align-items-center\">\r\n                Create Project\r\n              </span>\r\n            </span>\r\n          </Col>\r\n          {project.tournaments.map((project, index) => (\r\n            <Col\r\n              className=\"tournament-card-edit\"\r\n              lg={6}\r\n              md={6}\r\n              xl={4}\r\n              sm={6}\r\n              xs={12}\r\n              key={index}\r\n            >\r\n              {deleteItem && (\r\n                <button\r\n                  onClick={() => {\r\n                    setShowDelete(true);\r\n                    setProjectId(project);\r\n                  }}\r\n                  className=\"edit-tournament mx-auto \"\r\n                >\r\n                  <Icon.Trash size={20} color=\"red\" />\r\n                </button>\r\n              )}\r\n\r\n              <Link to={`projects/overview/${project.name}`}>\r\n                <span className=\"d-flex mt-5 align-items-center justify-content-center flex-column main-container2 plus-project  mx-4 mr-4\">\r\n                  <img src={fifa} className=\"w-100\" alt=\"fifa\" />\r\n                  <span className=\"d-flex justify-content-center mx-4 align-items-center py-3 textColor\">\r\n                    <strong>{project.name}</strong>\r\n                  </span>\r\n                </span>\r\n              </Link>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </>\r\n      <CreateTournament visible={show} onhide={handleClose} />\r\n      <DeleteConfirm\r\n        visible={showDelete}\r\n        onhide={handleCloseDelete}\r\n        tournamentId={projectId.name}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Organizer;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\BackOfficeNav.jsx",["494","495"],[],"import { Col, Container, Row, Navbar, Nav } from \"react-bootstrap\";\r\nimport fifa from \"../../img/fifa23.jpg\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport LoggedInOrganizer from \"../../components/LoggedInOrganizer\";\r\n\r\nconst BackOfficeNav = ({ data, page, user }) => {\r\n  const [profileClicked, setProfileClicked] = useState(false);\r\n  const handleProfileClicked = () => {\r\n    profileClicked ? setProfileClicked(false) : setProfileClicked(true);\r\n  };\r\n  return (\r\n    <Col className=\" my-projects giftcard-preview-nav d-flex flex-column\">\r\n      <img className=\" mt-4 logo-img\" src={logo} alt=\"\" />\r\n      <hr className=\"hr\" />\r\n      <Link className=\"link-none-deco\" to=\"/backoffice\">\r\n        <h3 className=\"d-flex\">My Projects</h3>\r\n      </Link>\r\n      <hr className=\"hr\" />\r\n\r\n      <div>\r\n        <h6 className=\"d-flex my-3\">Tournament</h6>\r\n        <div className=\"d-flex w-100 \">\r\n          <img className=\"tournament-name-img\" src={fifa} alt=\"\" />\r\n          <div className=\"d-flex flex-column w-75\">\r\n            <span className=\"d-flex ml-2 tournament-name w-75\">\r\n              {data.name}\r\n            </span>{\" \"}\r\n            <span className=\"d-flex ml-2\">{data.discipline_name}</span>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr className=\"hr\" />\r\n      <Navbar className=\"d-flex flex-column align-items-start\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Nav className=\"d-flex flex-column\">\r\n          <Link\r\n            to={`/backoffice/projects/overview/${data.name}`}\r\n            className=\"d-flex d-flex \"\r\n          >\r\n            <span\r\n              className={page === \"overview\" ? \"current textColor\" : undefined}\r\n            >\r\n              <Icon.Speedometer2 size={20} />\r\n              Overview\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={`/backoffice/projects/settings/${data.name}`}\r\n            className=\"my-2 d-flex\"\r\n          >\r\n            <span\r\n              className={page === \"settings\" ? \"current textColor\" : undefined}\r\n            >\r\n              <Icon.Gear size={20} />\r\n              Settings\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={`/backoffice/projects/structures/${data.name}/stages`}\r\n            className=\"my-2 d-flex\"\r\n          >\r\n            <span\r\n              className={page === \"structure\" ? \"current textColor\" : undefined}\r\n            >\r\n              <Icon.Boxes size={20} />\r\n              Structures\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            // to={`/backoffice/projects/participants/${data.name}`}\r\n            className=\"d-flex my-2\"\r\n          >\r\n            <span\r\n              className={\r\n                page === \"participants\" ? \"current textColor\" : undefined\r\n              }\r\n            >\r\n              <Icon.People size={20} />\r\n              Participants\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={`/backoffice/projects/settings/${data.name}`}\r\n            className=\"my-2 d-flex\"\r\n          >\r\n            <span\r\n              className={page === \"matches\" ? \"current textColor\" : undefined}\r\n            >\r\n              <Icon.LightningCharge size={20} />\r\n              Matches\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={`/backoffice/projects/settings/${data.name}`}\r\n            className=\"d-flex my-2\"\r\n          >\r\n            <span\r\n              className={\r\n                page === \"final-standing\" ? \"current textColor\" : undefined\r\n              }\r\n            >\r\n              <Icon.Trophy size={20} />\r\n              Final standing\r\n            </span>\r\n          </Link>\r\n          <Link className=\"my-2 d-flex\">\r\n            <Icon.Share size={20} />\r\n            Share\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <div\r\n        className={`organizer-profile giftcard-preview-nav ${\r\n          profileClicked ? \"active\" : \"\"\r\n        } w-75`}\r\n      >\r\n        <hr className=\"hr\" />\r\n        <LoggedInOrganizer clicked={handleProfileClicked} user={user} />\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\nexport default BackOfficeNav;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\ParticipantCheckin.jsx",["496","497","498","499","500"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament } from \"../../redux/actions\";\r\nconst ParticipantCheckin = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournament\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n  const [isCheckIn, setIsCheckIn] = useState(false);\r\n  const [checkInOpens, setCheckInOpens] = useState(\"\");\r\n  const [checkInCloses, setCheckInCloses] = useState(\"\");\r\n  const [key, setKey] = useState(\"activation\");\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const checkInSettings = {\r\n    participants: {\r\n      isCheck_in: isCheckIn,\r\n      checkInOpeningDate: checkInOpens.toString(),\r\n      checkInClosingDate: checkInCloses.toString(),\r\n    },\r\n  };\r\n  const handleUpdate = () => {\r\n    checkInCloses && checkInOpens && isCheckIn\r\n      ? setUpdate(true)\r\n      : setUpdate(false);\r\n    dispatch(editTournament(checkInSettings, tournament._id));\r\n  };\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          {!update && (\r\n            <div className=\"registration-card mx-auto mb-5\">\r\n              <Alert key={\"danger\"} variant={\"danger\"}>\r\n                <Icon.InfoCircleFill color=\"red\" size={15} />\r\n                <span className=\"text-danger\">\r\n                  There is invalid data in the form. Please check it and submit\r\n                  again.\r\n                </span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <Card className=\"registration-card mx-auto\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex my-2\">Participant Settings</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey=\"general\"\r\n                defaultActiveKey=\"general\"\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mb-3 mx-auto d-flex justify-content-center mb-5 px-5\"\r\n              >\r\n                <Tab eventKey=\"general\" title=\"General\">\r\n                  <span className=\" d-flex align-items-center mt-5\">\r\n                    Enable tournament check-in?\r\n                    <OverlayTrigger\r\n                      placement=\"top\"\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">\r\n                          Enable this feature to have your participants certify\r\n                          their presence for your tournament by checking in. It\r\n                          will ensure you create a structure of the right size,\r\n                          and avoid falling behind schedule at the tournament\r\n                          launch.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <span\r\n                        variant=\"light\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                      >\r\n                        <Icon.QuestionCircleFill />\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"Yes\"\r\n                          className=\"mr-3\"\r\n                          onClick={() => setIsCheckIn(true)}\r\n                        />\r\n\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"No\"\r\n                          onClick={() => setIsCheckIn(false)}\r\n                        />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                    <Form.Label className=\"d-flex\">\r\n                      Participant check-in opening\r\n                    </Form.Label>\r\n                    <Form.Group className=\"\">\r\n                      <DatePicker\r\n                        className=\"datepicker py-2 px-4 w-100\"\r\n                        selected={checkInOpens}\r\n                        placeholderText={new Date()}\r\n                        onChange={(date) => setCheckInOpens(date)}\r\n                        showTimeSelect\r\n                        dateFormat=\"Pp\"\r\n                      />\r\n                      {isCheckIn && !checkInOpens && (\r\n                        <span className=\"d-flex mt-2 text-warning blink_me2\">\r\n                          This value must be filled when participant check-in is\r\n                          enabled.\r\n                        </span>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                    <Form.Label className=\"d-flex\">\r\n                      Participant check-in closing\r\n                    </Form.Label>\r\n                    <Form.Group className=\"\">\r\n                      <DatePicker\r\n                        className=\"datepicker py-2 px-4 w-100\"\r\n                        selected={checkInCloses}\r\n                        placeholderText={new Date()}\r\n                        onChange={(date) => setCheckInCloses(date)}\r\n                        showTimeSelect\r\n                        dateFormat=\"Pp\"\r\n                      />\r\n                      {isCheckIn && !checkInCloses && (\r\n                        <span className=\"d-flex mt-2 text-warning blink_me2\">\r\n                          This value must be filled when participant check-in is\r\n                          enabled.\r\n                        </span>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Link\r\n                    // to={`/backoffice/projects/overview/${tournament}`}\r\n                    className=\"d-flex justify-content-end mt-4\"\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ParticipantCheckin;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\LogIn.jsx",["501","502","503","504"],[],"import {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getTournaments, logInData, signIn } from \"../../redux/actions\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { getMe } from \"../../redux/actions\";\r\n\r\nconst SignIn = () => {\r\n  const [forgotPassword, setForgotPassword] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [sign_in, setSign_in] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.accessToken.isLoading);\r\n  const isGetMeLoading = useSelector((state) => state.me.isLoading);\r\n  const isError = useSelector((state) => state.accessToken.isError);\r\n  const signInCredentials = useSelector(\r\n    (state) => state.accessToken.accessToken\r\n  );\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  console.log(signInCredentials.accessToken);\r\n  const handleCheck = (e) => {\r\n    check ? setCheck(false) : setCheck(true);\r\n  };\r\n  const handleForgetPassword = () => {\r\n    setForgotPassword(true);\r\n  };\r\n  const handleKnowPassword = () => {\r\n    setForgotPassword(false);\r\n  };\r\n  const loginFormData = {\r\n    email: email,\r\n    password: password,\r\n    rememberSignIn: check,\r\n  };\r\n  const handleSignIn = async () => {\r\n    const token = await dispatch(signIn(loginFormData));\r\n    setSign_in(true);\r\n  };\r\n  if (signInCredentials.accessToken) {\r\n    dispatch(getMe(signInCredentials.accessToken));\r\n    dispatch(getTournaments());\r\n    // setTimeout(() => {\r\n    // navigate(\"/user-page\");\r\n    // }, 500);\r\n    if (!isGetMeLoading) {\r\n      navigate(\"/user-page\");\r\n    }\r\n  }\r\n  return (\r\n    <Container fluid className=\"login-page \">\r\n      <Row className=\"giftcard-preview-nav py-2 \">\r\n        <Col className=\"d-flex flex-column ml-5\">\r\n          <Link className=\"mr-auto\" to={\"/\"}>\r\n            <img className=\"logo-img \" src={logo} alt=\"\" />\r\n          </Link>\r\n          <span className=\"mr-auto textColor\">LIVE EXPIRIENCE</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={4} className=\" login-content\">\r\n          <div className=\" ml-3 mt-3 d-flex justify-content-between align-items-center\">\r\n            {forgotPassword && <h4 className=\"mb-3\">Forgot Password</h4>}\r\n            {!forgotPassword && <h4>Sign In</h4>}\r\n            <Link to={\"/\"}>\r\n              <Icon.XLg size={20} className=\"textColor\" />\r\n            </Link>{\" \"}\r\n          </div>\r\n          {isLoading && sign_in ? (\r\n            <div className=\"  d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          ) : isGetMeLoading && sign_in ? (\r\n            <div className=\"  d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          ) : null}\r\n          {isError && sign_in && (\r\n            <Alert variant=\"danger\">\r\n              The email or password you provided is incorrect\r\n            </Alert>\r\n          )}\r\n          {!forgotPassword && (\r\n            <>\r\n              {/* //TODO do not delete me I am the registration confirmation */}\r\n              {/* <Alert variant=\"success\">\r\n                Account verification has been successfully completed\r\n              </Alert> */}\r\n              <hr />\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\" Email\"\r\n                    onChange={handleEmail}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\" Password\"\r\n                    onChange={handlePassword}\r\n                    minLength={5}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Col>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      className=\"mr-2\"\r\n                      lavel=\"checkbox\"\r\n                      type=\"checkbox\"\r\n                      onClick={handleCheck}\r\n                    />\r\n                    <span id=\"checkbox\">Remember me</span>\r\n                  </div>\r\n                </Col>\r\n              </Form.Group>\r\n              <Col className=\" mb-3 \">\r\n                <Link to=\"\" className=\"w-100\">\r\n                  <Button\r\n                    disabled={!email || !password}\r\n                    className=\"px-4 sign-up-btn w-100\"\r\n                    variant=\"primary\"\r\n                    onClick={handleSignIn}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Link>\r\n                <div className=\"mb-3\">\r\n                  <span>\r\n                    <Link onClick={handleForgetPassword}>\r\n                      Forgotten your password\r\n                    </Link>\r\n                  </span>\r\n                </div>\r\n              </Col>\r\n\r\n              <span className=\"mb-2\">\r\n                <strong>OR</strong>\r\n              </span>\r\n              <Col className=\" d-flex mb-3 \">\r\n                <a\r\n                  href={`${process.env.REACT_APP_BE_PROD_URL}/users/googleLogin`}\r\n                  className=\"w-100\"\r\n                >\r\n                  <Button className=\"px-4 sign-up-btn w-100\" variant=\"primary\">\r\n                    <Icon.Google size={20} />\r\n                    <span>Continue with Google</span>\r\n                  </Button>\r\n                </a>\r\n              </Col>\r\n            </>\r\n          )}\r\n          {forgotPassword && (\r\n            <>\r\n              <Alert variant=\"primary\">\r\n                We've sent a verification link on your email address\r\n              </Alert>\r\n              <hr />\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\" Email\"\r\n                    onChange={handleEmail}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Col className=\" d-flex mb-3 \">\r\n                <Link to=\"\" className=\"w-100\">\r\n                  <Button\r\n                    disabled={!email}\r\n                    className=\"px-4 sign-up-btn w-100\"\r\n                    variant=\"primary\"\r\n                  >\r\n                    Send Reset Link\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <div className=\"mb-3\">\r\n                <span>\r\n                  {\" \"}\r\n                  Back to! <Link onClick={handleKnowPassword}>Login</Link>\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={4} className=\" login-content py-3\">\r\n          <span className=\"py-3\">You don't have an account yet?</span>\r\n          <hr />\r\n          <Link to=\"/sign-up\">\r\n            <Button className=\"px-4 sign-up-btn w-100\" variant=\"success\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default SignIn;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Settings.jsx",["505","506","507","508","509","510","511","512"],[],"import {\r\n  Modal,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport fifa from \"../../img/fifa23.jpg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const params = useParams();\r\n  console.log(params.tournamentId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav data={tournament} user={user} page={\"settings\"} />\r\n        </Col>\r\n\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h3 className=\"d-flex mb-5\">Settings</h3>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                <span className=\"textColor2 notification-bell\">\r\n                  <Icon.BellFill size={35} />\r\n                  <span className=\"notification-message text-primary text-small bg-white\">\r\n                    <strong>5</strong>\r\n                  </span>\r\n                </span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n          <Row className=\" mb-5\">\r\n            <Col>\r\n              <Card>\r\n                <Link\r\n                  to={`/backoffice/projects/settings/${tournament.name}/edit`}\r\n                  className=\"textColor settings-card link-none-deco\"\r\n                >\r\n                  <Card.Header>\r\n                    <Icon.Gear size={20} />\r\n                    General\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Manage the highest level of information about your\r\n                      tournament, its description, size, logo and contact\r\n                      information for your participants to reach you.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card>\r\n                <Link\r\n                  to={`/backoffice/projects/settings/${tournament.name}/matches`}\r\n                  className=\"textColor settings-card link-none-deco\"\r\n                >\r\n                  <Card.Header>\r\n                    <Icon.LightningChargeFill size={20} />\r\n                    <span>Match</span>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Manage the configuration of the match format to be used in\r\n                      your tournament, and whether you want the participants to\r\n                      be able to report their results or not.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card>\r\n                <Link\r\n                  to={`/backoffice/projects/settings/${tournament.name}/registration`}\r\n                  className=\"textColor settings-card link-none-deco\"\r\n                >\r\n                  <Card.Header>\r\n                    <Icon.TicketFill size={20} />\r\n                    <span>Registration</span>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Manage the registration, to have participants be able to\r\n                      register to your tournament during a set period, and\r\n                      configure automated messages to be sent to them.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Link\r\n                  to={`/backoffice/projects/settings/${tournament.name}/participants`}\r\n                  className=\"textColor settings-card link-none-deco\"\r\n                >\r\n                  <Card.Header>\r\n                    <Icon.PeopleFill size={20} />\r\n                    Participant\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Manage the participant settings like the minimum and\r\n                      maximum size of teams, and enable the check-in.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card>\r\n                <Link className=\"textColor settings-card link-none-deco\">\r\n                  <Card.Header>\r\n                    <Icon.Trash3Fill size={20} />\r\n                    <span>Delete Tournament</span>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>This action is irreversible!</Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              {/* <Card>\r\n                <Link className=\"textColor settings-card link-none-deco\">\r\n                  <Card.Header>\r\n                    <Icon.TicketFill size={20} />\r\n                    <span>Sponsors</span>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      Manage the sponsors for the tournament: order them, add\r\n                      logos and website links.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Link>\r\n              </Card> */}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Settings;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Match.jsx",["513","514","515","516","517","518"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Match = () => {\r\n  const params = useParams();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const user = useSelector((state) => state.me.me);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournament\r\n  );\r\n  const [update, setUpdate] = useState(false);\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card mx-auto\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <Card className=\"registration-card mx-auto\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex my-4\">Match Settings</h3>\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey=\"match\"\r\n                defaultActiveKey=\"match\"\r\n                className=\"mb-3 mx-auto d-flex justify-content-center mx-5 px-5\"\r\n              >\r\n                <Tab eventKey=\"match\" title=\"Match\">\r\n                  <h5 className=\"d-flex\">Participant reporting</h5>\r\n                  <span className=\" d-flex align-items-center \">\r\n                    Enable Participants Reporting?\r\n                    <OverlayTrigger\r\n                      placement=\"top\"\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">\r\n                          Enable to allow participants to report their matches\r\n                          result and score. Participant report is not possible\r\n                          in FFA stages.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <span\r\n                        variant=\"light\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                      >\r\n                        <Icon.QuestionCircleFill />\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"register\"\r\n                          label=\"Yes\"\r\n                          checked\r\n                          className=\"mr-3\"\r\n                        />\r\n\r\n                        <Form.Check type=\"radio\" name=\"register\" label=\"No\" />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    className=\"datepicker py-2 px-4 w-100 textColor\"\r\n                  >\r\n                    <option>Open this select menu</option>\r\n                    <option value=\"1\">Single game</option>\r\n                    <option value=\"2\">Home and away</option>\r\n                    <option value=\"3\">Best of 3</option>\r\n                    <option value=\"3\">Best of 5</option>\r\n                    <option value=\"3\">Fixed games</option>\r\n                  </Form.Select>\r\n                  <Link className=\"d-flex justify-content-end mt-4 link-none-deco\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Match;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\Participants.jsx",["519","520"],[],"import {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getTournaments, getUsers } from \"../../redux/actions/index.js\";\r\n\r\nconst Participants = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  // const users = useSelector((state) => state.users.users);\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const users = tournament.tournamentParticipants;\r\n  useEffect(() => {\r\n    const URL = `${process.env.REACT_APP_BE_PROD_URL}/users?limit=10`;\r\n    dispatch(getUsers(URL));\r\n    dispatch(getTournaments());\r\n  }, []);\r\n\r\n  const [update, setUpdate] = useState(false);\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n  };\r\n  const user = useSelector((state) => state.me.me);\r\n  const [search, setSearch] = useState(false);\r\n  const handleSearch = () => {\r\n    search ? setSearch(false) : setSearch(true);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"main-container2 textColor\">\r\n      {users.length > 0 && (\r\n        <Row>\r\n          <Col lg={2} className=\"px-0\">\r\n            <BackOfficeNav\r\n              data={tournament}\r\n              user={user}\r\n              page={\"participants\"}\r\n            />\r\n          </Col>\r\n          <Col lg={10} className=\"my-5 px-5\">\r\n            {update && (\r\n              <div className=\"registration-card mx-auto\">\r\n                <Alert key={\"success\"} variant={\"success\"}>\r\n                  <Icon.CheckCircle size={15} />\r\n                  <span>Settings have been successfully updated.</span>\r\n                </Alert>\r\n              </div>\r\n            )}\r\n            <Card className=\"registration-card mx-auto mb-5 main-container2\">\r\n              <Card.Body>\r\n                <div className=\"d-flex \">\r\n                  <h3 className=\"d-flex my-1\">Participants</h3>\r\n                  <div className=\"d-flex ml-auto\">\r\n                    <Link className=\"d-flex justify-content-end my-1 mr-2 link-none-deco\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        onClick={handleUpdate}\r\n                        className=\"primary-btn textColor\"\r\n                      >\r\n                        <Icon.Plus size={20} />\r\n                        Add\r\n                      </Button>\r\n                    </Link>\r\n                    <Link className=\"d-flex justify-content-end my-1 link-none-deco\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        onClick={handleUpdate}\r\n                        className=\"primary-btn textColor\"\r\n                      >\r\n                        <Icon.ListOl size={20} />\r\n                        Fill All\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"registration-card mx-auto mb-4\">\r\n              <Card.Body>\r\n                <div className=\"d-flex \">\r\n                  <Col className=\"d-flex flex-column border-right\">\r\n                    <h1>{users.length}</h1>\r\n                    <span>participants</span>\r\n                  </Col>\r\n                  <Col className=\"d-flex flex-column  border-right\">\r\n                    <h1 className=\" text-success\">{users.length}</h1>\r\n                    <span className=\" text-success\"> Checked-in </span>\r\n                  </Col>\r\n                  <Col className=\"d-flex flex-column ml-auto\">\r\n                    <h1>36</h1>\r\n                    <span>Tournament size</span>\r\n                  </Col>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"registration-card mx-auto\">\r\n              <Card.Header>\r\n                <div className=\"d-flex \">\r\n                  <h3 className=\"d-flex my-1\">List of participants</h3>\r\n                  <div className=\"d-flex ml-auto\">\r\n                    <Link className=\"d-flex justify-content-end align-items-center main-container2 my-1 mr-2 link-none-deco\">\r\n                      <Icon.ArrowClockwise size={20} />\r\n                      <span className=\"pr-3\">Refresh</span>\r\n                    </Link>\r\n                    {!search ? (\r\n                      <Link\r\n                        onClick={handleSearch}\r\n                        className=\"d-flex justify-content-end align-items-center my-1 main-container2 link-none-deco\"\r\n                      >\r\n                        <Icon.Search size={20} />\r\n                        <span className=\"pr-3\">Search</span>\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        onClick={handleSearch}\r\n                        className=\"d-flex justify-content-end align-items-center my-1 main-container2 link-none-deco\"\r\n                      >\r\n                        <Icon.X size={20} />\r\n                        <span className=\"pr-3\">Hide search</span>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Card.Header>\r\n\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {search && (\r\n                    <>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                            <Form.Label className=\"d-flex\">Name</Form.Label>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              required\r\n                              // onChange={handleNumber}\r\n                            />\r\n                          </Form.Group>\r\n                          <div>\r\n                            <div className=\"d-flex\">\r\n                              <span>Check-in status</span>\r\n                            </div>\r\n\r\n                            <div className=\"my-3 d-flex\">\r\n                              <Form.Check\r\n                                type=\"radio\"\r\n                                name=\"autoPlacement\"\r\n                                label=\"All\"\r\n                                // onClick={handleTrueAutoParticipantPlacement}\r\n                                className=\"mr-3\"\r\n                                defaultChecked\r\n                              />\r\n\r\n                              <Form.Check\r\n                                type=\"radio\"\r\n                                // onClick={handleFalseAutoParticipantPlacement}\r\n                                className=\"mr-3\"\r\n                                name=\"autoPlacement\"\r\n                                label=\"Checked in\"\r\n                              />\r\n                              <Form.Check\r\n                                type=\"radio\"\r\n                                // onClick={handleFalseAutoParticipantPlacement}\r\n                                name=\"autoPlacement\"\r\n                                label=\"Not checked in\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                            <Form.Label className=\"d-flex\">Email</Form.Label>\r\n                            <Form.Control\r\n                              type=\"email\"\r\n                              required\r\n                              // onChange={handleSize}\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <hr />\r\n                    </>\r\n                  )}\r\n                  <div className=\" d-flex justify-content-between\">\r\n                    <div className=\"my-auto\">\r\n                      <span>\r\n                        <strong>{users.length} participants </strong>\r\n                        <span className=\"text-mute\">out of 36</span>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                      <Button\r\n                        disabled={true}\r\n                        type=\"submit\"\r\n                        //   onClick={handleUpdate}\r\n                        className=\"primary-btn textColor\"\r\n                      >\r\n                        <Icon.Trash3Fill size={20} />\r\n                        Delete All\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"d-flex mb-3  justify-content-between\">\r\n                    <div className=\"d-flex  justify-content-between\">\r\n                      <span className=\"mr-5\">Status</span>\r\n                      <span className=\"ml-5\">Name</span>\r\n                    </div>\r\n                    <span>Email</span>\r\n                    <span>Created at</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    {users.length > 10 && (\r\n                      <ul className=\"pl-0 w-100\">\r\n                        {users.users.map((participant, index) => (\r\n                          <li className=\"w-100 participant-list\" key={index}>\r\n                            <div className=\"d-flex justify-content-between my-3\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <span className=\"mr-1\">\r\n                                  <Icon.CheckCircleFill\r\n                                    size={15}\r\n                                    color=\"green\"\r\n                                    className=\"mx-0 px-0\"\r\n                                  />\r\n                                  <span className=\"text-small text-muted pl-1\">\r\n                                    Checked-in\r\n                                  </span>\r\n                                </span>\r\n                                {/* <span className=\"mr-1\">\r\n                                <Icon.XCircleFill size={15} color=\"gray\" />\r\n                                <span className=\"text-small text-muted\">\r\n                                 Not checked in\r\n                                </span>\r\n                              </span> */}\r\n                                <span className=\"ml-5\">\r\n                                  {participant.name} {participant.surname}\r\n                                </span>\r\n                              </div>\r\n\r\n                              <div className=\"\">\r\n                                <span>{participant.email} </span>\r\n                              </div>\r\n                              <div className=\"\">\r\n                                <span className=\"mr-2\">\r\n                                  {format(\r\n                                    new Date(participant.createdAt.toString()),\r\n                                    \"dd MMM yyyy\"\r\n                                  )}\r\n                                </span>\r\n                                {/* <Icon.ThreeDotsVertical /> */}\r\n                                <input className=\"mr-1  px-2\" type=\"checkbox\" />\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  {users.length === 0 && (\r\n                    <>\r\n                      <hr />\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <span className=\"mx-auto my-4\">\r\n                          <strong>No participants found</strong>\r\n                        </span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  <div className=\"d-flex justify-content-center mb-2\">\r\n                    {users.links.first && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => dispatch(getUsers(users.links.first))}\r\n                        className=\" mx-1 text-dark\"\r\n                      >\r\n                        First\r\n                      </Button>\r\n                    )}\r\n                    {users.links.prev && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => dispatch(getUsers(users.links.prev))}\r\n                        className=\" mx-1 text-dark\"\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    {users.links.next && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => dispatch(getUsers(users.links.next))}\r\n                        className=\" mx-1 text-dark\"\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    )}\r\n                    {users.links.last && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                        onClick={() => dispatch(getUsers(users.links.last))}\r\n                        className=\" mx-1 text-dark\"\r\n                      >\r\n                        Last\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"my-auto\">\r\n                      <span>\r\n                        <strong>0 participants </strong>\r\n                        <span className=\"text-mute\">out of {users.length}</span>\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"ml-auto\">\r\n                      <Button\r\n                        disabled={true}\r\n                        type=\"submit\"\r\n                        //   onClick={handleUpdate}\r\n                        className=\"primary-btn textColor\"\r\n                      >\r\n                        <Icon.Trash3Fill size={20} />\r\n                        Delete All\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Participants;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userPreference.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Table.jsx",["521"],[],"import { Col, Row, NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nconst Table = () => {\r\n  const API_KEY = \"043889e9ea73af9c34129e6f7d0dd4c8\";\r\n\r\n  return (\r\n    <Col className=\"scoll-table gift-container pb-2 pr-0 fixture-container\">\r\n      <Row className=\"w-100 d-flex mt-2 \">\r\n        <Col className=\"d-flex justify-content-between pl-3 pr-0\">\r\n          <div className=\"d-flex align-items-center textColor2 \">\r\n            <div>Season</div>\r\n            <div>\r\n              <NavDropdown title=\"March/20-27 \" menuVariant=\"dark\">\r\n                <Dropdown.Item href=\"#/action-1\">April/01-07</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">April/01-07</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">April/01-07</Dropdown.Item>\r\n              </NavDropdown>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\" playerNav py-3  textColor pr-0  mr-0  \">\r\n        <Col className=\"d-flex  justify-content-between pl-3 pr-0\">\r\n          <div>\r\n            <span>Player</span>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end \">\r\n            <span className=\"mx-3\">MP</span>\r\n            <span className=\"mx-3\">W</span>\r\n            <span className=\"mx-3\">D</span>\r\n            <span className=\"mx-3\">L</span>\r\n            <span className=\"mx-3\">Pts</span>\r\n            <span className=\"ml-4\">Last 3</span>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {[...Array(20)].map((player, index) => (\r\n        <div>\r\n          <Row className=\" pr-0  mr-0 textColor2\">\r\n            <Col className=\"participant-list pb-2 py-2 d-flex justify-content-between  mr-0 px-0\">\r\n              <div>\r\n                <span className=\"mx-3\">{index + 1}</span>\r\n                <span className=\"text-nowrap\">-</span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-end mr-0\">\r\n                <span className=\"mx-3\">MP</span>\r\n                <span className=\"mx-3\">W</span>\r\n                <span className=\"mx-3\">D</span>\r\n                <span className=\"mx-3\">L</span>\r\n                <span className=\"mx-3\">Pts</span>\r\n                <span className=\"ml-3 text-nowrap\">\r\n                  <Icon.CheckCircleFill\r\n                    className=\"mx-0\"\r\n                    size={13}\r\n                    color=\"green\"\r\n                  />\r\n                  <Icon.XCircleFill className=\"mx-1\" size={13} color=\"red\" />\r\n                  <Icon.DashCircleFill\r\n                    className=\"mx-1\"\r\n                    color=\"gray\"\r\n                    size={13}\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ))}\r\n    </Col>\r\n  );\r\n};\r\nexport default Table;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Chat.jsx",["522","523","524","525","526","527","528"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\UserPage.jsx",["529","530"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Tournaments.jsx",["531","532","533","534","535","536"],[],"import { Col, Row, NavDropdown, Dropdown, Form, Button } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport fifa from \"../../img/fifa23.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Tournaments = ({ tournaments }) => {\r\n  return (\r\n    <Col className=\"scoll-table gift-container pb-2 pr-0\">\r\n      <Row>\r\n        <Col className=\"d-flex justify-content-end\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle className=\"textColor mt-1 mr-3\">\r\n              <span className=\"bg-secondary text-white  px-3 py-1\">Filter</span>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item>\r\n                <span>All</span>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                {/* {\" \"}\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  className=\"mr-3\"\r\n                  name=\"query\"\r\n                  label=\"Past\"\r\n                /> */}\r\n                <span>Past</span>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <span>Ongoing</span>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <span>Upcoming</span>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <span>Featured</span>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <span>Open</span>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n\r\n      {tournaments.map((tournament, index) => (\r\n        <div>\r\n          {tournament.name ? (\r\n            <Link\r\n              to={`/tournaments/${tournament.name}`}\r\n              className=\"link-none-deco\"\r\n            >\r\n              <Row className=\"w-100 pr-0  mr-0 tournament-list  textColor2 container\">\r\n                <Col className=\"pb-2 px-1 py-2 d-flex justify-content-between  mr-0 px-0\">\r\n                  <div className=\"d-flex\">\r\n                    <img\r\n                      src={fifa}\r\n                      alt=\"\"\r\n                      className=\"tournament-preview-img mr-2\"\r\n                    />\r\n                    <div className=\"d-flex flex-column justify-content-start\">\r\n                      <h5 className=\"text-nowrap tournament-name d-flex \">\r\n                        {tournament.name}\r\n                      </h5>\r\n                      <span className=\"text-nowrap span d-flex \">\r\n                        {tournament.discipline}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end mr-0\">\r\n                    <span className=\"span \">2 Feb 2023</span>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"d-flex flex-column justify-content-end mr-0\">\r\n                      <span className=\"span\">23/36</span>\r\n                      <span className=\"span\">Players</span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"d-flex flex-column justify-content-end text-success mr-0\">\r\n                      <span className=\"span\">Registration</span>\r\n                      <span className=\"span \">Open</span>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Link>\r\n          ) : (\r\n            <div>\r\n              No competions open at the moment. We are opening a new competion\r\n              soon! Check again in a few hours\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </Col>\r\n  );\r\n};\r\nexport default Tournaments;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentDetails.jsx",["537","538","539","540","541","542","543","544","545","546"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport fifa from \"../../src/img/fifa23.jpg\";\r\nimport Footer from \"./Footer\";\r\nimport GroupStructure from \"../pages/userPage/GroupStructure\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport TournamentInfo from \"./TournamentInfo\";\r\nimport Rules from \"./Rules\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport { ReactComponent as Swords } from \"../img/swords.svg\";\r\n\r\nconst TournamentDetails = () => {\r\n  const params = useParams();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Container fluid className=\"main-container textColor  px-0 \">\r\n      <NavigationBar />\r\n      <div className=\"tournament-img-cover-container \">\r\n        <Card className=\"bg-dark text-white   \">\r\n          <Card.Img src={fifa} alt=\"fifa\" className=\" tournament-img-cover\" />\r\n          <Card.ImgOverlay className=\"tournament-info\">\r\n            <Container>\r\n              <Card.Text>\r\n                <div className=\"d-flex mt-5 pt-5 align-items-center justify-content-between  text-white \">\r\n                  <div>\r\n                    <div className=\"d-flex\">\r\n                      <span className=\"mr-3 bg-secondary rounded text-white px-3 py-1\">\r\n                        XBox\r\n                      </span>\r\n                      <Link>Fifa 23</Link>\r\n                    </div>\r\n                    <h1 className=\"d-flex\">{tournament.name}</h1>\r\n                    <span className=\"d-flex\">\r\n                      {tournament.startDate && tournament.endDate && (\r\n                        <span className=\"d-flex\">\r\n                          {\" \"}\r\n                          {format(\r\n                            new Date(tournament.startDate.toString()),\r\n                            \"dd MMM yyyy\"\r\n                          )}\r\n                          {\" - \"}\r\n                          {format(\r\n                            new Date(tournament.endDate.toString()),\r\n                            \"dd MMM yyyy\"\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\" d-none d-lg-block     \">\r\n                    <div className=\"d-flex giftcard-preview-nav register-card-top  justify-content-between py-1 px-4 \">\r\n                      <div className=\"d-flex flex-column justify-content-center reg-border-right mr-4 pr-3\">\r\n                        <span className=\"d-flex\">Registration open</span>\r\n\r\n                        {tournament.registration.activation\r\n                          .registrationClosingDate && (\r\n                          <span className=\"d-flex\">\r\n                            until{\" \"}\r\n                            {format(\r\n                              new Date(\r\n                                tournament.registration.activation.registrationClosingDate.toString()\r\n                              ),\r\n                              \"dd MMM yyyy 'at' HH:mm\"\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"border-bottom pb-2\">\r\n                          {tournament.tournamentParticipants.length}\r\n                        </h3>\r\n                        <h3 className=\"mt-0\">{tournament.size}</h3>\r\n                        <span>Players</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-success px-3 text-white py-2\">\r\n                      Register to the tournament\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card.Text>\r\n            </Container>\r\n          </Card.ImgOverlay>\r\n        </Card>\r\n      </div>\r\n\r\n      <Container className=\" \">\r\n        <Row>\r\n          <Col className=\"mb-5 d-none d-lg-block \">\r\n            <Tabs defaultActiveKey=\"information\" className=\"mb-3  \" justify>\r\n              <Tab eventKey=\"information\" title=\"Information\">\r\n                <TournamentInfo />\r\n              </Tab>\r\n              <Tab eventKey=\"matches\" title=\"Matches\">\r\n                <GroupStructure />\r\n              </Tab>\r\n              <Tab eventKey=\"participants\" title=\"Participants\">\r\n                {/* *********************************************************** */}\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex  flex-column my-3\">\r\n                      <h4 className=\"d-flex\">Participants</h4>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form className=\"d-flex\">\r\n                      <Form.Control\r\n                        type=\"search\"\r\n                        placeholder=\"Search here\"\r\n                        className=\"mr-3\"\r\n                        aria-label=\"Search\"\r\n                      />\r\n                      <Button variant=\"secondary\">\r\n                        <Icon.Search size={20} />\r\n                      </Button>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n\r\n                <Row>\r\n                  {tournament.tournamentParticipants.length > 0 &&\r\n                    tournament.tournamentParticipants.map((player, index) => {\r\n                      return (\r\n                        <Col xs={6} key={player._id} lg={3}>\r\n                          <Link className=\"link-none-deco\">\r\n                            <div className=\"border round textColor  d-flex px-2 participant-names py-3 my-2\">\r\n                              <span className=\"mr-4\">{player.name}</span>{\" \"}\r\n                              <span>{player.surname}</span>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  {tournament.tournamentParticipants.length === 0 && (\r\n                    <Col xs={6} lg={3}>\r\n                      <span>No participants available yet</span>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n                {/* *********************************************************** */}\r\n                {/* <PlayerList participants={tournament.tournamentParticipants} /> */}\r\n              </Tab>\r\n              <Tab eventKey=\"rules\" title=\"Rules\">\r\n                <Rules />\r\n              </Tab>\r\n              <Tab eventKey=\"registration\" title=\"Registration\">\r\n                <RegistrationForm />\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n          <Col className=\"mb-5  d-lg-none \">\r\n            <Tabs defaultActiveKey=\"information\" className=\"mb-3  \" justify>\r\n              <Tab eventKey=\"information\" title={<Icon.InfoCircle size={20} />}>\r\n                <TournamentInfo />\r\n              </Tab>\r\n              <Tab eventKey=\"matches\" title={<Icon.Tools size={20} />}>\r\n                <GroupStructure />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"participants\"\r\n                title={<Icon.PeopleFill size={20} />}\r\n              >\r\n                <PlayerList />\r\n              </Tab>\r\n              <Tab eventKey=\"rules\" title={<Icon.FileEarmarkText size={20} />}>\r\n                <Rules />\r\n              </Tab>\r\n              <Tab eventKey=\"registration\" title={<Icon.RCircle size={20} />}>\r\n                <RegistrationForm tournamentId={tournament._id} />\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\nexport default TournamentDetails;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\GroupStructure.jsx",["547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\n// import fifa from \"../../src/img/fifa23.jpg\";\r\n\r\nconst GroupStructure = () => {\r\n  const params = useParams();\r\n  // const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  // const tournament = tournamentData.tournaments.find(\r\n  //   (name) => name.name === params.tournamentId\r\n  // );\r\n  // console.log(tournament);\r\n  const [key, setKey] = useState(\"activation\");\r\n\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col className=\"mb-5 \">\r\n        <Tabs defaultActiveKey=\"groups\" className=\"mb-3\">\r\n          <Tab eventKey=\"groups\" title=\"Groups\">\r\n            <h4 className=\"d-flex my-3\">Groups</h4>\r\n            <Row>\r\n              {[...Array(8)].map((group, index) => {\r\n                return (\r\n                  <Col lg={3} key={index}>\r\n                    <Card className=\"mt-3 tournament-structure-card\">\r\n                      <Card.Header>\r\n                        <strong>Group {index + 1}</strong>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        {[...Array(4)].map((player, index) => (\r\n                          <span\r\n                            key={index}\r\n                            className=\"d-flex border-bottom py-1\"\r\n                          >\r\n                            _\r\n                          </span>\r\n                        ))}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Tab>\r\n          <Tab eventKey=\"playOffs\" title=\"PlayOffs\">\r\n            <h4 className=\"d-flex mt-3\">Playoffs</h4>\r\n\r\n            <Row>\r\n              <div className=\"d-flex \">\r\n                <Button variant=\"secondary px-5 ml-3 mr-5\">Round 1</Button>\r\n                <Button variant=\"secondary px-5 mx-5\">Round 2</Button>\r\n                <Button variant=\"secondary px-5 mx-5\">Round 3</Button>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex flex-column align-items-start px-0 mt-3 mb-2\">\r\n                  <h5>Qaurster Final</h5>\r\n\r\n                  <div className=\"d-flex\">\r\n                    <div>\r\n                      <div className=\" mb-5 player-round-1 d-flex flex-column border round px-5 py-1 bg-white\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1 \">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                      <div className=\"player-round-2  d-flex flex-column border round px-5 py-1 bg-white mb-5\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1\">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                      <div className=\" mb-5 player-round-1 d-flex flex-column border round px-5 py-1 bg-white\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1 \">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                      <div className=\"player-round-2  d-flex flex-column border round px-5 py-1 bg-white mb-5\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1\">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mx-5 d-flex flex-column justify-content-center\">\r\n                      <div className=\" mb-5 player-round-1 d-flex flex-column border round px-5 py-1 bg-white\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1 \">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 player-round-3  d-flex flex-column border round px-5 py-1 bg-white mb-5\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1 \">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mx-5 d-flex flex-column justify-content-center\">\r\n                      <div className=\"mt-5 player-round-4  d-flex flex-column border round px-5 py-1 bg-white mb-5\">\r\n                        <span className=\" text-nowrap  border-bottom pb-1 \">\r\n                          Louis Gadza\r\n                        </span>\r\n                        <span className=\"text-nowrap \">Louis Gadza</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab eventKey=\"schedule\" title=\"Schedule\">\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex  flex-column my-3\">\r\n                  <h4 className=\"d-flex\">Schedule</h4>\r\n                  <span className=\"d-flex\">No schedule found.</span>\r\n                </div>\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab eventKey=\"latest-results\" title=\"Results\">\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex  flex-column my-3\">\r\n                  <h4 className=\"d-flex\">Latest results</h4>\r\n                  <span className=\"d-flex\">No results found.</span>\r\n                </div>\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Tab>\r\n        </Tabs>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default GroupStructure;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\userData.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\DeleteConfirm.jsx",["564","565","566","567"],[],"import { Modal, Row, Container, Col, Button, Form } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteTournament, getTournaments } from \"../redux/actions\";\r\n\r\nconst DeleteConfirm = ({ visible, onhide, tournamentId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tournaments = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournaments.tournaments.find(\r\n    (name) => name.name === tournamentId\r\n  );\r\n\r\n  const handleData = async () => {\r\n    await dispatch(deleteTournament(tournament._id));\r\n    await onhide();\r\n    dispatch(getTournaments());\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={visible}\r\n      size=\"lg\"\r\n      onHide={onhide}\r\n      className=\"modal-hieght textColor\"\r\n    >\r\n      <Modal.Body className=\"py-0 mt-3 px-4\">\r\n        {tournamentId && (\r\n          <Container>\r\n            <Row>\r\n              <h6 className=\"my-5 \">\r\n                Are you sure you want to delete{\" \"}\r\n                <strong className=\"textColor2 mx-2\">{tournamentId}</strong>\r\n                tournament\r\n              </h6>\r\n              <div className=\"my-5 ml-auto\">\r\n                <Button onClick={onhide} variant=\"outline-primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Link>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={handleData}\r\n                    className=\"primary-btn ml-3 textColor\"\r\n                  >\r\n                    <Icon.Trash size={20} />\r\n                    Delete\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default DeleteConfirm;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\GeneralSettings.jsx",["568","569","570","571"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament } from \"../../redux/actions\";\r\nconst GeneralSettings = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  console.log(tournamentData);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [key, setKey] = useState(\"activation\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [rules, setRules] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const user = useSelector((state) => state.me.me);\r\n\r\n  const [name, setName] = useState(tournament.name);\r\n  const [size, setSize] = useState(tournament.size);\r\n  const [platform, setPlatform] = useState(tournament.platform);\r\n  const [location, setLocation] = useState(\"\");\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value);\r\n  };\r\n  const handlePlatform = (e) => {\r\n    setPlatform(e.target.value);\r\n  };\r\n  const handleLocation = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n  const handleRules = (e) => {\r\n    setRules(e.target.value);\r\n  };\r\n  const handlePrice = (e) => {\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const formValues = {\r\n    name: name,\r\n    discipline_name: \"FIFA 23\",\r\n    size: size,\r\n    platform: platform,\r\n    location: location,\r\n    startDate: startDate.toString(),\r\n    endDate: endDate.toString(),\r\n    price: price,\r\n    rules: rules,\r\n    description: description,\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n    dispatch(editTournament(formValues, tournament._id));\r\n  };\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <Card className=\"registration-card mx-auto mt-5\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex my-4\">General Settings</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey={key}\r\n                defaultActiveKey=\"profile\"\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mb-3 mx-auto d-flex justify-content-center mx-5 px-5\"\r\n              >\r\n                <Tab eventKey=\"activation\" title=\"General\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label className=\"d-flex\">Name</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            value={name}\r\n                            onChange={handleName}\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label className=\"d-flex\">\r\n                            Discipline{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  This cannot be changed within a tournament. If\r\n                                  you want to change the discipline, create a\r\n                                  new tournament.\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            disabled\r\n                            value={tournament.discipline}\r\n                            // placeholder=\"FIFA 23\"\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label className=\"d-flex\">Platform</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            value={platform}\r\n                            onChange={handlePlatform}\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label className=\"d-flex\">Organizer</Form.Label>\r\n                          <Form.Control\r\n                            disabled\r\n                            type=\"text\"\r\n                            placeholder=\"Implus Gaming\"\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                          <Form.Label className=\"d-flex\">\r\n                            Size{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Number of participants at the beginning of the\r\n                                  tournament.\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            value={size}\r\n                            onChange={handleSize}\r\n                          />\r\n                        </Form.Group>\r\n                      </Form>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label className=\"d-flex\">Location</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleLocation} />\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">Start date</Form.Label>\r\n                        <Form.Group className=\"\">\r\n                          <DatePicker\r\n                            className=\"datepicker py-2 px-2 w-100\"\r\n                            selected={startDate}\r\n                            placeholderText={new Date()}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            showTimeSelect\r\n                            dateFormat=\"Pp\"\r\n                          />\r\n                        </Form.Group>\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">End date</Form.Label>\r\n                        <Form.Group className=\"\">\r\n                          <DatePicker\r\n                            className=\"datepicker py-2 px-2 w-100\"\r\n                            selected={endDate}\r\n                            placeholderText={new Date()}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            showTimeSelect\r\n                            dateFormat=\"Pp\"\r\n                          />\r\n                        </Form.Group>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"details\" title=\"Details\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                        <Form.Label className=\"mr-4 d-flex\">\r\n                          Description{\" \"}\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={4}\r\n                          onChange={handleDescription}\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                        <Form.Label className=\"mr-4 d-flex\">Prize </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={4}\r\n                          onChange={handlePrice}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                        <Form.Label className=\"mr-4 d-flex\">Rules</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={10}\r\n                          onChange={handleRules}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.Pencil size={20} />\r\n                      Update\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default GeneralSettings;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\RegistrationForm.jsx",["572","573","574","575"],[],"import { Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { registerTournament, getTournaments } from \"../redux/actions\";\r\n\r\nconst RegistrationForm = () => {\r\n  const params = useParams();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const [nickName, setNickName] = useState(undefined);\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.giftData.isLoading);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [termsCheck, setTermsCheck] = useState(false);\r\n  const handleNickname = (e) => {\r\n    setNickName(e.target.value);\r\n  };\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSurname = (e) => {\r\n    setSurname(e.target.value);\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleTerms = (e) => {\r\n    termsCheck ? setTermsCheck(false) : setTermsCheck(true);\r\n  };\r\n  const userData = {\r\n    nickname: nickName,\r\n    name: name,\r\n    surname: surname,\r\n    email: email,\r\n    terms: termsCheck,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n    dispatch(registerTournament(userData, tournament._id));\r\n    dispatch(getTournaments());\r\n  };\r\n  return (\r\n    <>\r\n      {name && email && surname && termsCheck && nickName && update && (\r\n        <div className=\"registration-card mx-auto mt-5\">\r\n          <Alert key={\"success\"} variant={\"success\"}>\r\n            <Icon.CheckCircle size={15} />\r\n            <span>Registration sent to the organizer</span>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      {(!name || !email || !surname || !termsCheck || !nickName || !update) && (\r\n        <div className=\"registration-card mx-auto mt-5\">\r\n          <Alert key={\"warning\"} variant={\"danger\"}>\r\n            <Icon.XCircle size={15} />\r\n            <span>Make sure all the fields are filled</span>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <div className=\"d-flex  flex-column my-3\">\r\n            <h4 className=\"d-flex\">Tournament registration</h4>\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"d-flex\">Player nickname</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter nickname\"\r\n                onChange={handleNickname}\r\n              />\r\n              <span className=\"d-flex my-3\">\r\n                <strong>Information</strong>\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"d-flex\">Player email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                onChange={handleEmail}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"d-flex\">First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"John\"\r\n                onChange={handleName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"d-flex\">Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Doe\"\r\n                onChange={handleSurname}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 d-flex\" id=\"formGridCheckbox\">\r\n              <Form.Check\r\n                onClick={handleTerms}\r\n                type=\"checkbox\"\r\n                label=\"I agree to the\r\nToornament's terms of use.\"\r\n              />\r\n            </Form.Group>\r\n            <div className=\"d-flex\">\r\n              <Button\r\n                // disabled={true}\r\n                type=\"submit\"\r\n                onClick={handleUpdate}\r\n                className=\"primary-btn w-25   textColor\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default RegistrationForm;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentInfo.jsx",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Rules.jsx",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\PlayerList.jsx",["576","577"],[],"import { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlayerList = ({ participants }) => {\r\n  // const tournaments = useSelector((state) => state.tournaments.tournaments);\r\n  // const currentTournament = tournaments.tournaments.find(\r\n  //   (name) => name.name === tournament\r\n  // );\r\n  console.log(participants);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"d-flex  flex-column my-3\">\r\n            <h4 className=\"d-flex\">Participants</h4>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <Form className=\"d-flex\">\r\n            <Form.Control\r\n              type=\"search\"\r\n              placeholder=\"Search here\"\r\n              className=\"mr-3\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"secondary\">\r\n              <Icon.Search size={20} />\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* {participants.length > 0 &&\r\n          participants.map((player, index) => {\r\n            return (\r\n              <Col xs={6} lg={3}>\r\n                <Link className=\"link-none-deco\">\r\n                  <div className=\"border round textColor  d-flex px-2 participant-names py-3 my-2\">\r\n                    Louis Gadza\r\n                  </div>\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        {participants.length === 0 && (\r\n          <Col xs={6} lg={3}>\r\n            <span>No participants available yet</span>\r\n          </Col>\r\n        )} */}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default PlayerList;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\MatchType.jsx",["578","579","580","581","582","583","584","585"],[],"import {\r\n  Modal,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BackOfficeNav from \"../BackOfficeNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst MatchType = () => {\r\n  const params = useParams();\r\n  console.log(params.tournamentId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isCheckIn, setIsCheckIn] = useState(false);\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav data={tournament} user={user} page={\"structure\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h3 className=\"d-flex mb-5\">Select a match type</h3>\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                <span className=\"textColor2 notification-bell\">\r\n                  <Icon.BellFill size={35} />\r\n                  <span className=\"notification-message text-primary text-small bg-white\">\r\n                    <strong>5</strong>\r\n                  </span>\r\n                </span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n          <Row className=\" mb-5\">\r\n            <Col>\r\n              <Link>\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex  align-items-center\">\r\n                    <Row>\r\n                      <Col md={4} className=\"d-flex align-items-center\">\r\n                        <Icon.PersonFill\r\n                          size={50}\r\n                          className=\"text-muted mr-0\"\r\n                        />\r\n                        <Icon.PersonFill\r\n                          size={50}\r\n                          className=\"text-muted ml-0\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={8}>\r\n                        <h5 className=\"d-flex\">Dual</h5>\r\n                        <span className=\"d-flex text-left\">\r\n                          Matches involving two participants (either two players\r\n                          or two teams) require a structure using duel-based\r\n                          stages such as single or double elimination, gauntlet,\r\n                          round-robin or swiss system.\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n            <Col>\r\n              <Link\r\n                to={`/backoffice/projects/structures/${params.tournamentId}/stages/multiple/`}\r\n              >\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex  align-items-center\">\r\n                    <Row>\r\n                      <Col md={4} className=\"d-flex align-items-center\">\r\n                        <Icon.PeopleFill\r\n                          size={50}\r\n                          className=\"text-muted mr-0\"\r\n                        />\r\n                        <Icon.PersonFill\r\n                          size={50}\r\n                          className=\"text-muted ml-0\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={8}>\r\n                        <h5 className=\"d-flex\">Multiple</h5>\r\n                        <span className=\"d-flex text-left\">\r\n                          Matches involving more than two participants, matches\r\n                          require a structure using stages specifically designed\r\n                          for FFA.\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default MatchType;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\StageType.jsx",["586","587","588","589","590","591","592","593","594","595"],[],"import {\r\n  Modal,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BackOfficeNav from \"../BackOfficeNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst StageType = () => {\r\n  const params = useParams();\r\n  // console.log(params.tournamentId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isCheckIn, setIsCheckIn] = useState(false);\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"structure\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          <h3 className=\"d-flex mb-5\">Select a stage type</h3>\r\n          <Row className=\" mb-5\">\r\n            <Col md={6}>\r\n              <Link>\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column  justify-content-center\">\r\n                    <h5 className=\"d-flex\">Simple</h5>\r\n                    <span className=\"d-flex text-left\">\r\n                      Stage containing a single round of matches.\r\n                    </span>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Link>\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column  justify-content-center\">\r\n                    <h5 className=\"d-flex\">Single Elimination</h5>\r\n                    <span className=\"d-flex text-left\">\r\n                      Bracket with matches where a set number of participants\r\n                      qualifies for the next round.\r\n                    </span>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Link>\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column  justify-content-center\">\r\n                    <h5 className=\"d-flex\">Bracket Groups</h5>\r\n                    <span className=\"d-flex text-left\">\r\n                      Groups in which participants play free-for-all matches in\r\n                      single-elimination brackets.\r\n                    </span>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Link\r\n                to={`/backoffice/projects/structures/${params.tournamentId}/stages/multiple/league/`}\r\n              >\r\n                <Card\r\n                  className=\"border-hover textColor\"\r\n                  style={{ height: \"12rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column  justify-content-center\">\r\n                    <h5 className=\"d-flex\">League</h5>\r\n                    <span className=\"d-flex text-left\">\r\n                      Divisions in which participants earn points in matches for\r\n                      a ranking.\r\n                    </span>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default StageType;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\ConfigureStage.jsx",["596","597","598","599","600"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n  Tabs,\r\n  Tab,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BackOfficeNav from \"../BackOfficeNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { editTournament } from \"../../../redux/actions\";\r\nconst ConfigureStages = () => {\r\n  const params = useParams();\r\n  const [number, setNumber] = useState(undefined);\r\n  const [size, setSize] = useState(undefined);\r\n  const [name, setName] = useState(\"\");\r\n  const [groupSize, setGroupSize] = useState(undefined);\r\n  const [numberOfWinnersPerGroup, setNumberOfWinnersPerGroup] =\r\n    useState(undefined);\r\n  const [numberOfDivisions, setNumberOfDivisions] = useState(undefined);\r\n  const [groupComp, setGroupComp] = useState(\"\");\r\n  const [winPoints, setWinPoints] = useState(3);\r\n  const [win, setWin] = useState(true);\r\n  const [drawPoints, setDrawPoints] = useState(1);\r\n  const [draw, setDraw] = useState(true);\r\n  const [lossPoints, setLossPoints] = useState(0);\r\n  const [loss, setLoss] = useState(true);\r\n  const [forfeitPoints, setForfeitPoints] = useState(-1);\r\n  const [forfeit, setForfeit] = useState(true);\r\n  const [autoParticipantPlacement, setAutoParticipantPlacement] =\r\n    useState(true);\r\n  const [matchFormat, setMatchFormat] = useState(\"Home and Away\");\r\n  const [tiebreaker1, setTiebreaker1] = useState(\"\");\r\n  const [tiebreaker2, setTiebreaker2] = useState(\"\");\r\n  const [tiebreaker3, setTiebreaker3] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [key, setKey] = useState(\"activation\");\r\n  const [update, setUpdate] = useState(false);\r\n  const user = useSelector((state) => state.me.me);\r\n  const handleNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value);\r\n  };\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleGroupComp = (e) => {\r\n    setGroupComp(e.target.value);\r\n  };\r\n  const handleWin = (e) => {\r\n    setWin(e.target.value);\r\n  };\r\n  const handleWinPoints = (e) => {\r\n    setWinPoints(e.target.value);\r\n  };\r\n  const handleDraw = (e) => {\r\n    setDraw(e.target.value);\r\n  };\r\n  const handleDrawPoints = (e) => {\r\n    setDrawPoints(e.target.value);\r\n  };\r\n  const handleLoss = (e) => {\r\n    setLoss(e.target.value);\r\n  };\r\n  const handleLossPoints = (e) => {\r\n    setLossPoints(e.target.value);\r\n  };\r\n  const handleForfeit = (e) => {\r\n    setForfeit(e.target.value);\r\n  };\r\n  const handleForfeitPoints = (e) => {\r\n    setForfeitPoints(e.target.value);\r\n  };\r\n  const handleTiebreaker1 = (e) => {\r\n    setTiebreaker1(e.target.value);\r\n  };\r\n  const handleTiebreaker2 = (e) => {\r\n    setTiebreaker2(e.target.value);\r\n  };\r\n  const handleTiebreaker3 = (e) => {\r\n    setTiebreaker3(e.target.value);\r\n  };\r\n  const handleFalseAutoParticipantPlacement = (e) => {\r\n    setAutoParticipantPlacement(false);\r\n  };\r\n  const handleTrueAutoParticipantPlacement = (e) => {\r\n    setAutoParticipantPlacement(true);\r\n  };\r\n  const handleMatchFormat = (e) => {\r\n    setMatchFormat(e.target.value);\r\n  };\r\n  const handleNumberOfDivisions = (e) => {\r\n    setNumberOfDivisions(e.target.value);\r\n  };\r\n\r\n  const stage_type = params.typeId + \"_\" + params.configType;\r\n  const formData = {\r\n    structure: {\r\n      stage_type: stage_type,\r\n      general: {\r\n        number: Number(number),\r\n        size: Number(size),\r\n        name: name,\r\n        divisions: Number(numberOfDivisions),\r\n        group_size: Number(groupSize),\r\n        numberOfWinnersPerGroup: Number(numberOfWinnersPerGroup),\r\n      },\r\n\r\n      advanced: {\r\n        groupComp: groupComp,\r\n        pointsAtrribution: {\r\n          win: { isWin: win, points: Number(winPoints) },\r\n          draw: { isDraw: draw, points: Number(drawPoints) },\r\n          lost: { isLost: loss, points: Number(lossPoints) },\r\n        },\r\n        matchForfeit: {\r\n          isForfeit: forfeit,\r\n          points: Number(forfeitPoints),\r\n        },\r\n      },\r\n      tiebreaker: {\r\n        option1: tiebreaker1,\r\n        option2: tiebreaker2,\r\n        option3: tiebreaker3,\r\n      },\r\n      placement: {\r\n        isPlacement: autoParticipantPlacement,\r\n      },\r\n      matchSettings: {\r\n        matchFormat: matchFormat,\r\n      },\r\n    },\r\n  };\r\n\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n\r\n  const handleUpdate = () => {\r\n    number && name && size && numberOfDivisions\r\n      ? setUpdate(true)\r\n      : setUpdate(false);\r\n    dispatch(editTournament(formData, tournament._id));\r\n  };\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"structure\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card bring-top mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          {!update && (\r\n            <div className=\"registration-card bring-top mx-auto mb-5\">\r\n              <Alert key={\"warning\"} variant={\"danger\"}>\r\n                <Icon.InfoCircle size={20} color=\"red\" />\r\n                <span className=\"text-danger\">\r\n                  There is invalid data in the form. Please check it and submit\r\n                  again.\r\n                </span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <Card className=\"registration-card mx-auto\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex my-2\">\r\n                Configure stage: {params.typeId} {params.configType}\r\n              </h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Tabs\r\n                activeKey={key}\r\n                defaultActiveKey=\"profile\"\r\n                onSelect={(k) => setKey(k)}\r\n                className=\"mb-3 mx-auto d-flex justify-content-center mx-5 px-5\"\r\n              >\r\n                <Tab eventKey=\"activation\" title=\"General\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">\r\n                          Number\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                Number used to determine the order of the stages\r\n                                in the tournament. Two stages can not have the\r\n                                same number.\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span\r\n                              variant=\"light\"\r\n                              className=\"d-inline-flex align-items-center\"\r\n                            >\r\n                              <Icon.QuestionCircleFill />\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          onChange={handleNumber}\r\n                        />\r\n                        {update && !number && (\r\n                          <span className=\"text-left blink_me2\">\r\n                            This field is required and the value must be between\r\n                            1 and 30.\r\n                          </span>\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">\r\n                          Size\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                Number of participants at the beginning of the\r\n                                stage.\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span\r\n                              variant=\"light\"\r\n                              className=\"d-inline-flex align-items-center\"\r\n                            >\r\n                              <Icon.QuestionCircleFill />\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          onChange={handleSize}\r\n                        />\r\n                        {!size && update && (\r\n                          <span className=\"text-left blink_me2\">\r\n                            This field is required and this stage type must have\r\n                            a size between 3 and 128\r\n                          </span>\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex align-items-center\">\r\n                          <span>Name </span>\r\n                          <span className=\"text-small text-muted ml-2\">\r\n                            (max 30 characters)\r\n                          </span>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          maxLength={30}\r\n                          required\r\n                          onChange={handleName}\r\n                        />\r\n                        {!name && update && (\r\n                          <span className=\"text-left blink_me2\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">\r\n                          Number of divisions\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          min={2}\r\n                          onChange={handleNumberOfDivisions}\r\n                        />\r\n                        {!numberOfDivisions && update && (\r\n                          <span className=\"text-left blink_me2\">\r\n                            This field is required\r\n                          </span>\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">\r\n                          Participants per Group\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                Define how many participants will play in each\r\n                                group.\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span\r\n                              variant=\"light\"\r\n                              className=\"d-inline-flex align-items-center\"\r\n                            >\r\n                              <Icon.QuestionCircleFill />\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          min={2}\r\n                          onChange={(e) => setGroupSize(e.target.value)}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column justify-content-start\">\r\n                        <Form.Label className=\"d-flex\">\r\n                          Winners per Group\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                Define how many participants will win in the\r\n                                group and progress to the next round.\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span\r\n                              variant=\"light\"\r\n                              className=\"d-inline-flex align-items-center\"\r\n                            >\r\n                              <Icon.QuestionCircleFill />\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          min={2}\r\n                          onChange={(e) =>\r\n                            setNumberOfWinnersPerGroup(e.target.value)\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Card className=\"text-warning warning-bg\">\r\n                    <Card.Body>\r\n                      <Icon.ExclamationTriangleFill className=\"mx-1\" />\r\n                      <span className=\"text-left \">\r\n                        This stage type involves a manual matching method. All\r\n                        matches must therefore be manually entered in the\r\n                        \"matching values\" found in the advanced settings of each\r\n                        division.\r\n                      </span>\r\n                    </Card.Body>\r\n                  </Card>\r\n\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                      disabled={\r\n                        name && size && number && numberOfDivisions\r\n                          ? false\r\n                          : true\r\n                      }\r\n                    >\r\n                      <Icon.PlusLg className=\"mx-1\" size={20} />\r\n                      Create\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"advanced\" title=\"Advanced\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Form className=\"d-flex flex-column\">\r\n                        <Form.Label className=\"text-left\">\r\n                          Group composition\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"textColor py-2\"\r\n                          onSelect={handleGroupComp}\r\n                        >\r\n                          <option>Adjacent</option>\r\n                          <option value=\"1\">Random</option>\r\n                          <option value=\"2\">Ranking order</option>\r\n                        </Form.Select>\r\n                      </Form>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form className=\"d-flex flex-column disabled\">\r\n                        <Form.Label className=\"text-left\">\r\n                          Matching method\r\n                        </Form.Label>\r\n                        <Form.Select className=\"textColor py-2\" disabled={true}>\r\n                          <option>Manual</option>\r\n                          <option value=\"1\">Home and Away</option>\r\n                          <option value=\"2\">Best of</option>\r\n                        </Form.Select>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <span className=\" d-flex align-items-center m-4\">\r\n                        Points Attribution?\r\n                        <OverlayTrigger\r\n                          placement=\"top\"\r\n                          overlay={\r\n                            <Tooltip id=\"tooltip-disabled\">\r\n                              Choose how you want points to get distributed to\r\n                              participants depending on their results.\r\n                            </Tooltip>\r\n                          }\r\n                        >\r\n                          <span\r\n                            variant=\"light\"\r\n                            className=\"d-inline-flex align-items-center\"\r\n                          >\r\n                            <Icon.QuestionCircleFill />\r\n                          </span>\r\n                        </OverlayTrigger>\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card className=\"px-4\">\r\n                        <div className=\"d-flex align-items-center my-3 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"mr-2\"\r\n                            defaultChecked\r\n                            onChange={handleWin}\r\n                            label=\"win\"\r\n                          />\r\n                          <span id=\"win\">\r\n                            Win{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Award points when a player wins a match using\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </span>\r\n                        </div>\r\n                        <Card.Text className=\"mb-4\">\r\n                          <span className=\"d-flex\">Points</span>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"3\"\r\n                            defaultValue={3}\r\n                            onChange={handleWinPoints}\r\n                          />\r\n                        </Card.Text>\r\n                      </Card>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card className=\"px-4\">\r\n                        <div className=\"d-flex align-items-center my-3 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"mr-2\"\r\n                            label=\"draw\"\r\n                            onChange={handleDraw}\r\n                            defaultChecked\r\n                          />\r\n                          <span id=\"draw\">\r\n                            Draw{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Award points when a player draws a match using\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </span>\r\n                        </div>\r\n                        <Card.Text className=\"mb-4\">\r\n                          <span className=\"d-flex\">Points</span>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"1\"\r\n                            defaultValue={1}\r\n                            onChange={handleDrawPoints}\r\n                          />\r\n                        </Card.Text>\r\n                      </Card>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card className=\"px-4\">\r\n                        <div className=\"d-flex align-items-center my-3 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"mr-2\"\r\n                            label=\"lost\"\r\n                            onChange={handleLoss}\r\n                            defaultChecked\r\n                          />\r\n                          <span id=\"lost\">\r\n                            Lost{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Award points when a player loses a match using\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </span>\r\n                        </div>\r\n                        <Card.Text className=\"mb-4\">\r\n                          <span className=\"d-flex\">Points</span>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            defaultValue={0}\r\n                            onChange={handleLossPoints}\r\n                          />\r\n                        </Card.Text>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card className=\"px-4 mt-3\">\r\n                        <div className=\"d-flex align-items-center my-3 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"mr-2\"\r\n                            defaultChecked\r\n                            label=\"forfeit\"\r\n                            onChange={handleForfeit}\r\n                          />\r\n                          <span id=\"forfeit\">\r\n                            Match forfeit{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Awards points when a participant is forfeit in\r\n                                  a match (can be negative for a penalty).\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </span>\r\n                        </div>\r\n                        <Card.Text className=\"mb-4\">\r\n                          <span className=\"d-flex\">Points</span>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            defaultValue={-1}\r\n                            onChange={handleForfeitPoints}\r\n                          />\r\n                        </Card.Text>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card className=\"px-4 mt-3\">\r\n                        <div className=\"d-flex align-items-center my-3 \">\r\n                          <span>\r\n                            Tiebreakers{\" \"}\r\n                            <OverlayTrigger\r\n                              placement=\"top\"\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Choose how you want to break a tie. You can\r\n                                  Choose more than 1 options\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span\r\n                                variant=\"light\"\r\n                                className=\"d-inline-flex align-items-center\"\r\n                              >\r\n                                <Icon.QuestionCircleFill />\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </span>\r\n                        </div>\r\n                        <Card.Text className=\"mb-4 d-flex align-items-center\">\r\n                          <Form.Select className=\"  px-2 textColor py-2 w-100\">\r\n                            <option>Goals overall</option>\r\n                            <option value=\"1\">Least played matches</option>\r\n                            <option value=\"2\">\r\n                              Least game forfeits overall\r\n                            </option>\r\n                          </Form.Select>\r\n                          <Icon.Trash color=\"red\" size={30} />\r\n                        </Card.Text>\r\n                        <Card.Text className=\"mb-4 d-flex align-items-center\">\r\n                          <Form.Select className=\"textColor px-2 py-2 w-100\">\r\n                            <option>Least played matches</option>\r\n                            <option value=\"1\">Goals overall</option>\r\n                            <option value=\"2\">\r\n                              Least game forfeits overall\r\n                            </option>\r\n                          </Form.Select>\r\n                          <Icon.Trash color=\"red\" size={30} />\r\n                        </Card.Text>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Link className=\"d-flex justify-content-end mt-2\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      //   onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.PlusLg className=\"mx-1\" size={20} />\r\n                      Add\r\n                    </Button>\r\n                  </Link>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      //   onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.PlusLg className=\"mx-1\" size={20} />\r\n                      Create\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"placement\" title=\"Placement\">\r\n                  <span className=\" d-flex align-items-center mt-5\">\r\n                    Place participants automatically?\r\n                    <OverlayTrigger\r\n                      placement=\"top\"\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">\r\n                          If enabled, participants will automatically be placed\r\n                          in the stage using their creation order as seeding.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <span\r\n                        variant=\"light\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                      >\r\n                        <Icon.QuestionCircleFill />\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                  <div>\r\n                    <Form>\r\n                      <div className=\"my-3 d-flex\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          name=\"autoPlacement\"\r\n                          label=\"Yes\"\r\n                          onClick={handleTrueAutoParticipantPlacement}\r\n                          className=\"mr-3\"\r\n                          defaultChecked\r\n                        />\r\n\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          onClick={handleFalseAutoParticipantPlacement}\r\n                          name=\"autoPlacement\"\r\n                          label=\"No\"\r\n                        />\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      //   onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.PlusLg className=\"mx-1\" size={20} />\r\n                      Create\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n                <Tab eventKey=\"match_ettings\" title=\"Match Settings\">\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <Form.Group className=\"mb-3 d-flex flex-column \">\r\n                        <Form.Label className=\"mr-4 d-flex\">\r\n                          Format{\" \"}\r\n                          <OverlayTrigger\r\n                            placement=\"top\"\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                Define the match format to be applied to this\r\n                                element (tournament, stage, group, round or\r\n                                match) of the tournament, and all elements that\r\n                                depend of it. See the{\" \"}\r\n                                <Link className=\"textColor3\">\r\n                                  match format guide\r\n                                </Link>{\" \"}\r\n                                for more information about the structure\r\n                                hierarchy and available formats.\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span\r\n                              variant=\"light\"\r\n                              className=\"d-inline-flex align-items-center\"\r\n                            >\r\n                              <Icon.QuestionCircleFill />\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"textColor py-2\"\r\n                          onChange={handleMatchFormat}\r\n                        >\r\n                          <option value=\"Single game\">Single game</option>\r\n                          <option value=\"Home and Away\">Home and Away</option>\r\n                          <option value=\"Best of\">Best of</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Link className=\"d-flex justify-content-end mt-4\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      //   onClick={handleUpdate}\r\n                      className=\"primary-btn textColor\"\r\n                    >\r\n                      <Icon.PlusLg className=\"mx-1\" size={20} />\r\n                      Create\r\n                    </Button>\r\n                  </Link>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ConfigureStages;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\usersReducer.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\getTournaments.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\postTournament.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\DisputeReport.jsx",["601","602","603","604","605","606","607","608","609","610","611","612","613"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport BackOfficeNav from \"./BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament } from \"../../redux/actions\";\r\n\r\nconst DisputeReport = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n\r\n  const [update, setUpdate] = useState(false);\r\n  const user = useSelector((state) => state.me.me);\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n  };\r\n  return (\r\n    <Container fluid className=\"main-container textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav user={user} data={tournament} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          {update && (\r\n            <div className=\"registration-card bring-top mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <Card className=\"registration-card mx-auto\">\r\n              <Card.Header>\r\n                <h3 className=\"d-flex my-2\">\r\n                  Playoffs - Main Bracket-Round 1{\" \"}\r\n                </h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"d-flex justify-content-around align-items-center\">\r\n                  <h5>Louis</h5>\r\n                  <div>\r\n                    <span className=\"text-white\">\r\n                      <input\r\n                        className=\"results-input text-white py-0 mr-3\"\r\n                        type=\"number\"\r\n                        placeholder=\"0\"\r\n                      />{\" \"}\r\n                      <input\r\n                        className=\"results-input text-white\"\r\n                        type=\"number\"\r\n                        placeholder=\"0\"\r\n                      />{\" \"}\r\n                    </span>\r\n                  </div>\r\n                  <h5>Sage</h5>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <div>\r\n            <Card className=\"registration-card mx-auto mt-5\">\r\n              <Card.Body>\r\n                <h5 className=\"d-flex mb-0 pb-0\">Match Report by Louis</h5>\r\n                <span className=\"d-flex text-small mt-0\">\r\n                  Reported on 21 Aug 2023 at 20:20\r\n                </span>\r\n                <div className=\"d-flex  align-items-center\">\r\n                  <Card style={{ width: \"20rem\" }} className=\"d-flex mt-3\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span className=\"pl-2\">Louis</span>\r\n                      <span className=\"pr-2\">0</span>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between mt-2\">\r\n                      <span className=\"pl-2\">\r\n                        <strong>Sage</strong>\r\n                      </span>\r\n                      <span className=\"pr-2 text-success \">1</span>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                <h5 className=\"d-flex mb-0 mt-4 pb-0 textColor3\">\r\n                  Match Report by Sage\r\n                </h5>\r\n                <span className=\"d-flex text-small mt-0\">\r\n                  Reported on 21 Aug 2023 at 20:20\r\n                </span>\r\n                <div className=\"d-flex  align-items-center\">\r\n                  <Card style={{ width: \"20rem\" }} className=\"d-flex mt-3\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <span className=\"pl-2\">Louis</span>\r\n                      <span className=\"pr-2\">0</span>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between mt-2\">\r\n                      <span className=\"pl-2\">\r\n                        <strong>Sage</strong>\r\n                      </span>\r\n                      <span className=\"pr-2 text-success \">3</span>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </Card.Body>\r\n              <Link\r\n                // to={`/backoffice/projects/overview/${tournament}`}\r\n                className=\"d-flex justify-content-end m-3 \"\r\n              >\r\n                <Button\r\n                  type=\"submit\"\r\n                  //   onClick={handleUpdate}\r\n                  className=\"primary-btn textColor\"\r\n                >\r\n                  <Icon.ArrowLeft size={25} />\r\n                  Back\r\n                </Button>\r\n              </Link>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default DisputeReport;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\structureStages\\Structures.jsx",["614","615","616","617","618","619","620","621"],[],"import { Container, Col, Form, Row, Card, Dropdown } from \"react-bootstrap\";\r\n\r\nimport BackOfficeNav from \"../BackOfficeNav\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament, getTournaments } from \"../../../redux/actions\";\r\nconst Structures = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const user = useSelector((state) => state.me.me);\r\n  const [update, setUpdate] = useState(false);\r\n  const handleUpdate = () => {};\r\n  useEffect(() => {\r\n    dispatch(getTournaments());\r\n  }, []);\r\n  return (\r\n    <Container fluid className=\"main-container2 textColor\">\r\n      <Row>\r\n        <Col lg={2} className=\"px-0\">\r\n          <BackOfficeNav data={tournament} user={user} page={\"settings\"} />\r\n        </Col>\r\n        <Col lg={10} className=\"my-5 px-5\">\r\n          <Row>\r\n            <Col>\r\n              <h3 className=\"d-flex mb-4\">Structure</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col\r\n              //   onClick={handleShow}\r\n              md={3}\r\n              className=\"d-flex align-items-center\"\r\n            >\r\n              <Card\r\n                style={{ height: \"12rem\" }}\r\n                className=\"main-container2 plus-project w-75 mb-3\"\r\n              >\r\n                <Card.Body>\r\n                  <Icon.PlusLg size={100} color=\"rgba(244, 92, 93, 255)\" />\r\n                  <span className=\"d-flex justify-content-center  align-items-center\">\r\n                    Create new stage\r\n                  </span>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col className=\"tournament-card-edit\" md={9}>\r\n              <Row>\r\n                {[...Array(4)].map((project, index) => (\r\n                  <Col md={4}>\r\n                    <Card className=\" mb-3\">\r\n                      <Card.Header>\r\n                        <h5>1. League</h5>\r\n                      </Card.Header>\r\n                      <span>League</span>\r\n                      <Card.Body className=\"d-flex justify-content-between mt-3 pb-2 align-items-center\">\r\n                        <span className=\"textColor3 mr-5\">Configure</span>\r\n                        <Dropdown>\r\n                          <Dropdown.Toggle\r\n                            variant=\"success\"\r\n                            className=\"px-0 mx-0\"\r\n                          >\r\n                            <Icon.ThreeDotsVertical\r\n                              size={20}\r\n                              color=\"#0cc4f2\"\r\n                              className=\"px-0 mx-0\"\r\n                            />\r\n                          </Dropdown.Toggle>\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                              <Icon.Gear size={20} color=\"#0cc4f2\" />\r\n                              <span className=\"textColor3 link-btm-bar\">\r\n                                Configure\r\n                              </span>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"my-2\">\r\n                              <Icon.Search size={20} color=\"#0cc4f2\" />\r\n                              <span className=\"textColor3 link-btm-bar\">\r\n                                Results\r\n                              </span>\r\n                            </Dropdown.Item>\r\n                            <hr />\r\n                            <Dropdown.Item>\r\n                              <Icon.Trash size={20} color=\"red\" />\r\n                              <span className=\"text-danger link-btm-bar\">\r\n                                Delete\r\n                              </span>\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Structures;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Overview.jsx",["622","623","624","625","626","627","628","629","630","631","632","633","634","635","636"],[],"import {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { editTournament } from \"../../redux/actions\";\r\n\r\nconst Overview = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  // const tournament = tournamentData.tournaments.find(\r\n  //   (name) => name.name === params.tournamentId\r\n  // );\r\n\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n  };\r\n  return (\r\n    <Container fluid className=\" textColor px-0 fixture-container\">\r\n      <Row>\r\n        <Col className=\"mb-5 \">\r\n          {update && (\r\n            <div className=\"registration-card bring-top mx-auto mb-5\">\r\n              <Alert key={\"success\"} variant={\"success\"}>\r\n                <Icon.CheckCircle size={15} />\r\n                <span>Settings have been successfully updated.</span>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <Card>\r\n              <Card.Header>\r\n                <h3 className=\"d-flex h3-mobile my-2\">\r\n                  Playoffs - Main Bracket-Round 1{\" \"}\r\n                </h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"d-flex justify-content-around align-items-center\">\r\n                  <h5>Player 1</h5>\r\n                  <div>\r\n                    <span className=\"text-white\">\r\n                      <input\r\n                        className=\"results-input text-white py-0 mr-3\"\r\n                        type=\"number\"\r\n                        placeholder=\"0\"\r\n                      />{\" \"}\r\n                      <input\r\n                        className=\"results-input text-white\"\r\n                        type=\"number\"\r\n                        placeholder=\"0\"\r\n                      />{\" \"}\r\n                    </span>\r\n                  </div>\r\n                  <h5>Player 2</h5>\r\n                </div>\r\n\r\n                <Card.Body>\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between mt-3\">\r\n                    <h5 className=\" mb-0  pb-0\">Match Report</h5>\r\n                    <div>\r\n                      <span>Forfeit</span>\r\n                      <span className=\"mx-4\">Score</span>\r\n                      {/* <span>Results</span> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-between mt-3\">\r\n                    <div className=\"d-flex align-items-start flex-column\">\r\n                      <span>Player 1</span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <input type=\"radio\" name=\"forfeit\" />\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"results-input2 text-white py-0 mx-4\"\r\n                      />\r\n                      <div>\r\n                        {/* <span className=\"loss_bar py-2\">L</span>\r\n                        <span className=\"draw_bar py-2 \">D</span>\r\n                        <span className=\"win_bar py-2 \">W</span> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between mt-3\">\r\n                    <div className=\"d-flex align-items-start flex-column\">\r\n                      <span>Player 2</span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <input type=\"radio\" name=\"forfeit\" />\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"results-input2 text-white py-0 mx-4\"\r\n                      />\r\n                      {/* <div>\r\n                        <span className=\"loss_bar py-2\">L</span>\r\n                        <span className=\"draw_bar py-2 \">D</span>\r\n                        <span className=\"win_bar py-2 \">W</span>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n                <Link\r\n                  // to={`/backoffice/projects/overview/${tournament}`}\r\n                  className=\"d-flex justify-content-end m-3 \"\r\n                >\r\n                  <Button\r\n                    type=\"submit\"\r\n                    //   onClick={handleUpdate}\r\n                    className=\"primary-btn textColor\"\r\n                  >\r\n                    Report\r\n                  </Button>\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Overview;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\UserProfile.jsx",["637","638","639","640","641","642","643","644","645"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\userPage\\Fixtures.jsx",["646"],[],"import { Col, Container, Row, Table } from \"react-bootstrap\";\r\n\r\nconst Fixtures = () => {\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"fixture-container\">\r\n        {[...Array(30)].map((fixture) => (\r\n          <Col md={6} className=\"border participant-list\">\r\n            <span className=\"d-flex d-block pb-2 text-mute text-secondary\">\r\n              League\r\n            </span>\r\n            <hr className=\"py-0 my-0\" />\r\n            <div className=\"d-flex justify-content-between  border-round p-2\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div className=\"d-flex flex-column mr-5\">\r\n                  <span className=\"mb-2 text-secondary \">Player 1</span>\r\n                  <span>Player 2</span>\r\n                </div>\r\n                <div className=\"d-flex flex-column ml-5\">\r\n                  <span className=\"mb-2 text-secondary \">1</span>\r\n                  <span>3</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex flex-column pl-4 border-left\">\r\n                <span>Mar 5</span>\r\n                <span>15:00</span>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Fixtures;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\TournamentCard.jsx",["647"],[],"import { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport logo from \"../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport tournamentCover from \"../img/tournament.webp\";\r\nimport { format, compareAsc } from \"date-fns\";\r\n\r\nconst TournamentCard = ({ tournament }) => {\r\n  return (\r\n    <Card className=\"featured-games\">\r\n      <Card.Img variant=\"top\" src={tournamentCover} />\r\n      <Card.Body>\r\n        <Card.Title className=\"textColor d-flex\">\r\n          <strong>{tournament.name}</strong>\r\n          <span className=\"text-small text-muted d-flex\">\r\n            {tournament.discipline_name}\r\n          </span>\r\n        </Card.Title>\r\n        <div className=\" d-flex\">\r\n          <Icon.Calendar2Event\r\n            className=\"pr-1 pl-0 ml-0 text-success\"\r\n            size={30}\r\n          />\r\n          <span className=\"text-small text-success\">\r\n            <span className=\"d-flex\">\r\n              <span className=\"mr-1\">Registration</span>\r\n              {tournament.startDate && tournament.endDate && (\r\n                <span className=\"d-flex\">\r\n                  {\" \"}\r\n                  {format(new Date(tournament.startDate.toString()), \"dd MMM\")}\r\n                  {\" - \"}\r\n                  {format(new Date(tournament.endDate.toString()), \"dd MMM \")}\r\n                </span>\r\n              )}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <Card.Text className=\"bg-dark py-3 my-3 px-2 textColor d-flex\">\r\n          Sponsored by Impuls\r\n          <img className=\"league-provider-img ml-2\" src={logo} alt=\"logo\" />\r\n        </Card.Text>\r\n        <Link to=\"/sign-up\" className=\"w-100 d-flex justify-content-end\">\r\n          {\" \"}\r\n          <Button variant=\"danger\">Registration Open</Button>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TournamentCard;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\Tournaments\\TournamentsPage.jsx",["648","649","650","651"],[],"import { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport NavigationBar from \"../../components/NavigationBar\";\r\nimport TournamentCard from \"../../components/TournamentCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTournaments } from \"../../redux/actions\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst HomeUpdates = () => {\r\n  const dispatch = useDispatch();\r\n  const tournaments = useSelector((state) => state.tournaments.tournaments);\r\n\r\n  console.log(\r\n    tournaments.tournaments[0].registration.activation.registrationOpeningDate\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getTournaments());\r\n  }, []);\r\n  return (\r\n    <div className=\"home  main-container\">\r\n      <NavigationBar />\r\n\r\n      <Container className=\"textColor mt-5 tournament_page \">\r\n        <Row className=\"mb-5\">\r\n          {tournaments.tournaments.map((tournament) => (\r\n            <Col md={6} lg={3} className=\"mb-4 mt-5\">\r\n              <TournamentCard tournament={tournament} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default HomeUpdates;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\SignUp.jsx",["652"],[],"import { Col, Container, Row, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { registerUser } from \"../../redux/actions\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst LogInPage = () => {\r\n  const accessToken = useSelector((state) => state.accessToken.accessToken);\r\n  const isLoading = useSelector((state) => state.registerUser.isLoading);\r\n  const isError = useSelector((state) => state.registerUser.isError);\r\n  console.log(accessToken);\r\n  const [signUp, setSignUp] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const [response, setResponse] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [check, setCheck] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const registrationResponse = useSelector(\r\n    (state) => state.registerUser.registrationResponse\r\n  );\r\n  console.log(\"I am IsLOading\", registrationResponse);\r\n  const [email, setEmail] = useState(\"\");\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSurname = (e) => {\r\n    setSurname(e.target.value);\r\n  };\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleCheck = (e) => {\r\n    check ? setCheck(false) : setCheck(true);\r\n  };\r\n  const registerData = {\r\n    name: name,\r\n    surname: surname,\r\n    email: email,\r\n    password: password,\r\n    terms: check,\r\n  };\r\n  const handleUserData = async () => {\r\n    setSignUp(true);\r\n    await dispatch(registerUser(registerData));\r\n    setResponse(true);\r\n  };\r\n  return (\r\n    <Container fluid className=\"login-page\">\r\n      <Row className=\"giftcard-preview-nav py-2 \">\r\n        <Col className=\"d-flex flex-column ml-5\">\r\n          <Link className=\"mr-auto\" to={\"/\"}>\r\n            <img className=\"logo-img \" src={logo} alt=\"\" />\r\n          </Link>\r\n          <span className=\"mr-auto textColor\">LIVE EXPERIENCE</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={4} className=\" login-content\">\r\n          <div className=\" ml-3 mt-3  d-flex justify-content-between align-items-center\">\r\n            <h4>Sign Up</h4>\r\n            <Link to={\"/\"}>\r\n              <Icon.XLg className=\"textColor\" size={20} />\r\n            </Link>{\" \"}\r\n          </div>\r\n          <span className=\"d-flex ml-3 mb-1 text-secondary \">\r\n            Please fill <strong className=\"mx-1\">ALL fields</strong> in the form\r\n            to create an account\r\n          </span>\r\n          {password !== confirmPassword && signUp && (\r\n            <Alert variant=\"danger\" className=\"blink_me \">\r\n              Password and Confirm Password do not match\r\n            </Alert>\r\n          )}\r\n          {isLoading && signUp && (\r\n            <div className=\"  d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n          {isError && (\r\n            <Alert variant=\"danger\" className=\"mt-5\">\r\n              <Alert.Heading>!You got an error!</Alert.Heading>\r\n              <p>\r\n                Something went wrong on our side, we are working on it, we\r\n                apologies for the inconvenience caused\r\n              </p>\r\n            </Alert>\r\n          )}\r\n          {response && (\r\n            <Alert variant=\"primary\">{registrationResponse.message}</Alert>\r\n          )}\r\n          <hr />\r\n          <Form.Group className=\"d-flex mb-4\">\r\n            <Col>\r\n              <Form.Control\r\n                placeholder=\"First name\"\r\n                required\r\n                // onInput={handleChange}\r\n                onInput={handleName}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                placeholder=\"Last name\"\r\n                required\r\n                // onInput={handleChange}\r\n                onInput={handleSurname}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4\">\r\n            <Col>\r\n              {\" \"}\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\" Email\"\r\n                onInput={handleEmail}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4\">\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\" Password\"\r\n                onInput={handlePassword}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-2\">\r\n            <Col>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\" Confirm Password\"\r\n                onInput={handleConfirmPassword}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          {/* {password !== confirmPassword && (\r\n            <span className=\"blink_me d-flex ml-3 mb-2\">\r\n              Password do not match*\r\n            </span>\r\n          )} */}\r\n          <Form.Group className=\"mb-3\">\r\n            <Col>\r\n              <div className=\"d-flex align-items-center\">\r\n                <input\r\n                  className=\"mr-2\"\r\n                  label=\"checkbox\"\r\n                  type=\"checkbox\"\r\n                  onChange={handleCheck}\r\n                />\r\n                <div id=\"checkbox\">\r\n                  <span>I accept the </span>\r\n                  <Link className=\"mx-1\"> Teams of Use</Link> &{\" \"}\r\n                  <Link className=\"ml-1\">Privacy Policy</Link>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Form.Group>\r\n          <Col className=\" d-flex mb-2\">\r\n            <Link to=\"\" className=\"w-100\">\r\n              <Button\r\n                disabled={\r\n                  !check ||\r\n                  password !== confirmPassword ||\r\n                  !name ||\r\n                  !email ||\r\n                  !surname\r\n                }\r\n                className=\"px-4 sign-up-btn w-100\"\r\n                variant=\"primary\"\r\n                onClick={handleUserData}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <span className=\"mb-2\">\r\n            <strong>OR</strong>\r\n          </span>\r\n          <Col className=\" d-flex mb-3 \">\r\n            <a\r\n              href={`${process.env.REACT_APP_BE_PROD_URL}/users/googleLogin`}\r\n              className=\"w-100\"\r\n            >\r\n              <Button className=\"px-4 sign-up-btn w-100\" variant=\"primary\">\r\n                <Icon.Google size={20} />\r\n                <span>Continue with Google</span>\r\n              </Button>\r\n            </a>\r\n          </Col>\r\n          <div className=\"mb-3\">\r\n            <span>\r\n              I already have an account? <Link to={\"/sign-in\"}>Sign in</Link>\r\n            </span>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default LogInPage;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\registerUser.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\ChangePassword.jsx",["653","654","655","656","657","658"],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\meReducer.js",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\backoffice\\OrganizerAccount.jsx",["659","660","661","662","663","664"],[],"import {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport {\r\n  registerTournament,\r\n  getTournaments,\r\n  postProfilePicture,\r\n  getMe,\r\n} from \"../../redux/actions\";\r\nimport DeleteConfirm from \"../../components/DeleteConfirm\";\r\nimport Avatar from \"../../components/Avatar\";\r\n\r\nconst OrganizerAccount = ({ user }) => {\r\n  const params = useParams();\r\n  const tournamentData = useSelector((state) => state.tournaments.tournaments);\r\n  const tournament = tournamentData.tournaments.find(\r\n    (name) => name.name === params.tournamentId\r\n  );\r\n  const signInCredentials = useSelector(\r\n    (state) => state.adminToken.accessToken\r\n  );\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const [nickName, setNickName] = useState(undefined);\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.giftData.isLoading);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [termsCheck, setTermsCheck] = useState(false);\r\n  const handleNickname = (e) => {\r\n    setNickName(e.target.value);\r\n  };\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleSurname = (e) => {\r\n    setSurname(e.target.value);\r\n  };\r\n  const [avatar, setAvatar] = useState(null);\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleTerms = (e) => {\r\n    termsCheck ? setTermsCheck(false) : setTermsCheck(true);\r\n  };\r\n  const handleAvatar = (e) => {\r\n    setAvatar(e.target.files[0]);\r\n  };\r\n\r\n  // formData.append(\"post\", files[0]);\r\n  const userData = {\r\n    nickname: nickName,\r\n    name: name,\r\n    surname: surname,\r\n    email: email,\r\n    terms: termsCheck,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  console.log(avatar);\r\n  const handleUpdate = () => {\r\n    setUpdate(true);\r\n    dispatch(registerTournament(userData, tournament._id));\r\n    dispatch(getTournaments());\r\n  };\r\n  const handleData = () => {\r\n    //  await dispatch(deleteOrganiser(tournament._id));\r\n    //  dispatch(getTournaments());\r\n    handleCloseDelete();\r\n  };\r\n\r\n  const handleAvatarUpload = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"avatar\", avatar);\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    axios\r\n      .post(`${URL}/files/${user._id}/avatar`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch(getMe(signInCredentials.accessToken));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row className=\"-d-flex  w-100 ml-auto organizer\">\r\n      <Col\r\n        // onClick={handleShow}\r\n        lg={8}\r\n        md={8}\r\n        sm={8}\r\n        xs={12}\r\n        xl={8}\r\n        className=\"d-xs-none d-sm-none d-md-none d-lg-block\"\r\n      >\r\n        {name && email && surname && termsCheck && nickName && update && (\r\n          <div className=\"registration-card mx-auto mt-5\">\r\n            <Alert key={\"success\"} variant={\"success\"}>\r\n              <Icon.CheckCircle size={15} />\r\n              <span>Updated</span>\r\n            </Alert>\r\n          </div>\r\n        )}\r\n        {/* {(!name ||\r\n          !email ||\r\n          !surname ||\r\n          !termsCheck ||\r\n          !nickName ||\r\n          !update) && (\r\n          <div className=\"registration-card mx-auto mt-5\">\r\n            <Alert key={\"warning\"} variant={\"danger\"}>\r\n              <Icon.XCircle size={15} />\r\n              <span>Make sure all the fields are filled</span>\r\n            </Alert>\r\n          </div>\r\n        )} */}\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex  flex-column my-3\">\r\n              <h4 className=\"d-flex\">Edit your profile</h4>\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\"> Nickname</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={user.nickname}\r\n                  onChange={handleNickname}\r\n                />\r\n                <span className=\"d-flex my-3\">\r\n                  <strong>Information</strong>\r\n                </span>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\"> Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder={user.email}\r\n                  onChange={handleEmail}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={user.name}\r\n                  onChange={handleName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={user.surname}\r\n                  onChange={handleSurname}\r\n                />\r\n              </Form.Group>\r\n              <span className=\"d-flex my-3\">\r\n                <strong>Organizer</strong>\r\n              </span>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">Organization</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Impuls Gaming\"\r\n                  onChange={handleSurname}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">Position </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  disabled={true}\r\n                  placeholder=\"Admin\"\r\n                  onChange={handleSurname}\r\n                />\r\n              </Form.Group>\r\n              <div className=\"d-flex\">\r\n                <Button\r\n                  // disabled={true}\r\n                  type=\"submit\"\r\n                  onClick={handleUpdate}\r\n                  className=\"primary-btn w-25 mr-3  textColor\"\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  // disabled={true}\r\n                  type=\"submit\"\r\n                  onClick={handleUpdate}\r\n                  className=\"primary-btn w-25   textColor\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col lg={2}></Col>\r\n      <Col lg={2} className=\"d-flex flex-column justify-content-between\">\r\n        <div className=\"mt-5\">\r\n          <Avatar\r\n            src={user.avatar}\r\n            alt=\"Profile Avatar\"\r\n            className=\"avatar\"\r\n            width={100}\r\n            height={100}\r\n          />\r\n          <Row>\r\n            <Col>\r\n              <label className=\"textColor3 mt-2\" htmlFor=\"profile\">\r\n                Change profile\r\n              </label>\r\n              <input\r\n                id=\"profile\"\r\n                type=\"file\"\r\n                style={{ visibility: \"hidden\" }}\r\n                label=\"Change profile picture\"\r\n                onChange={handleAvatar}\r\n              />\r\n              {avatar && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  onClick={handleAvatarUpload}\r\n                  className=\"primary-btn w-100  textColor\"\r\n                >\r\n                  Update Profile\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Button\r\n          // disabled={true}\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            setShowDelete(true);\r\n          }}\r\n          className=\"primary-btn w-100  textColor\"\r\n        >\r\n          Delete Account\r\n        </Button>\r\n      </Col>\r\n      <Modal\r\n        show={showDelete}\r\n        size=\"lg\"\r\n        onHide={handleCloseDelete}\r\n        className=\"modal-hieght textColor\"\r\n      >\r\n        <Modal.Body className=\"py-0 mt-3 px-4\">\r\n          {/* {OrganizerAccount && ( */}\r\n          <Container>\r\n            <Row>\r\n              <h6 className=\"my-5 \">\r\n                Are you sure you want to delete{\" \"}\r\n                <strong className=\"textColor2 mx-2\">Louis Gadza</strong>\r\n              </h6>\r\n              <div className=\"my-5 ml-auto\">\r\n                <Button onClick={handleCloseDelete} variant=\"outline-primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Link>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={handleData}\r\n                    className=\"primary-btn ml-3 textColor\"\r\n                  >\r\n                    <Icon.Trash size={20} />\r\n                    Delete\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n          {/* )} */}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Row>\r\n  );\r\n};\r\nexport default OrganizerAccount;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\OrganiserLogin.jsx",["665","666","667"],[],"import {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getTournaments, logInData, adminSignIn } from \"../../redux/actions\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { getMe } from \"../../redux/actions\";\r\n\r\nconst OrganizerSignIn = () => {\r\n  const [forgotPassword, setForgotPassword] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [sign_in, setSign_in] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const isLoading = useSelector((state) => state.adminToken.isLoading);\r\n  const isGetMeLoading = useSelector((state) => state.me.isLoading);\r\n  const isError = useSelector((state) => state.adminToken.isError);\r\n  const signInCredentials = useSelector(\r\n    (state) => state.adminToken.accessToken\r\n  );\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleCheck = (e) => {\r\n    check ? setCheck(false) : setCheck(true);\r\n  };\r\n  const handleForgetPassword = () => {\r\n    setForgotPassword(true);\r\n  };\r\n  const handleKnowPassword = () => {\r\n    setForgotPassword(false);\r\n  };\r\n  const loginFormData = {\r\n    email: email,\r\n    password: password,\r\n    rememberSignIn: check,\r\n    role: \"Admin\",\r\n  };\r\n  const handleSignIn = async () => {\r\n    setSign_in(true);\r\n    await dispatch(adminSignIn(loginFormData));\r\n  };\r\n  if (signInCredentials.accessToken) {\r\n    dispatch(getMe(signInCredentials.accessToken));\r\n    dispatch(getTournaments());\r\n    if (!isGetMeLoading) {\r\n      navigate(\"/backoffice\");\r\n    }\r\n  }\r\n  return (\r\n    <Container fluid className=\"login-page \">\r\n      <Row className=\"giftcard-preview-nav py-2 \">\r\n        <Col className=\"d-flex flex-column ml-5\">\r\n          <Link className=\"mr-auto\" to={\"/\"}>\r\n            <img className=\"logo-img \" src={logo} alt=\"\" />\r\n          </Link>\r\n          <span className=\"mr-auto textColor\">LIVE EXPIRIENCE</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={4} className=\" login-content\">\r\n          <div className=\" ml-3 mt-3 d-flex justify-content-between align-items-center\">\r\n            {forgotPassword && <h4 className=\"mb-3\">Forgot Password</h4>}\r\n            {!forgotPassword && <h4>Sign In</h4>}\r\n            <Link to={\"/\"}>\r\n              <Icon.XLg size={20} className=\"textColor\" />\r\n            </Link>{\" \"}\r\n          </div>\r\n          {isLoading && sign_in ? (\r\n            <div className=\"  d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          ) : isGetMeLoading && sign_in ? (\r\n            <div className=\"  d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner />\r\n            </div>\r\n          ) : null}\r\n          {isError && sign_in && (\r\n            <Alert variant=\"danger\">\r\n              The email or password you provided is incorrect\r\n            </Alert>\r\n          )}\r\n          {!forgotPassword && (\r\n            <>\r\n              {/* //TODO do not delete me I am the registration confirmation */}\r\n              {/* <Alert variant=\"success\">\r\n                Account verification has been successfully completed\r\n              </Alert> */}\r\n              <hr />\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\" Email\"\r\n                    onChange={handleEmail}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\" Password\"\r\n                    onChange={handlePassword}\r\n                    minLength={5}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Col>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      className=\"mr-2\"\r\n                      lavel=\"checkbox\"\r\n                      type=\"checkbox\"\r\n                      onClick={handleCheck}\r\n                    />\r\n                    <span id=\"checkbox\">Remember me</span>\r\n                  </div>\r\n                </Col>\r\n              </Form.Group>\r\n              <Col className=\" mb-3 \">\r\n                <Link to=\"\" className=\"w-100\">\r\n                  <Button\r\n                    disabled={!email || !password}\r\n                    className=\"px-4 sign-up-btn w-100\"\r\n                    variant=\"primary\"\r\n                    onClick={handleSignIn}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Link>\r\n                <div className=\"mb-3\">\r\n                  <span>\r\n                    <Link onClick={handleForgetPassword}>\r\n                      Forgotten your password\r\n                    </Link>\r\n                  </span>\r\n                </div>\r\n              </Col>\r\n\r\n              <span className=\"mb-2\">\r\n                <strong>OR</strong>\r\n              </span>\r\n              <Col className=\" d-flex mb-3 \">\r\n                <a\r\n                  href={`${process.env.REACT_APP_BE_PROD_URL}/users/googleLogin`}\r\n                  className=\"w-100\"\r\n                >\r\n                  <Button className=\"px-4 sign-up-btn w-100\" variant=\"primary\">\r\n                    <Icon.Google size={20} />\r\n                    <span>Continue with Google</span>\r\n                  </Button>\r\n                </a>\r\n              </Col>\r\n            </>\r\n          )}\r\n          {forgotPassword && (\r\n            <>\r\n              <Alert variant=\"primary\">\r\n                We've sent a verification link on your email address\r\n              </Alert>\r\n              <hr />\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\" Email\"\r\n                    onChange={handleEmail}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Col className=\" d-flex mb-3 \">\r\n                <Link to=\"\" className=\"w-100\">\r\n                  <Button\r\n                    disabled={!email}\r\n                    className=\"px-4 sign-up-btn w-100\"\r\n                    variant=\"primary\"\r\n                  >\r\n                    Send Reset Link\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <div className=\"mb-3\">\r\n                <span>\r\n                  {\" \"}\r\n                  Back to! <Link onClick={handleKnowPassword}>Login</Link>\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={4} className=\" login-content py-3\">\r\n          <span className=\"py-3\">You don't have an account yet?</span>\r\n          <hr />\r\n          <Link to=\"/organiser/signUp\">\r\n            <Button className=\"px-4 sign-up-btn w-100\" variant=\"success\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default OrganizerSignIn;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\pages\\registration\\OrganiserSignUp.jsx",["668","669","670"],[],"import { Col, Container, Row, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../img/Blue_Futuristic_Gaming_Logo-removebg-preview.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { registerUser } from \"../../redux/actions\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst OrganiserSignUp = () => {\r\n  const accessToken = useSelector((state) => state.accessToken.accessToken);\r\n  const isLoading = useSelector((state) => state.registerUser.isLoading);\r\n  const isError = useSelector((state) => state.registerUser.isError);\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [response, setResponse] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [organization, setOrganization] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [check, setCheck] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const registrationResponse = useSelector(\r\n    (state) => state.registerUser.registrationResponse\r\n  );\r\n  console.log(\"I am IsLOading\", isLoading);\r\n  const [email, setEmail] = useState(\"\");\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSurname = (e) => {\r\n    setSurname(e.target.value);\r\n  };\r\n  const handleNickname = (e) => {\r\n    setNickname(e.target.value);\r\n  };\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleOrganization = (e) => {\r\n    setOrganization(e.target.value);\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const handleCheck = (e) => {\r\n    check ? setCheck(false) : setCheck(true);\r\n  };\r\n  const registerData = {\r\n    name,\r\n    surname,\r\n    email,\r\n    password,\r\n    terms: check,\r\n    nickname,\r\n    organization,\r\n    role: \"Admin\",\r\n  };\r\n  const handleUserData = async () => {\r\n    setSignUp(true);\r\n    await dispatch(registerUser(registerData));\r\n    setResponse(true);\r\n  };\r\n  return (\r\n    <Container fluid className=\"login-page\">\r\n      <Row className=\"giftcard-preview-nav py-2 \">\r\n        <Col className=\"d-flex flex-column ml-5\">\r\n          <Link className=\"mr-auto\" to={\"/\"}>\r\n            <img className=\"logo-img \" src={logo} alt=\"\" />\r\n          </Link>\r\n          <span className=\"mr-auto textColor\">LIVE EXPERIENCE</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center mt-4 textColor\">\r\n        <Col lg={8} className=\" login-content\">\r\n          <Row>\r\n            <Col>\r\n              <div className=\" ml-3 mt-3  d-flex justify-content-between align-items-center\">\r\n                <h4>Sign Up</h4>\r\n                <Link to={\"/\"}>\r\n                  <Icon.XLg className=\"textColor\" size={20} />\r\n                </Link>{\" \"}\r\n              </div>\r\n              <span className=\"d-flex ml-3 mb-1 text-secondary \">\r\n                Please fill <strong className=\"mx-1\">ALL fields</strong> in the\r\n                form to create an account\r\n              </span>\r\n              {password !== confirmPassword && signUp && (\r\n                <Alert variant=\"danger\" className=\"blink_me \">\r\n                  Password and Confirm Password do not match\r\n                </Alert>\r\n              )}\r\n              {isLoading && signUp && (\r\n                <div className=\"  d-flex justify-content-center\">\r\n                  {\" \"}\r\n                  <Spinner />\r\n                </div>\r\n              )}\r\n              {isError && (\r\n                <Alert variant=\"danger\" className=\"mt-5\">\r\n                  <Alert.Heading>!You got an error!</Alert.Heading>\r\n                  <p>\r\n                    Something went wrong on our side, we are working on it, we\r\n                    apologies for the inconvenience caused\r\n                  </p>\r\n                </Alert>\r\n              )}\r\n              {response && (\r\n                <Alert variant=\"primary\">{registrationResponse.message}</Alert>\r\n              )}\r\n              <hr />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group className=\"d-flex mb-4\">\r\n                <Col>\r\n                  <Form.Control\r\n                    placeholder=\"First name\"\r\n                    required\r\n                    // onInput={handleChange}\r\n                    onInput={handleName}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    placeholder=\"Last name\"\r\n                    required\r\n                    // onInput={handleChange}\r\n                    onInput={handleSurname}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\" Nickname\"\r\n                    onInput={handleNickname}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\" Email\"\r\n                    onInput={handleEmail}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\" Password\"\r\n                    onInput={handlePassword}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-2\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\" Confirm Password\"\r\n                    onInput={handleConfirmPassword}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              {/* {password !== confirmPassword && (\r\n            <span className=\"blink_me d-flex ml-3 mb-2\">\r\n              Password do not match*\r\n            </span>\r\n          )} */}\r\n            </Col>\r\n            <Col>\r\n              <span className=\"d-flex mb-3\">\r\n                <strong>Organizer</strong>\r\n              </span>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">Organization</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Impuls Gaming\"\r\n                  onChange={handleOrganization}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label className=\"d-flex\">Position </Form.Label>\r\n                <Form.Control\r\n                  disabled={true}\r\n                  type=\"text\"\r\n                  placeholder=\"Admin\"\r\n                  onChange={handleSurname}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Col>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      className=\"mr-2\"\r\n                      label=\"checkbox\"\r\n                      type=\"checkbox\"\r\n                      onChange={handleCheck}\r\n                    />\r\n                    <div id=\"checkbox\">\r\n                      <span>I accept the </span>\r\n                      <Link className=\"mx-1\"> Teams of Use</Link> &{\" \"}\r\n                      <Link className=\"ml-1\">Privacy Policy</Link>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Form.Group>\r\n              <Col className=\" d-flex mb-2\">\r\n                <Link to=\"\" className=\"w-100\">\r\n                  <Button\r\n                    disabled={\r\n                      !check ||\r\n                      password !== confirmPassword ||\r\n                      !name ||\r\n                      !email ||\r\n                      !surname ||\r\n                      !nickname\r\n                    }\r\n                    className=\"px-4 sign-up-btn w-100\"\r\n                    variant=\"primary\"\r\n                    onClick={handleUserData}\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <span className=\"mb-2\">\r\n                <strong>OR</strong>\r\n              </span>\r\n              <Col className=\" d-flex mb-3 \">\r\n                <a\r\n                  href={`${process.env.REACT_APP_BE_PROD_URL}/users/googleLogin`}\r\n                  className=\"w-100\"\r\n                >\r\n                  <Button className=\"px-4 sign-up-btn w-100\" variant=\"primary\">\r\n                    <Icon.Google size={20} />\r\n                    <span>Continue with Google</span>\r\n                  </Button>\r\n                </a>\r\n              </Col>\r\n              <div className=\"mb-3\">\r\n                <span>\r\n                  I already have an account?{\" \"}\r\n                  <Link to={\"/organiser/signIn\"}>Sign in</Link>\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default OrganiserSignUp;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\Avatar.jsx",[],[],"C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\components\\LoggedInOrganizer.jsx",["671"],[],"import * as Icon from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"./Avatar\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoggedInOrganizer = ({ clicked, user, profileClicked }) => {\r\n  const [organizerAccountClicked, setOrganizerAccountClicked] = useState(false);\r\n  const handleOrganizerAccountClicked = () => {\r\n    organizerAccountClicked\r\n      ? setOrganizerAccountClicked(false)\r\n      : setOrganizerAccountClicked(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Link\r\n        // onClick={clicked}\r\n        className=\"d-flex justify-content-between textColor align-items-center \"\r\n      >\r\n        <div>\r\n          <Avatar\r\n            src={user.avatar}\r\n            alt=\"Profile Avatar\"\r\n            className=\"avatar\"\r\n            width={40}\r\n            height={40}\r\n          />\r\n          <span className=\"ml-1\">{user.nickname}</span>\r\n        </div>\r\n        <Icon.CaretDownFill size={15} />\r\n      </Link>\r\n      <div className=\"d-flex flex-column align-items-start\">\r\n        <Link\r\n          // onClick={profileClicked}\r\n          className={`my-3  ${organizerAccountClicked ? \"\" : \"textColor\"}`}\r\n        >\r\n          <span>Account</span>\r\n        </Link>\r\n        <Link className=\"textColor\">\r\n          <span>Logout</span>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default LoggedInOrganizer;\r\n","C:\\Users\\siuol\\Documents\\Impuls_Gaming_Project\\impuls-gaming\\src\\redux\\reducers\\adminLogin.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\index.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\App.js",["672"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\store\\index.js",["673"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\usersReducer.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\login.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\postTournament.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\giftCard.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userChat.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userData.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\userPreference.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\getTournaments.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\adminLogin.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\registerUser.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\reducers\\meReducer.js",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\redux\\actions\\index.js",["674","675"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\NavigationBar.jsx",["676","677"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\Avatar.jsx",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\pages\\Home.jsx",[],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\SignUp.jsx",["678","679","680","681","682","683","684","685","686","687","688"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\LoginPage.jsx",["689","690","691","692","693","694","695","696","697"],[],"C:\\Users\\siuol\\Documents\\WhatsApp Clone\\Whatsapp-FE\\src\\components\\SignIn.jsx",["698","699","700","701","702","703","704","705","706","707"],[],{"ruleId":"708","severity":1,"message":"709","line":4,"column":8,"nodeType":"710","messageId":"711","endLine":4,"endColumn":21},{"ruleId":"708","severity":1,"message":"712","line":12,"column":8,"nodeType":"710","messageId":"711","endLine":12,"endColumn":17},{"ruleId":"708","severity":1,"message":"713","line":3,"column":13,"nodeType":"710","messageId":"711","endLine":3,"endColumn":17},{"ruleId":"708","severity":1,"message":"714","line":8,"column":10,"nodeType":"710","messageId":"711","endLine":8,"endColumn":18},{"ruleId":"708","severity":1,"message":"715","line":8,"column":20,"nodeType":"710","messageId":"711","endLine":8,"endColumn":31},{"ruleId":"708","severity":1,"message":"716","line":2,"column":8,"nodeType":"710","messageId":"711","endLine":2,"endColumn":19},{"ruleId":"708","severity":1,"message":"717","line":4,"column":8,"nodeType":"710","messageId":"711","endLine":4,"endColumn":16},{"ruleId":"708","severity":1,"message":"718","line":6,"column":8,"nodeType":"710","messageId":"711","endLine":6,"endColumn":14},{"ruleId":"708","severity":1,"message":"719","line":8,"column":8,"nodeType":"710","messageId":"711","endLine":8,"endColumn":12},{"ruleId":"708","severity":1,"message":"720","line":9,"column":8,"nodeType":"710","messageId":"711","endLine":9,"endColumn":18},{"ruleId":"708","severity":1,"message":"721","line":13,"column":10,"nodeType":"710","messageId":"711","endLine":13,"endColumn":18},{"ruleId":"722","severity":1,"message":"723","line":23,"column":6,"nodeType":"724","endLine":23,"endColumn":8,"suggestions":"725"},{"ruleId":"708","severity":1,"message":"726","line":1,"column":20,"nodeType":"710","messageId":"711","endLine":1,"endColumn":29},{"ruleId":"708","severity":1,"message":"727","line":9,"column":18,"nodeType":"710","messageId":"711","endLine":9,"endColumn":28},{"ruleId":"708","severity":1,"message":"728","line":14,"column":20,"nodeType":"710","messageId":"711","endLine":14,"endColumn":34},{"ruleId":"708","severity":1,"message":"729","line":26,"column":9,"nodeType":"710","messageId":"711","endLine":26,"endColumn":18},{"ruleId":"708","severity":1,"message":"730","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":23},{"ruleId":"708","severity":1,"message":"731","line":1,"column":8,"nodeType":"710","messageId":"711","endLine":1,"endColumn":13},{"ruleId":"732","severity":1,"message":"733","line":540,"column":34,"nodeType":"734","messageId":"735","endLine":540,"endColumn":35},{"ruleId":"708","severity":1,"message":"736","line":9,"column":9,"nodeType":"710","messageId":"711","endLine":9,"endColumn":17},{"ruleId":"708","severity":1,"message":"737","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":21},{"ruleId":"708","severity":1,"message":"738","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":28},{"ruleId":"708","severity":1,"message":"726","line":21,"column":20,"nodeType":"710","messageId":"711","endLine":21,"endColumn":29},{"ruleId":"722","severity":1,"message":"723","line":24,"column":6,"nodeType":"724","endLine":24,"endColumn":8,"suggestions":"739"},{"ruleId":"708","severity":1,"message":"726","line":5,"column":20,"nodeType":"710","messageId":"711","endLine":5,"endColumn":29},{"ruleId":"708","severity":1,"message":"740","line":25,"column":21,"nodeType":"710","messageId":"711","endLine":25,"endColumn":33},{"ruleId":"708","severity":1,"message":"729","line":27,"column":9,"nodeType":"710","messageId":"711","endLine":27,"endColumn":18},{"ruleId":"722","severity":1,"message":"723","line":36,"column":6,"nodeType":"724","endLine":36,"endColumn":8,"suggestions":"741"},{"ruleId":"722","severity":1,"message":"723","line":30,"column":6,"nodeType":"724","endLine":30,"endColumn":8,"suggestions":"742"},{"ruleId":"708","severity":1,"message":"743","line":1,"column":15,"nodeType":"710","messageId":"711","endLine":1,"endColumn":24},{"ruleId":"708","severity":1,"message":"744","line":1,"column":26,"nodeType":"710","messageId":"711","endLine":1,"endColumn":29},{"ruleId":"708","severity":1,"message":"737","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":21},{"ruleId":"708","severity":1,"message":"738","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":28},{"ruleId":"708","severity":1,"message":"726","line":21,"column":20,"nodeType":"710","messageId":"711","endLine":21,"endColumn":29},{"ruleId":"708","severity":1,"message":"745","line":34,"column":10,"nodeType":"710","messageId":"711","endLine":34,"endColumn":13},{"ruleId":"708","severity":1,"message":"746","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":7},{"ruleId":"708","severity":1,"message":"726","line":13,"column":20,"nodeType":"710","messageId":"711","endLine":13,"endColumn":29},{"ruleId":"708","severity":1,"message":"747","line":14,"column":26,"nodeType":"710","messageId":"711","endLine":14,"endColumn":35},{"ruleId":"708","severity":1,"message":"748","line":57,"column":11,"nodeType":"710","messageId":"711","endLine":57,"endColumn":16},{"ruleId":"708","severity":1,"message":"749","line":2,"column":3,"nodeType":"710","messageId":"711","endLine":2,"endColumn":8},{"ruleId":"708","severity":1,"message":"750","line":6,"column":3,"nodeType":"710","messageId":"711","endLine":6,"endColumn":9},{"ruleId":"708","severity":1,"message":"751","line":7,"column":3,"nodeType":"710","messageId":"711","endLine":7,"endColumn":7},{"ruleId":"708","severity":1,"message":"752","line":12,"column":8,"nodeType":"710","messageId":"711","endLine":12,"endColumn":12},{"ruleId":"708","severity":1,"message":"721","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":15,"column":20,"nodeType":"710","messageId":"711","endLine":15,"endColumn":29},{"ruleId":"708","severity":1,"message":"736","line":23,"column":9,"nodeType":"710","messageId":"711","endLine":23,"endColumn":17},{"ruleId":"708","severity":1,"message":"753","line":24,"column":9,"nodeType":"710","messageId":"711","endLine":24,"endColumn":17},{"ruleId":"708","severity":1,"message":"737","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":21},{"ruleId":"708","severity":1,"message":"754","line":18,"column":23,"nodeType":"710","messageId":"711","endLine":18,"endColumn":34},{"ruleId":"708","severity":1,"message":"738","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":28},{"ruleId":"708","severity":1,"message":"755","line":20,"column":8,"nodeType":"710","messageId":"711","endLine":20,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":21,"column":20,"nodeType":"710","messageId":"711","endLine":21,"endColumn":29},{"ruleId":"708","severity":1,"message":"737","line":12,"column":10,"nodeType":"710","messageId":"711","endLine":12,"endColumn":21},{"ruleId":"722","severity":1,"message":"723","line":33,"column":6,"nodeType":"724","endLine":33,"endColumn":8,"suggestions":"756"},{"ruleId":"708","severity":1,"message":"757","line":5,"column":9,"nodeType":"710","messageId":"711","endLine":5,"endColumn":16},{"ruleId":"708","severity":1,"message":"758","line":4,"column":10,"nodeType":"710","messageId":"711","endLine":4,"endColumn":14},{"ruleId":"708","severity":1,"message":"759","line":7,"column":10,"nodeType":"710","messageId":"711","endLine":7,"endColumn":18},{"ruleId":"708","severity":1,"message":"760","line":7,"column":20,"nodeType":"710","messageId":"711","endLine":7,"endColumn":28},{"ruleId":"708","severity":1,"message":"761","line":13,"column":7,"nodeType":"710","messageId":"711","endLine":13,"endColumn":15},{"ruleId":"708","severity":1,"message":"753","line":18,"column":9,"nodeType":"710","messageId":"711","endLine":18,"endColumn":17},{"ruleId":"708","severity":1,"message":"762","line":20,"column":10,"nodeType":"710","messageId":"711","endLine":20,"endColumn":21},{"ruleId":"708","severity":1,"message":"763","line":20,"column":23,"nodeType":"710","messageId":"711","endLine":20,"endColumn":37},{"ruleId":"708","severity":1,"message":"745","line":24,"column":10,"nodeType":"710","messageId":"711","endLine":24,"endColumn":13},{"ruleId":"722","severity":1,"message":"764","line":40,"column":6,"nodeType":"724","endLine":40,"endColumn":30,"suggestions":"765"},{"ruleId":"708","severity":1,"message":"766","line":1,"column":20,"nodeType":"710","messageId":"711","endLine":1,"endColumn":31},{"ruleId":"708","severity":1,"message":"751","line":1,"column":43,"nodeType":"710","messageId":"711","endLine":1,"endColumn":47},{"ruleId":"708","severity":1,"message":"750","line":1,"column":49,"nodeType":"710","messageId":"711","endLine":1,"endColumn":55},{"ruleId":"708","severity":1,"message":"713","line":2,"column":13,"nodeType":"710","messageId":"711","endLine":2,"endColumn":17},{"ruleId":"708","severity":1,"message":"767","line":3,"column":10,"nodeType":"710","messageId":"711","endLine":3,"endColumn":21},{"ruleId":"708","severity":1,"message":"754","line":3,"column":23,"nodeType":"710","messageId":"711","endLine":3,"endColumn":34},{"ruleId":"708","severity":1,"message":"768","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":17},{"ruleId":"708","severity":1,"message":"769","line":9,"column":3,"nodeType":"710","messageId":"711","endLine":9,"endColumn":10},{"ruleId":"708","severity":1,"message":"770","line":10,"column":3,"nodeType":"710","messageId":"711","endLine":10,"endColumn":8},{"ruleId":"708","severity":1,"message":"737","line":14,"column":10,"nodeType":"710","messageId":"711","endLine":14,"endColumn":21},{"ruleId":"708","severity":1,"message":"727","line":18,"column":18,"nodeType":"710","messageId":"711","endLine":18,"endColumn":28},{"ruleId":"708","severity":1,"message":"755","line":19,"column":8,"nodeType":"710","messageId":"711","endLine":19,"endColumn":18},{"ruleId":"708","severity":1,"message":"721","line":20,"column":10,"nodeType":"710","messageId":"711","endLine":20,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":20,"column":20,"nodeType":"710","messageId":"711","endLine":20,"endColumn":29},{"ruleId":"708","severity":1,"message":"771","line":29,"column":28,"nodeType":"710","messageId":"711","endLine":29,"endColumn":34},{"ruleId":"708","severity":1,"message":"753","line":38,"column":9,"nodeType":"710","messageId":"711","endLine":38,"endColumn":17},{"ruleId":"708","severity":1,"message":"743","line":2,"column":3,"nodeType":"710","messageId":"711","endLine":2,"endColumn":12},{"ruleId":"708","severity":1,"message":"751","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":7},{"ruleId":"708","severity":1,"message":"768","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":17},{"ruleId":"708","severity":1,"message":"769","line":9,"column":3,"nodeType":"710","messageId":"711","endLine":9,"endColumn":10},{"ruleId":"708","severity":1,"message":"770","line":10,"column":3,"nodeType":"710","messageId":"711","endLine":10,"endColumn":8},{"ruleId":"708","severity":1,"message":"737","line":14,"column":10,"nodeType":"710","messageId":"711","endLine":14,"endColumn":21},{"ruleId":"708","severity":1,"message":"758","line":14,"column":34,"nodeType":"710","messageId":"711","endLine":14,"endColumn":38},{"ruleId":"708","severity":1,"message":"713","line":15,"column":13,"nodeType":"710","messageId":"711","endLine":15,"endColumn":17},{"ruleId":"708","severity":1,"message":"767","line":17,"column":10,"nodeType":"710","messageId":"711","endLine":17,"endColumn":21},{"ruleId":"708","severity":1,"message":"754","line":17,"column":23,"nodeType":"710","messageId":"711","endLine":17,"endColumn":34},{"ruleId":"708","severity":1,"message":"738","line":18,"column":10,"nodeType":"710","messageId":"711","endLine":18,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":18,"column":18,"nodeType":"710","messageId":"711","endLine":18,"endColumn":28},{"ruleId":"708","severity":1,"message":"755","line":19,"column":8,"nodeType":"710","messageId":"711","endLine":19,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":20,"column":20,"nodeType":"710","messageId":"711","endLine":20,"endColumn":29},{"ruleId":"708","severity":1,"message":"772","line":24,"column":9,"nodeType":"710","messageId":"711","endLine":24,"endColumn":15},{"ruleId":"708","severity":1,"message":"745","line":30,"column":10,"nodeType":"710","messageId":"711","endLine":30,"endColumn":13},{"ruleId":"708","severity":1,"message":"773","line":30,"column":15,"nodeType":"710","messageId":"711","endLine":30,"endColumn":21},{"ruleId":"708","severity":1,"message":"774","line":1,"column":33,"nodeType":"710","messageId":"711","endLine":1,"endColumn":36},{"ruleId":"708","severity":1,"message":"751","line":1,"column":46,"nodeType":"710","messageId":"711","endLine":1,"endColumn":50},{"ruleId":"708","severity":1,"message":"721","line":5,"column":10,"nodeType":"710","messageId":"711","endLine":5,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":5,"column":20,"nodeType":"710","messageId":"711","endLine":5,"endColumn":29},{"ruleId":"708","severity":1,"message":"737","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":21},{"ruleId":"708","severity":1,"message":"738","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":28},{"ruleId":"708","severity":1,"message":"726","line":21,"column":20,"nodeType":"710","messageId":"711","endLine":21,"endColumn":29},{"ruleId":"708","severity":1,"message":"726","line":2,"column":20,"nodeType":"710","messageId":"711","endLine":2,"endColumn":29},{"ruleId":"708","severity":1,"message":"737","line":4,"column":10,"nodeType":"710","messageId":"711","endLine":4,"endColumn":21},{"ruleId":"708","severity":1,"message":"758","line":4,"column":34,"nodeType":"710","messageId":"711","endLine":4,"endColumn":38},{"ruleId":"708","severity":1,"message":"729","line":21,"column":9,"nodeType":"710","messageId":"711","endLine":21,"endColumn":18},{"ruleId":"708","severity":1,"message":"758","line":2,"column":10,"nodeType":"710","messageId":"711","endLine":2,"endColumn":14},{"ruleId":"708","severity":1,"message":"767","line":4,"column":10,"nodeType":"710","messageId":"711","endLine":4,"endColumn":21},{"ruleId":"708","severity":1,"message":"749","line":2,"column":3,"nodeType":"710","messageId":"711","endLine":2,"endColumn":8},{"ruleId":"708","severity":1,"message":"750","line":6,"column":3,"nodeType":"710","messageId":"711","endLine":6,"endColumn":9},{"ruleId":"708","severity":1,"message":"751","line":7,"column":3,"nodeType":"710","messageId":"711","endLine":7,"endColumn":7},{"ruleId":"708","severity":1,"message":"726","line":14,"column":20,"nodeType":"710","messageId":"711","endLine":14,"endColumn":29},{"ruleId":"708","severity":1,"message":"736","line":22,"column":9,"nodeType":"710","messageId":"711","endLine":22,"endColumn":17},{"ruleId":"708","severity":1,"message":"753","line":23,"column":9,"nodeType":"710","messageId":"711","endLine":23,"endColumn":17},{"ruleId":"708","severity":1,"message":"775","line":24,"column":10,"nodeType":"710","messageId":"711","endLine":24,"endColumn":19},{"ruleId":"708","severity":1,"message":"740","line":24,"column":21,"nodeType":"710","messageId":"711","endLine":24,"endColumn":33},{"ruleId":"708","severity":1,"message":"749","line":2,"column":3,"nodeType":"710","messageId":"711","endLine":2,"endColumn":8},{"ruleId":"708","severity":1,"message":"750","line":6,"column":3,"nodeType":"710","messageId":"711","endLine":6,"endColumn":9},{"ruleId":"708","severity":1,"message":"751","line":7,"column":3,"nodeType":"710","messageId":"711","endLine":7,"endColumn":7},{"ruleId":"708","severity":1,"message":"776","line":9,"column":3,"nodeType":"710","messageId":"711","endLine":9,"endColumn":11},{"ruleId":"708","severity":1,"message":"713","line":11,"column":13,"nodeType":"710","messageId":"711","endLine":11,"endColumn":17},{"ruleId":"708","severity":1,"message":"726","line":14,"column":20,"nodeType":"710","messageId":"711","endLine":14,"endColumn":29},{"ruleId":"708","severity":1,"message":"736","line":22,"column":9,"nodeType":"710","messageId":"711","endLine":22,"endColumn":17},{"ruleId":"708","severity":1,"message":"753","line":23,"column":9,"nodeType":"710","messageId":"711","endLine":23,"endColumn":17},{"ruleId":"708","severity":1,"message":"775","line":24,"column":10,"nodeType":"710","messageId":"711","endLine":24,"endColumn":19},{"ruleId":"708","severity":1,"message":"740","line":24,"column":21,"nodeType":"710","messageId":"711","endLine":24,"endColumn":33},{"ruleId":"708","severity":1,"message":"726","line":17,"column":20,"nodeType":"710","messageId":"711","endLine":17,"endColumn":29},{"ruleId":"708","severity":1,"message":"736","line":47,"column":9,"nodeType":"710","messageId":"711","endLine":47,"endColumn":17},{"ruleId":"708","severity":1,"message":"777","line":88,"column":9,"nodeType":"710","messageId":"711","endLine":88,"endColumn":26},{"ruleId":"708","severity":1,"message":"778","line":91,"column":9,"nodeType":"710","messageId":"711","endLine":91,"endColumn":26},{"ruleId":"708","severity":1,"message":"779","line":94,"column":9,"nodeType":"710","messageId":"711","endLine":94,"endColumn":26},{"ruleId":"708","severity":1,"message":"751","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":7},{"ruleId":"708","severity":1,"message":"768","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":17},{"ruleId":"708","severity":1,"message":"769","line":9,"column":3,"nodeType":"710","messageId":"711","endLine":9,"endColumn":10},{"ruleId":"708","severity":1,"message":"780","line":12,"column":8,"nodeType":"710","messageId":"711","endLine":12,"endColumn":11},{"ruleId":"708","severity":1,"message":"781","line":13,"column":8,"nodeType":"710","messageId":"711","endLine":13,"endColumn":12},{"ruleId":"708","severity":1,"message":"738","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":28},{"ruleId":"708","severity":1,"message":"755","line":20,"column":8,"nodeType":"710","messageId":"711","endLine":20,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":21,"column":20,"nodeType":"710","messageId":"711","endLine":21,"endColumn":29},{"ruleId":"708","severity":1,"message":"782","line":22,"column":10,"nodeType":"710","messageId":"711","endLine":22,"endColumn":24},{"ruleId":"708","severity":1,"message":"736","line":26,"column":9,"nodeType":"710","messageId":"711","endLine":26,"endColumn":17},{"ruleId":"708","severity":1,"message":"753","line":27,"column":9,"nodeType":"710","messageId":"711","endLine":27,"endColumn":17},{"ruleId":"708","severity":1,"message":"783","line":35,"column":9,"nodeType":"710","messageId":"711","endLine":35,"endColumn":21},{"ruleId":"708","severity":1,"message":"751","line":1,"column":26,"nodeType":"710","messageId":"711","endLine":1,"endColumn":30},{"ruleId":"708","severity":1,"message":"737","line":4,"column":10,"nodeType":"710","messageId":"711","endLine":4,"endColumn":21},{"ruleId":"708","severity":1,"message":"758","line":4,"column":34,"nodeType":"710","messageId":"711","endLine":4,"endColumn":38},{"ruleId":"708","severity":1,"message":"782","line":10,"column":10,"nodeType":"710","messageId":"711","endLine":10,"endColumn":24},{"ruleId":"708","severity":1,"message":"784","line":19,"column":10,"nodeType":"710","messageId":"711","endLine":19,"endColumn":16},{"ruleId":"708","severity":1,"message":"785","line":19,"column":18,"nodeType":"710","messageId":"711","endLine":19,"endColumn":27},{"ruleId":"708","severity":1,"message":"783","line":20,"column":9,"nodeType":"710","messageId":"711","endLine":20,"endColumn":21},{"ruleId":"722","severity":1,"message":"723","line":23,"column":6,"nodeType":"724","endLine":23,"endColumn":8,"suggestions":"786"},{"ruleId":"708","severity":1,"message":"751","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":7},{"ruleId":"708","severity":1,"message":"768","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":17},{"ruleId":"708","severity":1,"message":"769","line":9,"column":3,"nodeType":"710","messageId":"711","endLine":9,"endColumn":10},{"ruleId":"708","severity":1,"message":"780","line":12,"column":8,"nodeType":"710","messageId":"711","endLine":12,"endColumn":11},{"ruleId":"708","severity":1,"message":"781","line":13,"column":8,"nodeType":"710","messageId":"711","endLine":13,"endColumn":12},{"ruleId":"708","severity":1,"message":"738","line":18,"column":10,"nodeType":"710","messageId":"711","endLine":18,"endColumn":16},{"ruleId":"708","severity":1,"message":"727","line":18,"column":18,"nodeType":"710","messageId":"711","endLine":18,"endColumn":28},{"ruleId":"708","severity":1,"message":"755","line":19,"column":8,"nodeType":"710","messageId":"711","endLine":19,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":20,"column":20,"nodeType":"710","messageId":"711","endLine":20,"endColumn":29},{"ruleId":"708","severity":1,"message":"782","line":21,"column":10,"nodeType":"710","messageId":"711","endLine":21,"endColumn":24},{"ruleId":"708","severity":1,"message":"772","line":24,"column":9,"nodeType":"710","messageId":"711","endLine":24,"endColumn":15},{"ruleId":"708","severity":1,"message":"736","line":25,"column":9,"nodeType":"710","messageId":"711","endLine":25,"endColumn":17},{"ruleId":"708","severity":1,"message":"753","line":26,"column":9,"nodeType":"710","messageId":"711","endLine":26,"endColumn":17},{"ruleId":"708","severity":1,"message":"787","line":27,"column":9,"nodeType":"710","messageId":"711","endLine":27,"endColumn":23},{"ruleId":"708","severity":1,"message":"783","line":34,"column":9,"nodeType":"710","messageId":"711","endLine":34,"endColumn":21},{"ruleId":"708","severity":1,"message":"788","line":7,"column":8,"nodeType":"710","messageId":"711","endLine":7,"endColumn":18},{"ruleId":"708","severity":1,"message":"789","line":8,"column":10,"nodeType":"710","messageId":"711","endLine":8,"endColumn":29},{"ruleId":"708","severity":1,"message":"790","line":13,"column":9,"nodeType":"710","messageId":"711","endLine":13,"endColumn":19},{"ruleId":"708","severity":1,"message":"745","line":22,"column":10,"nodeType":"710","messageId":"711","endLine":22,"endColumn":13},{"ruleId":"708","severity":1,"message":"773","line":22,"column":15,"nodeType":"710","messageId":"711","endLine":22,"endColumn":21},{"ruleId":"708","severity":1,"message":"791","line":24,"column":9,"nodeType":"710","messageId":"711","endLine":24,"endColumn":27},{"ruleId":"708","severity":1,"message":"792","line":29,"column":9,"nodeType":"710","messageId":"711","endLine":29,"endColumn":30},{"ruleId":"708","severity":1,"message":"793","line":35,"column":9,"nodeType":"710","messageId":"711","endLine":35,"endColumn":26},{"ruleId":"722","severity":1,"message":"794","line":54,"column":6,"nodeType":"724","endLine":54,"endColumn":8,"suggestions":"795"},{"ruleId":"708","severity":1,"message":"796","line":1,"column":31,"nodeType":"710","messageId":"711","endLine":1,"endColumn":36},{"ruleId":"708","severity":1,"message":"727","line":6,"column":18,"nodeType":"710","messageId":"711","endLine":6,"endColumn":28},{"ruleId":"708","severity":1,"message":"746","line":1,"column":31,"nodeType":"710","messageId":"711","endLine":1,"endColumn":35},{"ruleId":"708","severity":1,"message":"750","line":1,"column":37,"nodeType":"710","messageId":"711","endLine":1,"endColumn":43},{"ruleId":"708","severity":1,"message":"721","line":6,"column":21,"nodeType":"710","messageId":"711","endLine":6,"endColumn":29},{"ruleId":"722","severity":1,"message":"723","line":17,"column":6,"nodeType":"724","endLine":17,"endColumn":8,"suggestions":"797"},{"ruleId":"708","severity":1,"message":"726","line":5,"column":20,"nodeType":"710","messageId":"711","endLine":5,"endColumn":29},{"ruleId":"708","severity":1,"message":"726","line":5,"column":20,"nodeType":"710","messageId":"711","endLine":5,"endColumn":29},{"ruleId":"708","severity":1,"message":"747","line":6,"column":10,"nodeType":"710","messageId":"711","endLine":6,"endColumn":19},{"ruleId":"708","severity":1,"message":"753","line":12,"column":9,"nodeType":"710","messageId":"711","endLine":12,"endColumn":17},{"ruleId":"708","severity":1,"message":"729","line":16,"column":9,"nodeType":"710","messageId":"711","endLine":16,"endColumn":18},{"ruleId":"708","severity":1,"message":"798","line":25,"column":9,"nodeType":"710","messageId":"711","endLine":25,"endColumn":20},{"ruleId":"708","severity":1,"message":"799","line":29,"column":9,"nodeType":"710","messageId":"711","endLine":29,"endColumn":22},{"ruleId":"708","severity":1,"message":"726","line":11,"column":20,"nodeType":"710","messageId":"711","endLine":11,"endColumn":29},{"ruleId":"708","severity":1,"message":"737","line":13,"column":10,"nodeType":"710","messageId":"711","endLine":13,"endColumn":21},{"ruleId":"708","severity":1,"message":"800","line":18,"column":3,"nodeType":"710","messageId":"711","endLine":18,"endColumn":21},{"ruleId":"708","severity":1,"message":"801","line":21,"column":8,"nodeType":"710","messageId":"711","endLine":21,"endColumn":21},{"ruleId":"708","severity":1,"message":"729","line":39,"column":9,"nodeType":"710","messageId":"711","endLine":39,"endColumn":18},{"ruleId":"708","severity":1,"message":"802","line":57,"column":9,"nodeType":"710","messageId":"711","endLine":57,"endColumn":20},{"ruleId":"708","severity":1,"message":"746","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":7},{"ruleId":"708","severity":1,"message":"726","line":13,"column":20,"nodeType":"710","messageId":"711","endLine":13,"endColumn":29},{"ruleId":"708","severity":1,"message":"747","line":14,"column":26,"nodeType":"710","messageId":"711","endLine":14,"endColumn":35},{"ruleId":"708","severity":1,"message":"726","line":5,"column":20,"nodeType":"710","messageId":"711","endLine":5,"endColumn":29},{"ruleId":"708","severity":1,"message":"803","line":11,"column":9,"nodeType":"710","messageId":"711","endLine":11,"endColumn":20},{"ruleId":"708","severity":1,"message":"804","line":51,"column":9,"nodeType":"710","messageId":"711","endLine":51,"endColumn":21},{"ruleId":"708","severity":1,"message":"805","line":8,"column":9,"nodeType":"710","messageId":"711","endLine":8,"endColumn":38},{"ruleId":"708","severity":1,"message":"806","line":3,"column":33,"nodeType":"710","messageId":"711","endLine":3,"endColumn":38},{"ruleId":"708","severity":1,"message":"730","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":23},{"ruleId":"708","severity":1,"message":"731","line":1,"column":8,"nodeType":"710","messageId":"711","endLine":1,"endColumn":13},{"ruleId":"732","severity":1,"message":"733","line":540,"column":34,"nodeType":"734","messageId":"735","endLine":540,"endColumn":35},{"ruleId":"708","severity":1,"message":"774","line":1,"column":15,"nodeType":"710","messageId":"711","endLine":1,"endColumn":18},{"ruleId":"708","severity":1,"message":"713","line":2,"column":13,"nodeType":"710","messageId":"711","endLine":2,"endColumn":17},{"ruleId":"708","severity":1,"message":"743","line":1,"column":15,"nodeType":"710","messageId":"711","endLine":1,"endColumn":24},{"ruleId":"708","severity":1,"message":"744","line":1,"column":26,"nodeType":"710","messageId":"711","endLine":1,"endColumn":29},{"ruleId":"708","severity":1,"message":"726","line":4,"column":20,"nodeType":"710","messageId":"711","endLine":4,"endColumn":29},{"ruleId":"708","severity":1,"message":"807","line":8,"column":10,"nodeType":"710","messageId":"711","endLine":8,"endColumn":18},{"ruleId":"708","severity":1,"message":"808","line":15,"column":10,"nodeType":"710","messageId":"711","endLine":15,"endColumn":18},{"ruleId":"708","severity":1,"message":"753","line":17,"column":9,"nodeType":"710","messageId":"711","endLine":17,"endColumn":17},{"ruleId":"708","severity":1,"message":"809","line":41,"column":9,"nodeType":"710","messageId":"711","endLine":41,"endColumn":29},{"ruleId":"708","severity":1,"message":"803","line":44,"column":9,"nodeType":"710","messageId":"711","endLine":44,"endColumn":20},{"ruleId":"708","severity":1,"message":"729","line":45,"column":9,"nodeType":"710","messageId":"711","endLine":45,"endColumn":18},{"ruleId":"708","severity":1,"message":"810","line":46,"column":9,"nodeType":"710","messageId":"711","endLine":46,"endColumn":16},{"ruleId":"708","severity":1,"message":"811","line":47,"column":9,"nodeType":"710","messageId":"711","endLine":47,"endColumn":21},{"ruleId":"708","severity":1,"message":"751","line":1,"column":31,"nodeType":"710","messageId":"711","endLine":1,"endColumn":35},{"ruleId":"708","severity":1,"message":"750","line":1,"column":37,"nodeType":"710","messageId":"711","endLine":1,"endColumn":43},{"ruleId":"708","severity":1,"message":"770","line":1,"column":45,"nodeType":"710","messageId":"711","endLine":1,"endColumn":50},{"ruleId":"708","severity":1,"message":"758","line":2,"column":10,"nodeType":"710","messageId":"711","endLine":2,"endColumn":14},{"ruleId":"708","severity":1,"message":"767","line":3,"column":10,"nodeType":"710","messageId":"711","endLine":3,"endColumn":21},{"ruleId":"708","severity":1,"message":"754","line":3,"column":23,"nodeType":"710","messageId":"711","endLine":3,"endColumn":34},{"ruleId":"708","severity":1,"message":"721","line":4,"column":10,"nodeType":"710","messageId":"711","endLine":4,"endColumn":18},{"ruleId":"708","severity":1,"message":"726","line":4,"column":20,"nodeType":"710","messageId":"711","endLine":4,"endColumn":29},{"ruleId":"708","severity":1,"message":"812","line":6,"column":8,"nodeType":"710","messageId":"711","endLine":6,"endColumn":14},{"ruleId":"708","severity":1,"message":"743","line":3,"column":3,"nodeType":"710","messageId":"711","endLine":3,"endColumn":12},{"ruleId":"708","severity":1,"message":"744","line":4,"column":3,"nodeType":"710","messageId":"711","endLine":4,"endColumn":6},{"ruleId":"708","severity":1,"message":"770","line":7,"column":3,"nodeType":"710","messageId":"711","endLine":7,"endColumn":8},{"ruleId":"708","severity":1,"message":"746","line":8,"column":3,"nodeType":"710","messageId":"711","endLine":8,"endColumn":7},{"ruleId":"708","severity":1,"message":"726","line":12,"column":20,"nodeType":"710","messageId":"711","endLine":12,"endColumn":29},{"ruleId":"708","severity":1,"message":"753","line":19,"column":9,"nodeType":"710","messageId":"711","endLine":19,"endColumn":17},{"ruleId":"708","severity":1,"message":"813","line":21,"column":10,"nodeType":"710","messageId":"711","endLine":21,"endColumn":17},{"ruleId":"708","severity":1,"message":"729","line":23,"column":9,"nodeType":"710","messageId":"711","endLine":23,"endColumn":18},{"ruleId":"708","severity":1,"message":"810","line":25,"column":9,"nodeType":"710","messageId":"711","endLine":25,"endColumn":16},{"ruleId":"708","severity":1,"message":"799","line":39,"column":9,"nodeType":"710","messageId":"711","endLine":39,"endColumn":22},"no-unused-vars","'NavigationBar' is defined but never used.","Identifier","unusedVar","'Organizer' is defined but never used.","'Icon' is defined but never used.","'isHidden' is assigned a value but never used.","'setIsHidden' is assigned a value but never used.","'ReactPlayer' is defined but never used.","'coverImg' is defined but never used.","'fifa23' is defined but never used.","'logo' is defined but never used.","'tournament' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["814"],"'useEffect' is defined but never used.","'compareAsc' is defined but never used.","'updateFormData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'getDefaultMiddleware' is defined but never used.","'axios' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'navigate' is assigned a value but never used.","'useNavigate' is defined but never used.","'format' is defined but never used.",["815"],"'setIsCheckIn' is assigned a value but never used.",["816"],["817"],"'Container' is defined but never used.","'Row' is defined but never used.","'key' is assigned a value but never used.","'Card' is defined but never used.","'logInData' is defined but never used.","'token' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'fifa' is defined but never used.","'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'DatePicker' is defined but never used.",["818"],"'API_KEY' is assigned a value but never used.","'Link' is defined but never used.","'getUsers' is defined but never used.","'userChat' is defined but never used.","'PROD_URL' is assigned a value but never used.","'onlineUsers' is assigned a value but never used.","'setOnlineUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'signInCredentials.accessToken'. Either include them or remove the dependency array.",["819"],"'NavDropdown' is defined but never used.","'useSelector' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Alert' is defined but never used.","'Swords' is defined but never used.","'params' is assigned a value but never used.","'setKey' is assigned a value but never used.","'Col' is defined but never used.","'isCheckIn' is assigned a value but never used.","'Dropdown' is defined but never used.","'handleTiebreaker1' is assigned a value but never used.","'handleTiebreaker2' is assigned a value but never used.","'handleTiebreaker3' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'editTournament' is defined but never used.","'handleUpdate' is assigned a value but never used.","'update' is assigned a value but never used.","'setUpdate' is assigned a value but never used.",["820"],"'tournamentData' is assigned a value but never used.","'profilePic' is defined but never used.","'CircularProgressbar' is defined but never used.","'percentage' is assigned a value but never used.","'userPreferenceData' is assigned a value but never used.","'handleTournamentCheck' is assigned a value but never used.","'handleLeagueCheck' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allRating' and 'dispatch'. Either include them or remove the dependency array.",["821"],"'Table' is defined but never used.",["822"],"'handleCheck' is assigned a value but never used.","'loginFormData' is assigned a value but never used.","'postProfilePicture' is defined but never used.","'DeleteConfirm' is defined but never used.","'handleTerms' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleOrganizerAccountClicked' is assigned a value but never used.","'Route' is defined but never used.","'isSignIn' is assigned a value but never used.","'response' is assigned a value but never used.","'registrationResponse' is assigned a value but never used.","'isError' is assigned a value but never used.","'registerData' is assigned a value but never used.","'SignUp' is defined but never used.","'sign_in' is assigned a value but never used.",{"desc":"823","fix":"824"},{"desc":"823","fix":"825"},{"desc":"823","fix":"826"},{"desc":"823","fix":"827"},{"desc":"823","fix":"828"},{"desc":"829","fix":"830"},{"desc":"823","fix":"831"},{"desc":"832","fix":"833"},{"desc":"823","fix":"834"},"Update the dependencies array to be: [dispatch]",{"range":"835","text":"836"},{"range":"837","text":"836"},{"range":"838","text":"836"},{"range":"839","text":"836"},{"range":"840","text":"836"},"Update the dependencies array to be: [dispatch, navigate, searchParams, signInCredentials.accessToken]",{"range":"841","text":"842"},{"range":"843","text":"836"},"Update the dependencies array to be: [allRating, dispatch]",{"range":"844","text":"845"},{"range":"846","text":"836"},[967,969],"[dispatch]",[1188,1190],[1304,1306],[1148,1150],[1048,1050],[1646,1670],"[dispatch, navigate, searchParams, signInCredentials.accessToken]",[901,903],[1776,1778],"[allRating, dispatch]",[659,661]]