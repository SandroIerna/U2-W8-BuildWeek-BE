{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst AbstractNavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    active,\n    className,\n    eventKey,\n    onSelect,\n    onClick,\n    as: Component,\n    ...props\n  } = _ref;\n  const navKey = makeEventKey(eventKey, props.href);\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  let isActive = active;\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(navKey);\n    const contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, `[react-bootstrap] The provided id '${props.id}' was overwritten by the current navContext with '${contextControllerId}'.`) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], `[react-bootstrap] The provided aria-controls value '${props['aria-controls']}' was overwritten by the current navContext with '${contextControlledId}'.`) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n    props['aria-selected'] = isActive;\n  }\n  const handleOnclick = useEventCallback(e => {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  });\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","map":{"version":3,"names":["classNames","React","useContext","useEventCallback","warning","NavContext","SelectableContext","makeEventKey","jsx","_jsx","defaultProps","disabled","AbstractNavItem","forwardRef","ref","active","className","eventKey","onSelect","onClick","as","Component","props","navKey","href","parentOnSelect","navContext","isActive","role","contextControllerId","getControllerId","contextControlledId","getControlledId","process","env","NODE_ENV","id","activeKey","tabIndex","handleOnclick","e"],"sources":["C:/Users/siuol/Documents/Impuls_Gaming_Project/impuls-gaming/node_modules/react-bootstrap/esm/AbstractNavItem.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst AbstractNavItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  className,\n  eventKey,\n  onSelect,\n  onClick,\n  as: Component,\n  ...props\n}, ref) => {\n  const navKey = makeEventKey(eventKey, props.href);\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  let isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(navKey);\n    const contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, `[react-bootstrap] The provided id '${props.id}' was overwritten by the current navContext with '${contextControllerId}'.`) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], `[react-bootstrap] The provided aria-controls value '${props['aria-controls']}' was overwritten by the current navContext with '${contextControlledId}'.`) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  const handleOnclick = useEventCallback(e => {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  });\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}