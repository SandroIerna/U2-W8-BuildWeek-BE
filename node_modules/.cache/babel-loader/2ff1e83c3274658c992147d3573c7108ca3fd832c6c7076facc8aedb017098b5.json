{"ast":null,"code":"import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport giftData from \"../reducers/giftCard\";\nimport localStorage from \"redux-persist/lib/storage\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\nimport loginData from \"../reducers/login\";\nimport userChat from \"../reducers/userChat\";\nimport tournaments from \"../reducers/getTournaments\";\nimport userPreference from \"../reducers/userPreference\";\nimport userData from \"../reducers/userData\";\nimport users from \"../reducers/usersReducer.js\";\nconst persistConfig = {\n  key: \"root\",\n  storage: localStorage,\n  transforms: [encryptTransform({\n    secretKey: \"E1a2g3le\"\n  })]\n};\nconst bigReducer = combineReducers({\n  giftData: giftData,\n  log: loginData,\n  userChat: userChat,\n  tournaments: tournaments,\n  preference: userPreference,\n  userData: userData,\n  users: users\n});\nconst persistedReducer = persistReducer(persistConfig, bigReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport default store;\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","getDefaultMiddleware","giftData","localStorage","persistReducer","persistStore","encryptTransform","loginData","userChat","tournaments","userPreference","userData","users","persistConfig","key","storage","transforms","secretKey","bigReducer","log","preference","persistedReducer","store","reducer","middleware","serializableCheck","persistor"],"sources":["C:/Users/siuol/Documents/Impuls_Gaming_Project/impuls-gaming/src/redux/store/index.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport giftData from \"../reducers/giftCard\";\r\nimport localStorage from \"redux-persist/lib/storage\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\r\nimport loginData from \"../reducers/login\";\r\nimport userChat from \"../reducers/userChat\";\r\nimport tournaments from \"../reducers/getTournaments\";\r\nimport userPreference from \"../reducers/userPreference\";\r\nimport userData from \"../reducers/userData\";\r\nimport users from \"../reducers/usersReducer.js\";\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: localStorage,\r\n  transforms: [\r\n    encryptTransform({\r\n      secretKey: \"E1a2g3le\",\r\n    }),\r\n  ],\r\n};\r\n\r\nconst bigReducer = combineReducers({\r\n  giftData: giftData,\r\n  log: loginData,\r\n  userChat: userChat,\r\n  tournaments: tournaments,\r\n  preference: userPreference,\r\n  userData: userData,\r\n  users: users,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, bigReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\nexport default store;\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,eAAe,EACfC,oBAAoB,QACf,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEZ,YAAY;EACrBa,UAAU,EAAE,CACVV,gBAAgB,CAAC;IACfW,SAAS,EAAE;EACb,CAAC,CAAC;AAEN,CAAC;AAED,MAAMC,UAAU,GAAGlB,eAAe,CAAC;EACjCE,QAAQ,EAAEA,QAAQ;EAClBiB,GAAG,EAAEZ,SAAS;EACdC,QAAQ,EAAEA,QAAQ;EAClBC,WAAW,EAAEA,WAAW;EACxBW,UAAU,EAAEV,cAAc;EAC1BC,QAAQ,EAAEA,QAAQ;EAClBC,KAAK,EAAEA;AACT,CAAC,CAAC;AAEF,MAAMS,gBAAgB,GAAGjB,cAAc,CAACS,aAAa,EAAEK,UAAU,CAAC;AAElE,MAAMI,KAAK,GAAGvB,cAAc,CAAC;EAC3BwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGvB,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBwB,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AACF,eAAeH,KAAK;AACpB,OAAO,MAAMI,SAAS,GAAGrB,YAAY,CAACiB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}