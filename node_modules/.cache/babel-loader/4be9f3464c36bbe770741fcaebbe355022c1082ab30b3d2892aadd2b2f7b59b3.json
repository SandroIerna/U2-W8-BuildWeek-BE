{"ast":null,"code":"import axios from \"axios\";\nexport const GIFT_CARD_DATA = \" GIFT_CARD_DATA\";\nexport const USER_DATA = \" USER_DATA\";\nexport const REGISTER_USER_LOADING = \"REGISTER_USER_LOADING\";\nexport const REGISTER_USER = \"REGISTER_USER\";\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\nexport const GET_ME = \"GET_ME\";\nexport const GET_ME_LOADING = \"GET_ME_LOADING\";\nexport const GET_ME_ERROR = \"GET_ME_ERROR\";\nexport const GET_LOGIN_ACCESSTOKEN = \"GET_LOGIN_ACCESSTOKEN\";\nexport const GET_LOGIN_ACCESSTOKEN_LOADING = \"GET_LOGIN_ACCESSTOKEN_LOADING\";\nexport const GET_LOGIN_ACCESSTOKEN_ERROR = \"GET_LOGIN_ACCESSTOKEN_ERROR\";\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN = \"GET_ADMIN_LOGIN_ACCESSTOKEN\";\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING = \"GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING\";\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR = \"GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR\";\nexport const POST_TOURNAMENT = \" POST_TOURNAMENT\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_TOURNAMENTS = \"GET_TOURNAMENTS\";\nexport const GET_TOURNAMENTS_LOADING = \"GET_TOURNAMENTS_LOADING\";\nexport const GET_TOURNAMENTS_ERROR = \"GET_TOURNAMENTS_ERROR\";\nexport const GET_USERS_LOADING = \"GET_USERS_LOADING\";\nexport const GET_USERS_ERROR = \"GET_USERS_ERROR\";\nexport const USER_PREFERENCE_DATA = \" USER_PREFERENCE_DATA\";\nexport const NEW_TOURNAMENT_DATA = \" NEW_TOURNAMENT_DATA\";\nexport const USER_CHAT_DATA = \" USER_CHAT_DATA\";\nexport const GIFT_CARD_DATA_ERROR = \" GIFT_CARD_DATA_ERROR\";\nexport const GIFT_CARD_DATA_LOADING = \" GIFT_CARD_DATA_LOADING\";\nexport const LOG_IN_DATA = \" LOG_IN_DATA\";\nexport const LOG_IN_DATA_ERROR = \" LOG_IN_DATA_ERROR\";\nexport const LOG_IN_DATA_LOADING = \" GIFT_CARD_DATA_LOADING\";\nexport const USER_CHAT_DATA_ERROR = \" USER_CHAT_DATA_ERROR\";\nexport const USER_CHAT_DATA_LOADING = \" USER_CHAT_DATA_LOADING\";\nexport const USER_PREFERENCE_DATA_ERROR = \" USER_PREFERENCE_DATA_ERROR\";\nexport const USER_PREFERENCE_DATA_LOADING = \" USER_PREFERENCE_DATA_LOADING\";\nexport const USER_DATA_ERROR = \" USER_DATA_ERROR\";\nexport const USER_DATA_LOADING = \" USER_DATA_LOADING\";\n\n// export const getUsers = () => {\n//   return async (dispatch) => {\n//     const options = {\n//       method: \"GET\",\n//     };\n//     const URL = process.cwd.REACT_APP_BE_DEV_URL;\n//     try {\n//       const response = fetch(`http://localhost:3001/users`, options);\n//       console.log(\"I AM THE CALLER\");\n//       if (response.ok) {\n//         const users = await response.json();\n//         dispatch({\n//           type: GET_USERS,\n//           payload: users,\n//         });\n//         setTimeout(() => {\n//           dispatch({\n//             type: GET_USERS_LOADING,\n//             payload: false,\n//           });\n//         }, 100);\n//       } else {\n//         console.log(\"error\");\n//         dispatch({\n//           type: GET_USERS_LOADING,\n//           payload: false,\n//         });\n\n//         dispatch({\n//           type: GET_USERS_ERROR,\n//           payload: true,\n//         });\n//       }\n//     } catch (error) {\n//       console.log(error);\n//       dispatch({\n//         type: GET_USERS_LOADING,\n//         payload: false,\n//       });\n//       dispatch({\n//         type: GET_USERS_ERROR,\n//         payload: true,\n//       });\n//     }\n//   };\n// };\nexport const registerUser = userData => {\n  return async dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      let response = await fetch(`${URL}/users/register`, options);\n      if (response.ok) {\n        const userData = await response.json();\n        dispatch({\n          type: REGISTER_USER,\n          payload: userData\n        });\n        setTimeout(() => {\n          dispatch({\n            type: REGISTER_USER_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: REGISTER_USER_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: REGISTER_USER_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTER_USER_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const createTournament = data => {\n  return async dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/tournaments`, options);\n      if (response.ok) {\n        const tournament = await response.json();\n        getUsers(`${URL}/users?limit=10`);\n        getTournaments();\n        dispatch({\n          type: POST_TOURNAMENT,\n          payload: tournament\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const editTournament = (data, tournamentId) => {\n  return async dispatch => {\n    const options = {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/tournaments/${tournamentId}`, options);\n      if (response.ok) {\n        // const tournament = await response.json();\n        // getUsers(`${URL}/users?limit=10`);\n        getTournaments();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const signIn = data => {\n  return async dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/users/login`, options);\n      if (response.ok) {\n        const accessToken = await response.json();\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN,\n          payload: accessToken\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_LOGIN_ACCESSTOKEN_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_LOGIN_ACCESSTOKEN_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_LOGIN_ACCESSTOKEN_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const logout = userId => {\n  return async dispatch => {\n    const options = {\n      method: \"GET\"\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/users/logout/${userId}`, options);\n      if (response.ok) {\n        const accessToken = await response.json();\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN,\n          payload: accessToken\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_LOGIN_ACCESSTOKEN_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_LOGIN_ACCESSTOKEN_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_LOGIN_ACCESSTOKEN_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_LOGIN_ACCESSTOKEN_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const adminLogout = userId => {\n  return async dispatch => {\n    const options = {\n      method: \"GET\"\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/users/logout/${userId}`, options);\n      if (response.ok) {\n        const accessToken = await response.json();\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN,\n          payload: accessToken\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const postProfilePicture = (accessToken, formData, userId) => {\n  return async dispatch => {\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    axios({\n      url: `${URL}/files/${userId}/avatar`,\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      },\n      data: formData\n    }).then(function () {\n      getUsers();\n      getMe(accessToken);\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (response) {\n      console.log(response);\n    });\n  };\n};\nexport const adminSignIn = data => {\n  return async dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/users/admin/login`, options);\n      if (response.ok) {\n        const accessToken = await response.json();\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN,\n          payload: accessToken\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const registerTournament = (data, tournamentId) => {\n  return async dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/tournaments/${tournamentId}/participants`, options);\n      if (response.ok) {\n        // const tournament = await response.json();\n        // getUsers(`${URL}/users?limit=10`);\n        getTournaments();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const deleteTournament = id => {\n  return async () => {\n    const options = {\n      method: \"DELETE\"\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      const response = await fetch(`${URL}/tournaments/${id}`, options);\n      console.log(response.ok);\n      if (response.ok || response === 204) {\n        getTournaments();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getTournaments = () => {\n  return async dispatch => {\n    const options = {\n      method: \"GET\"\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      let response = await fetch(`${URL}/tournaments`, options);\n      if (response.ok) {\n        const tournaments = await response.json();\n        dispatch({\n          type: GET_TOURNAMENTS,\n          payload: tournaments\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_TOURNAMENTS_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_TOURNAMENTS_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_TOURNAMENTS_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_TOURNAMENTS_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_TOURNAMENTS_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const getUsers = accessToken => {\n  return async dispatch => {\n    const options = {\n      method: \"GET\"\n    };\n    try {\n      let response = await fetch(URL, options);\n      if (response.ok) {\n        const users = await response.json();\n        dispatch({\n          type: GET_USERS,\n          payload: users\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_USERS_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_USERS_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_USERS_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_USERS_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_USERS_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const getMe = accessToken => {\n  return async dispatch => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + `${accessToken}`\n      }\n    };\n    const URL = process.env.REACT_APP_BE_PROD_URL;\n    try {\n      let response = await fetch(`${URL}/users/me`, options);\n      if (response.ok) {\n        const me = await response.json();\n        dispatch({\n          type: GET_ME,\n          payload: me\n        });\n        setTimeout(() => {\n          dispatch({\n            type: GET_ME_LOADING,\n            payload: false\n          });\n        }, 100);\n        // window.location.href = \"/user-page\";\n      } else {\n        console.log(\"error\");\n        dispatch({\n          type: GET_ME_LOADING,\n          payload: false\n        });\n        dispatch({\n          type: GET_ME_ERROR,\n          payload: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_ME_LOADING,\n        payload: false\n      });\n      dispatch({\n        type: GET_ME_ERROR,\n        payload: true\n      });\n    }\n  };\n};\nexport const giftCardInf = data => {\n  return {\n    type: GIFT_CARD_DATA,\n    payload: data\n  };\n};\nexport const logInData = data => {\n  return {\n    type: LOG_IN_DATA,\n    payload: data\n  };\n};\nexport const userChat = data => {\n  return {\n    type: USER_CHAT_DATA,\n    payload: data\n  };\n};\nexport const userPreference = data => {\n  return {\n    type: USER_PREFERENCE_DATA,\n    payload: data\n  };\n};\nexport const userData = data => {\n  return {\n    type: USER_PREFERENCE_DATA,\n    payload: data\n  };\n};","map":{"version":3,"names":["axios","GIFT_CARD_DATA","USER_DATA","REGISTER_USER_LOADING","REGISTER_USER","REGISTER_USER_ERROR","GET_ME","GET_ME_LOADING","GET_ME_ERROR","GET_LOGIN_ACCESSTOKEN","GET_LOGIN_ACCESSTOKEN_LOADING","GET_LOGIN_ACCESSTOKEN_ERROR","GET_ADMIN_LOGIN_ACCESSTOKEN","GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING","GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR","POST_TOURNAMENT","GET_USERS","GET_TOURNAMENTS","GET_TOURNAMENTS_LOADING","GET_TOURNAMENTS_ERROR","GET_USERS_LOADING","GET_USERS_ERROR","USER_PREFERENCE_DATA","NEW_TOURNAMENT_DATA","USER_CHAT_DATA","GIFT_CARD_DATA_ERROR","GIFT_CARD_DATA_LOADING","LOG_IN_DATA","LOG_IN_DATA_ERROR","LOG_IN_DATA_LOADING","USER_CHAT_DATA_ERROR","USER_CHAT_DATA_LOADING","USER_PREFERENCE_DATA_ERROR","USER_PREFERENCE_DATA_LOADING","USER_DATA_ERROR","USER_DATA_LOADING","registerUser","userData","dispatch","options","method","headers","Accept","body","JSON","stringify","URL","process","env","REACT_APP_BE_PROD_URL","response","fetch","ok","json","type","payload","setTimeout","console","log","error","createTournament","data","tournament","getUsers","getTournaments","editTournament","tournamentId","signIn","accessToken","logout","userId","adminLogout","postProfilePicture","formData","url","Authorization","then","getMe","catch","adminSignIn","registerTournament","deleteTournament","id","tournaments","users","me","giftCardInf","logInData","userChat","userPreference"],"sources":["C:/Users/siuol/Documents/Impuls_Gaming_Project/impuls-gaming/src/redux/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GIFT_CARD_DATA = \" GIFT_CARD_DATA\";\r\nexport const USER_DATA = \" USER_DATA\";\r\nexport const REGISTER_USER_LOADING = \"REGISTER_USER_LOADING\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\r\n\r\nexport const GET_ME = \"GET_ME\";\r\nexport const GET_ME_LOADING = \"GET_ME_LOADING\";\r\nexport const GET_ME_ERROR = \"GET_ME_ERROR\";\r\n\r\nexport const GET_LOGIN_ACCESSTOKEN = \"GET_LOGIN_ACCESSTOKEN\";\r\nexport const GET_LOGIN_ACCESSTOKEN_LOADING = \"GET_LOGIN_ACCESSTOKEN_LOADING\";\r\nexport const GET_LOGIN_ACCESSTOKEN_ERROR = \"GET_LOGIN_ACCESSTOKEN_ERROR\";\r\n\r\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN = \"GET_ADMIN_LOGIN_ACCESSTOKEN\";\r\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING =\r\n  \"GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING\";\r\nexport const GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR =\r\n  \"GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR\";\r\n\r\nexport const POST_TOURNAMENT = \" POST_TOURNAMENT\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_TOURNAMENTS = \"GET_TOURNAMENTS\";\r\nexport const GET_TOURNAMENTS_LOADING = \"GET_TOURNAMENTS_LOADING\";\r\nexport const GET_TOURNAMENTS_ERROR = \"GET_TOURNAMENTS_ERROR\";\r\nexport const GET_USERS_LOADING = \"GET_USERS_LOADING\";\r\nexport const GET_USERS_ERROR = \"GET_USERS_ERROR\";\r\nexport const USER_PREFERENCE_DATA = \" USER_PREFERENCE_DATA\";\r\nexport const NEW_TOURNAMENT_DATA = \" NEW_TOURNAMENT_DATA\";\r\nexport const USER_CHAT_DATA = \" USER_CHAT_DATA\";\r\n\r\nexport const GIFT_CARD_DATA_ERROR = \" GIFT_CARD_DATA_ERROR\";\r\nexport const GIFT_CARD_DATA_LOADING = \" GIFT_CARD_DATA_LOADING\";\r\nexport const LOG_IN_DATA = \" LOG_IN_DATA\";\r\nexport const LOG_IN_DATA_ERROR = \" LOG_IN_DATA_ERROR\";\r\nexport const LOG_IN_DATA_LOADING = \" GIFT_CARD_DATA_LOADING\";\r\nexport const USER_CHAT_DATA_ERROR = \" USER_CHAT_DATA_ERROR\";\r\nexport const USER_CHAT_DATA_LOADING = \" USER_CHAT_DATA_LOADING\";\r\nexport const USER_PREFERENCE_DATA_ERROR = \" USER_PREFERENCE_DATA_ERROR\";\r\nexport const USER_PREFERENCE_DATA_LOADING = \" USER_PREFERENCE_DATA_LOADING\";\r\nexport const USER_DATA_ERROR = \" USER_DATA_ERROR\";\r\nexport const USER_DATA_LOADING = \" USER_DATA_LOADING\";\r\n\r\n// export const getUsers = () => {\r\n//   return async (dispatch) => {\r\n//     const options = {\r\n//       method: \"GET\",\r\n//     };\r\n//     const URL = process.cwd.REACT_APP_BE_DEV_URL;\r\n//     try {\r\n//       const response = fetch(`http://localhost:3001/users`, options);\r\n//       console.log(\"I AM THE CALLER\");\r\n//       if (response.ok) {\r\n//         const users = await response.json();\r\n//         dispatch({\r\n//           type: GET_USERS,\r\n//           payload: users,\r\n//         });\r\n//         setTimeout(() => {\r\n//           dispatch({\r\n//             type: GET_USERS_LOADING,\r\n//             payload: false,\r\n//           });\r\n//         }, 100);\r\n//       } else {\r\n//         console.log(\"error\");\r\n//         dispatch({\r\n//           type: GET_USERS_LOADING,\r\n//           payload: false,\r\n//         });\r\n\r\n//         dispatch({\r\n//           type: GET_USERS_ERROR,\r\n//           payload: true,\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       dispatch({\r\n//         type: GET_USERS_LOADING,\r\n//         payload: false,\r\n//       });\r\n//       dispatch({\r\n//         type: GET_USERS_ERROR,\r\n//         payload: true,\r\n//       });\r\n//     }\r\n//   };\r\n// };\r\nexport const registerUser = (userData) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      let response = await fetch(`${URL}/users/register`, options);\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        dispatch({\r\n          type: REGISTER_USER,\r\n          payload: userData,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: REGISTER_USER_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: REGISTER_USER_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: REGISTER_USER_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch({\r\n        type: REGISTER_USER_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: REGISTER_USER_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const createTournament = (data) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/tournaments`, options);\r\n      if (response.ok) {\r\n        const tournament = await response.json();\r\n        getUsers(`${URL}/users?limit=10`);\r\n        getTournaments();\r\n        dispatch({\r\n          type: POST_TOURNAMENT,\r\n          payload: tournament,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const editTournament = (data, tournamentId) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(\r\n        `${URL}/tournaments/${tournamentId}`,\r\n        options\r\n      );\r\n      if (response.ok) {\r\n        // const tournament = await response.json();\r\n        // getUsers(`${URL}/users?limit=10`);\r\n        getTournaments();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const signIn = (data) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/users/login`, options);\r\n      if (response.ok) {\r\n        const accessToken = await response.json();\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN,\r\n          payload: accessToken,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_LOGIN_ACCESSTOKEN_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const logout = (userId) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/users/logout/${userId}`, options);\r\n      if (response.ok) {\r\n        const accessToken = await response.json();\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN,\r\n          payload: accessToken,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_LOGIN_ACCESSTOKEN_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: GET_LOGIN_ACCESSTOKEN_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_LOGIN_ACCESSTOKEN_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const adminLogout = (userId) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/users/logout/${userId}`, options);\r\n      if (response.ok) {\r\n        const accessToken = await response.json();\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN,\r\n          payload: accessToken,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const postProfilePicture = (accessToken, formData, userId) => {\r\n  return async (dispatch) => {\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n\r\n    axios({\r\n      url: `${URL}/files/${userId}/avatar`,\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: formData,\r\n    })\r\n      .then(function () {\r\n        getUsers();\r\n        getMe(accessToken);\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (response) {\r\n        console.log(response);\r\n      });\r\n  };\r\n};\r\n\r\nexport const adminSignIn = (data) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/users/admin/login`, options);\r\n      if (response.ok) {\r\n        const accessToken = await response.json();\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN,\r\n          payload: accessToken,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ADMIN_LOGIN_ACCESSTOKEN_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const registerTournament = (data, tournamentId) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(\r\n        `${URL}/tournaments/${tournamentId}/participants`,\r\n        options\r\n      );\r\n      if (response.ok) {\r\n        // const tournament = await response.json();\r\n        // getUsers(`${URL}/users?limit=10`);\r\n        getTournaments();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const deleteTournament = (id) => {\r\n  return async () => {\r\n    const options = {\r\n      method: \"DELETE\",\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      const response = await fetch(`${URL}/tournaments/${id}`, options);\r\n      console.log(response.ok);\r\n      if (response.ok || response === 204) {\r\n        getTournaments();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getTournaments = () => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n    try {\r\n      let response = await fetch(`${URL}/tournaments`, options);\r\n      if (response.ok) {\r\n        const tournaments = await response.json();\r\n        dispatch({\r\n          type: GET_TOURNAMENTS,\r\n          payload: tournaments,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_TOURNAMENTS_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_TOURNAMENTS_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_TOURNAMENTS_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch({\r\n        type: GET_TOURNAMENTS_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_TOURNAMENTS_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUsers = (accessToken) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(URL, options);\r\n      if (response.ok) {\r\n        const users = await response.json();\r\n        dispatch({\r\n          type: GET_USERS,\r\n          payload: users,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_USERS_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_USERS_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_USERS_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch({\r\n        type: GET_USERS_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_USERS_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const getMe = (accessToken) => {\r\n  return async (dispatch) => {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + `${accessToken}`,\r\n      },\r\n    };\r\n    const URL = process.env.REACT_APP_BE_PROD_URL;\r\n\r\n    try {\r\n      let response = await fetch(`${URL}/users/me`, options);\r\n      if (response.ok) {\r\n        const me = await response.json();\r\n        dispatch({\r\n          type: GET_ME,\r\n          payload: me,\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: GET_ME_LOADING,\r\n            payload: false,\r\n          });\r\n        }, 100);\r\n        // window.location.href = \"/user-page\";\r\n      } else {\r\n        console.log(\"error\");\r\n\r\n        dispatch({\r\n          type: GET_ME_LOADING,\r\n          payload: false,\r\n        });\r\n        dispatch({\r\n          type: GET_ME_ERROR,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch({\r\n        type: GET_ME_LOADING,\r\n        payload: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ME_ERROR,\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const giftCardInf = (data) => {\r\n  return {\r\n    type: GIFT_CARD_DATA,\r\n    payload: data,\r\n  };\r\n};\r\nexport const logInData = (data) => {\r\n  return {\r\n    type: LOG_IN_DATA,\r\n    payload: data,\r\n  };\r\n};\r\nexport const userChat = (data) => {\r\n  return {\r\n    type: USER_CHAT_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const userPreference = (data) => {\r\n  return {\r\n    type: USER_PREFERENCE_DATA,\r\n    payload: data,\r\n  };\r\n};\r\nexport const userData = (data) => {\r\n  return {\r\n    type: USER_PREFERENCE_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}